//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LTZN.Repository
{
    using System;
    using System.Data;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Reflection;
    using System.Data.OracleClient;

    public enum DataStateType
    {
        UnChanged, Add, Update, Delete
    }
    public interface IFilter
    {
        void Filter(Dictionary<string, string> para);
    }
    public partial class JiShuYueBao : INotifyPropertyChanged
    {
        private int _P年;
        private int _P月;
        private string _P01单位 = "";
        private string _P02项目 = "";
        private double? _P03全铁产量;
        private double? _P04合格铁;
        private double? _P05制钢铁;
        private double? _P06铸造铁;
        private double? _P07折合产量;
        private double? _P08合格率;
        private double? _P09一级品率;
        private double? _P10送炼钢优质铁水率;
        private double? _P11高炉利用系数;
        private double? _P12入炉焦炭冶炼强度;
        private double? _P13综合焦炭冶炼强度;
        private double? _P14折算综合焦比;
        private double? _P15折合入炉焦比;
        private double? _P16入炉矿品位;
        private double? _P17熟料比;
        private double? _P18入炉焦炭负荷;
        private double? _P19综合焦炭负荷;
        private double? _P20休风时间;
        private double? _P21休风率;
        private double? _P22慢风时间;
        private double? _P23慢风率;
        private double? _P24煤气成分CO2;
        private double? _P25煤气成分计算1;
        private double? _P26生铁表面质量;
        private double? _P27深料线作业率;
        private double? _P28回收率;
        private double? _P29冷风流量;
        private double? _P30平均风温;
        private double? _P31风速;
        private double? _P32热风压力;
        private double? _P33炉顶压力;
        private double? _P34炉顶温度;
        private double? _P35富氧率;
        private double? _P36高压率;
        private double? _P37悬料次数;
        private double? _P38坐料次数;
        private double? _P39崩料次数;
        private double? _P40风口大套损坏数;
        private double? _P41风口中套损坏数;
        private double? _P42风口小套损坏数;
        private double? _P43渣口大套损坏数;
        private double? _P44渣口中套损坏数;
        private double? _P45渣口小套损坏数;
        private double? _P46渣铁比;
        private double? _P47灰铁比;
        private double? _P48原料总耗;
        private double? _P49原料单耗;
        private double? _P50机烧消耗;
        private double? _P51竖炉球消耗;
        private double? _P52印度球消耗;
        private double? _P53其它熟料消耗;
        private double? _P54本溪矿消耗;
        private double? _P55其它生料消耗;
        private double? _P56废铁总耗;
        private double? _P57废铁单耗;
        private double? _P58金属收得率;
        private double? _P59综合焦炭总耗;
        private double? _P60七号称;
        private double? _P61干毛焦;
        private double? _P62干焦粉;
        private double? _P63入炉焦炭总耗;
        private double? _P64入炉焦炭单耗;
        private double? _P65煤粉总耗;
        private double? _P66焦丁总耗;
        private double? _P67焦丁单耗;
        private double? _P68燃料比;
        private double? _P69铁成分SI;
        private double? _P70铁成分MN;
        private double? _P71铁成分P;
        private double? _P72铁成分S;
        private double? _P73渣成分CAO;
        private double? _P74渣成分SIO2;
        private double? _P75渣成分AL2O3;
        private double? _P76渣成分MGO;
        private double? _P77渣成分FEO;
        private double? _P78渣成分S;
        private double? _P79含SI偏差CAO;
        private double? _P80含SI偏差制铁量;
        private double? _P81含SI偏差铸造铁;
        private double? _综合焦炭单耗;
        private double? _煤粉单耗;
        private double? _一级铁;
        private double? _优质铁;
        private double? _瓦斯灰;
        private double? _收入含铁;
        private double? _支出含铁;
        private double? _富氧量;
        private double? _高压操作时间;
        private double? _有效工作时间;
        private double? _理论渣量;
        private double? _深料线;
        private double? _全部料线;
        private double? _高炉有效容积;
        private double? _高炉实际容积;
        private double? _入炉矿含铁;
        private string _备注 = "";
        private double? _P82工艺称焦比;
        private double? _球团矿;
        private double? _进口球团矿;
        private double? _国内球团矿;
        private double? _其它块矿;
        private double? _高钛球团矿;
        private double? _高品位钛球;
        private double? _其它熔剂;
        private double? _萤石;


        //ConStr 
        public DataStateType DataState = DataStateType.Add;

        public event PropertyChangedEventHandler PropertyChanged;

        private void RaisePropertyChanged(string propertyName, bool induceChanged)
        {
            if (PropertyChanged != null)
            {
                PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
                if (induceChanged)
                {
                    if (this.DataState == DataStateType.UnChanged)
                        this.DataState = DataStateType.Update;
                }
            }
        }

        public void ClearDataState()
        {
            this.DataState = DataStateType.UnChanged;
        }

        private bool Initing = false;

        public void BeginInit()
        {
            Initing = true;
        }

        public void EndInit()
        {
            Initing = false;
        }

        public void Save()
        {
            OracleConnection con = new OracleConnection(Properties.Settings.Default.ltznConnectionString);
            con.Open();
            OracleTransaction trans = con.BeginTransaction();
            Save(trans);
            trans.Commit();
            con.Close();
        }

        public void Save(OracleTransaction trans)
        {
            OracleConnection con = trans.Connection;
            DbDelete(trans);
            DbInsert(trans);
            DbUpdate(trans);
            ClearDataState();
            SaveOther(trans);
        }

        public void Delete()
        {
            if (this.DataState == DataStateType.Add)
                this.DataState = DataStateType.UnChanged;
            else
                this.DataState = DataStateType.Delete;
        }


        public int P年
        {
            get
            {
                return this._P年;
            }
            set
            {
                if (!_P年.Equals(value))
                {
                    _P年 = value;
                    RaisePropertyChanged("P年", true);
                }

            }
        }
        public int P月
        {
            get
            {
                return this._P月;
            }
            set
            {
                if (!_P月.Equals(value))
                {
                    _P月 = value;
                    RaisePropertyChanged("P月", true);
                }

            }
        }
        public string P01单位
        {
            get
            {
                return this._P01单位;
            }
            set
            {
                if (!_P01单位.Equals(value))
                {
                    _P01单位 = value;
                    RaisePropertyChanged("P01单位", true);
                }

            }
        }
        public string P02项目
        {
            get
            {
                return this._P02项目;
            }
            set
            {
                if (!_P02项目.Equals(value))
                {
                    _P02项目 = value;
                    RaisePropertyChanged("P02项目", true);
                }

            }
        }
        public double? P03全铁产量
        {
            get
            {
                return this._P03全铁产量;
            }
            set
            {
                if (!_P03全铁产量.Equals(value))
                {
                    _P03全铁产量 = value;
                    RaisePropertyChanged("P03全铁产量", true);
                }

            }
        }
        public double? P04合格铁
        {
            get
            {
                return this._P04合格铁;
            }
            set
            {
                if (!_P04合格铁.Equals(value))
                {
                    _P04合格铁 = value;
                    RaisePropertyChanged("P04合格铁", true);
                }

            }
        }
        public double? P05制钢铁
        {
            get
            {
                return this._P05制钢铁;
            }
            set
            {
                if (!_P05制钢铁.Equals(value))
                {
                    _P05制钢铁 = value;
                    RaisePropertyChanged("P05制钢铁", true);
                }

            }
        }
        public double? P06铸造铁
        {
            get
            {
                return this._P06铸造铁;
            }
            set
            {
                if (!_P06铸造铁.Equals(value))
                {
                    _P06铸造铁 = value;
                    RaisePropertyChanged("P06铸造铁", true);
                }

            }
        }
        public double? P07折合产量
        {
            get
            {
                return this._P07折合产量;
            }
            set
            {
                if (!_P07折合产量.Equals(value))
                {
                    _P07折合产量 = value;
                    RaisePropertyChanged("P07折合产量", true);
                }

            }
        }
        public double? P08合格率
        {
            get
            {
                return this._P08合格率;
            }
            set
            {
                if (!_P08合格率.Equals(value))
                {
                    _P08合格率 = value;
                    RaisePropertyChanged("P08合格率", true);
                }

            }
        }
        public double? P09一级品率
        {
            get
            {
                return this._P09一级品率;
            }
            set
            {
                if (!_P09一级品率.Equals(value))
                {
                    _P09一级品率 = value;
                    RaisePropertyChanged("P09一级品率", true);
                }

            }
        }
        public double? P10送炼钢优质铁水率
        {
            get
            {
                return this._P10送炼钢优质铁水率;
            }
            set
            {
                if (!_P10送炼钢优质铁水率.Equals(value))
                {
                    _P10送炼钢优质铁水率 = value;
                    RaisePropertyChanged("P10送炼钢优质铁水率", true);
                }

            }
        }
        public double? P11高炉利用系数
        {
            get
            {
                return this._P11高炉利用系数;
            }
            set
            {
                if (!_P11高炉利用系数.Equals(value))
                {
                    _P11高炉利用系数 = value;
                    RaisePropertyChanged("P11高炉利用系数", true);
                }

            }
        }
        public double? P12入炉焦炭冶炼强度
        {
            get
            {
                return this._P12入炉焦炭冶炼强度;
            }
            set
            {
                if (!_P12入炉焦炭冶炼强度.Equals(value))
                {
                    _P12入炉焦炭冶炼强度 = value;
                    RaisePropertyChanged("P12入炉焦炭冶炼强度", true);
                }

            }
        }
        public double? P13综合焦炭冶炼强度
        {
            get
            {
                return this._P13综合焦炭冶炼强度;
            }
            set
            {
                if (!_P13综合焦炭冶炼强度.Equals(value))
                {
                    _P13综合焦炭冶炼强度 = value;
                    RaisePropertyChanged("P13综合焦炭冶炼强度", true);
                }

            }
        }
        public double? P14折算综合焦比
        {
            get
            {
                return this._P14折算综合焦比;
            }
            set
            {
                if (!_P14折算综合焦比.Equals(value))
                {
                    _P14折算综合焦比 = value;
                    RaisePropertyChanged("P14折算综合焦比", true);
                }

            }
        }
        public double? P15折合入炉焦比
        {
            get
            {
                return this._P15折合入炉焦比;
            }
            set
            {
                if (!_P15折合入炉焦比.Equals(value))
                {
                    _P15折合入炉焦比 = value;
                    RaisePropertyChanged("P15折合入炉焦比", true);
                }

            }
        }
        public double? P16入炉矿品位
        {
            get
            {
                return this._P16入炉矿品位;
            }
            set
            {
                if (!_P16入炉矿品位.Equals(value))
                {
                    _P16入炉矿品位 = value;
                    RaisePropertyChanged("P16入炉矿品位", true);
                }

            }
        }
        public double? P17熟料比
        {
            get
            {
                return this._P17熟料比;
            }
            set
            {
                if (!_P17熟料比.Equals(value))
                {
                    _P17熟料比 = value;
                    RaisePropertyChanged("P17熟料比", true);
                }

            }
        }
        public double? P18入炉焦炭负荷
        {
            get
            {
                return this._P18入炉焦炭负荷;
            }
            set
            {
                if (!_P18入炉焦炭负荷.Equals(value))
                {
                    _P18入炉焦炭负荷 = value;
                    RaisePropertyChanged("P18入炉焦炭负荷", true);
                }

            }
        }
        public double? P19综合焦炭负荷
        {
            get
            {
                return this._P19综合焦炭负荷;
            }
            set
            {
                if (!_P19综合焦炭负荷.Equals(value))
                {
                    _P19综合焦炭负荷 = value;
                    RaisePropertyChanged("P19综合焦炭负荷", true);
                }

            }
        }
        public double? P20休风时间
        {
            get
            {
                return this._P20休风时间;
            }
            set
            {
                if (!_P20休风时间.Equals(value))
                {
                    _P20休风时间 = value;
                    RaisePropertyChanged("P20休风时间", true);
                }

            }
        }
        public double? P21休风率
        {
            get
            {
                return this._P21休风率;
            }
            set
            {
                if (!_P21休风率.Equals(value))
                {
                    _P21休风率 = value;
                    RaisePropertyChanged("P21休风率", true);
                }

            }
        }
        public double? P22慢风时间
        {
            get
            {
                return this._P22慢风时间;
            }
            set
            {
                if (!_P22慢风时间.Equals(value))
                {
                    _P22慢风时间 = value;
                    RaisePropertyChanged("P22慢风时间", true);
                }

            }
        }
        public double? P23慢风率
        {
            get
            {
                return this._P23慢风率;
            }
            set
            {
                if (!_P23慢风率.Equals(value))
                {
                    _P23慢风率 = value;
                    RaisePropertyChanged("P23慢风率", true);
                }

            }
        }
        public double? P24煤气成分CO2
        {
            get
            {
                return this._P24煤气成分CO2;
            }
            set
            {
                if (!_P24煤气成分CO2.Equals(value))
                {
                    _P24煤气成分CO2 = value;
                    RaisePropertyChanged("P24煤气成分CO2", true);
                }

            }
        }
        public double? P25煤气成分计算1
        {
            get
            {
                return this._P25煤气成分计算1;
            }
            set
            {
                if (!_P25煤气成分计算1.Equals(value))
                {
                    _P25煤气成分计算1 = value;
                    RaisePropertyChanged("P25煤气成分计算1", true);
                }

            }
        }
        public double? P26生铁表面质量
        {
            get
            {
                return this._P26生铁表面质量;
            }
            set
            {
                if (!_P26生铁表面质量.Equals(value))
                {
                    _P26生铁表面质量 = value;
                    RaisePropertyChanged("P26生铁表面质量", true);
                }

            }
        }
        public double? P27深料线作业率
        {
            get
            {
                return this._P27深料线作业率;
            }
            set
            {
                if (!_P27深料线作业率.Equals(value))
                {
                    _P27深料线作业率 = value;
                    RaisePropertyChanged("P27深料线作业率", true);
                }

            }
        }
        public double? P28回收率
        {
            get
            {
                return this._P28回收率;
            }
            set
            {
                if (!_P28回收率.Equals(value))
                {
                    _P28回收率 = value;
                    RaisePropertyChanged("P28回收率", true);
                }

            }
        }
        public double? P29冷风流量
        {
            get
            {
                return this._P29冷风流量;
            }
            set
            {
                if (!_P29冷风流量.Equals(value))
                {
                    _P29冷风流量 = value;
                    RaisePropertyChanged("P29冷风流量", true);
                }

            }
        }
        public double? P30平均风温
        {
            get
            {
                return this._P30平均风温;
            }
            set
            {
                if (!_P30平均风温.Equals(value))
                {
                    _P30平均风温 = value;
                    RaisePropertyChanged("P30平均风温", true);
                }

            }
        }
        public double? P31风速
        {
            get
            {
                return this._P31风速;
            }
            set
            {
                if (!_P31风速.Equals(value))
                {
                    _P31风速 = value;
                    RaisePropertyChanged("P31风速", true);
                }

            }
        }
        public double? P32热风压力
        {
            get
            {
                return this._P32热风压力;
            }
            set
            {
                if (!_P32热风压力.Equals(value))
                {
                    _P32热风压力 = value;
                    RaisePropertyChanged("P32热风压力", true);
                }

            }
        }
        public double? P33炉顶压力
        {
            get
            {
                return this._P33炉顶压力;
            }
            set
            {
                if (!_P33炉顶压力.Equals(value))
                {
                    _P33炉顶压力 = value;
                    RaisePropertyChanged("P33炉顶压力", true);
                }

            }
        }
        public double? P34炉顶温度
        {
            get
            {
                return this._P34炉顶温度;
            }
            set
            {
                if (!_P34炉顶温度.Equals(value))
                {
                    _P34炉顶温度 = value;
                    RaisePropertyChanged("P34炉顶温度", true);
                }

            }
        }
        public double? P35富氧率
        {
            get
            {
                return this._P35富氧率;
            }
            set
            {
                if (!_P35富氧率.Equals(value))
                {
                    _P35富氧率 = value;
                    RaisePropertyChanged("P35富氧率", true);
                }

            }
        }
        public double? P36高压率
        {
            get
            {
                return this._P36高压率;
            }
            set
            {
                if (!_P36高压率.Equals(value))
                {
                    _P36高压率 = value;
                    RaisePropertyChanged("P36高压率", true);
                }

            }
        }
        public double? P37悬料次数
        {
            get
            {
                return this._P37悬料次数;
            }
            set
            {
                if (!_P37悬料次数.Equals(value))
                {
                    _P37悬料次数 = value;
                    RaisePropertyChanged("P37悬料次数", true);
                }

            }
        }
        public double? P38坐料次数
        {
            get
            {
                return this._P38坐料次数;
            }
            set
            {
                if (!_P38坐料次数.Equals(value))
                {
                    _P38坐料次数 = value;
                    RaisePropertyChanged("P38坐料次数", true);
                }

            }
        }
        public double? P39崩料次数
        {
            get
            {
                return this._P39崩料次数;
            }
            set
            {
                if (!_P39崩料次数.Equals(value))
                {
                    _P39崩料次数 = value;
                    RaisePropertyChanged("P39崩料次数", true);
                }

            }
        }
        public double? P40风口大套损坏数
        {
            get
            {
                return this._P40风口大套损坏数;
            }
            set
            {
                if (!_P40风口大套损坏数.Equals(value))
                {
                    _P40风口大套损坏数 = value;
                    RaisePropertyChanged("P40风口大套损坏数", true);
                }

            }
        }
        public double? P41风口中套损坏数
        {
            get
            {
                return this._P41风口中套损坏数;
            }
            set
            {
                if (!_P41风口中套损坏数.Equals(value))
                {
                    _P41风口中套损坏数 = value;
                    RaisePropertyChanged("P41风口中套损坏数", true);
                }

            }
        }
        public double? P42风口小套损坏数
        {
            get
            {
                return this._P42风口小套损坏数;
            }
            set
            {
                if (!_P42风口小套损坏数.Equals(value))
                {
                    _P42风口小套损坏数 = value;
                    RaisePropertyChanged("P42风口小套损坏数", true);
                }

            }
        }
        public double? P43渣口大套损坏数
        {
            get
            {
                return this._P43渣口大套损坏数;
            }
            set
            {
                if (!_P43渣口大套损坏数.Equals(value))
                {
                    _P43渣口大套损坏数 = value;
                    RaisePropertyChanged("P43渣口大套损坏数", true);
                }

            }
        }
        public double? P44渣口中套损坏数
        {
            get
            {
                return this._P44渣口中套损坏数;
            }
            set
            {
                if (!_P44渣口中套损坏数.Equals(value))
                {
                    _P44渣口中套损坏数 = value;
                    RaisePropertyChanged("P44渣口中套损坏数", true);
                }

            }
        }
        public double? P45渣口小套损坏数
        {
            get
            {
                return this._P45渣口小套损坏数;
            }
            set
            {
                if (!_P45渣口小套损坏数.Equals(value))
                {
                    _P45渣口小套损坏数 = value;
                    RaisePropertyChanged("P45渣口小套损坏数", true);
                }

            }
        }
        public double? P46渣铁比
        {
            get
            {
                return this._P46渣铁比;
            }
            set
            {
                if (!_P46渣铁比.Equals(value))
                {
                    _P46渣铁比 = value;
                    RaisePropertyChanged("P46渣铁比", true);
                }

            }
        }
        public double? P47灰铁比
        {
            get
            {
                return this._P47灰铁比;
            }
            set
            {
                if (!_P47灰铁比.Equals(value))
                {
                    _P47灰铁比 = value;
                    RaisePropertyChanged("P47灰铁比", true);
                }

            }
        }
        public double? P48原料总耗
        {
            get
            {
                return this._P48原料总耗;
            }
            set
            {
                if (!_P48原料总耗.Equals(value))
                {
                    _P48原料总耗 = value;
                    RaisePropertyChanged("P48原料总耗", true);
                }

            }
        }
        public double? P49原料单耗
        {
            get
            {
                return this._P49原料单耗;
            }
            set
            {
                if (!_P49原料单耗.Equals(value))
                {
                    _P49原料单耗 = value;
                    RaisePropertyChanged("P49原料单耗", true);
                }

            }
        }
        public double? P50机烧消耗
        {
            get
            {
                return this._P50机烧消耗;
            }
            set
            {
                if (!_P50机烧消耗.Equals(value))
                {
                    _P50机烧消耗 = value;
                    RaisePropertyChanged("P50机烧消耗", true);
                }

            }
        }
        public double? P51竖炉球消耗
        {
            get
            {
                return this._P51竖炉球消耗;
            }
            set
            {
                if (!_P51竖炉球消耗.Equals(value))
                {
                    _P51竖炉球消耗 = value;
                    RaisePropertyChanged("P51竖炉球消耗", true);
                }

            }
        }
        public double? P52印度球消耗
        {
            get
            {
                return this._P52印度球消耗;
            }
            set
            {
                if (!_P52印度球消耗.Equals(value))
                {
                    _P52印度球消耗 = value;
                    RaisePropertyChanged("P52印度球消耗", true);
                }

            }
        }
        public double? P53其它熟料消耗
        {
            get
            {
                return this._P53其它熟料消耗;
            }
            set
            {
                if (!_P53其它熟料消耗.Equals(value))
                {
                    _P53其它熟料消耗 = value;
                    RaisePropertyChanged("P53其它熟料消耗", true);
                }

            }
        }
        public double? P54本溪矿消耗
        {
            get
            {
                return this._P54本溪矿消耗;
            }
            set
            {
                if (!_P54本溪矿消耗.Equals(value))
                {
                    _P54本溪矿消耗 = value;
                    RaisePropertyChanged("P54本溪矿消耗", true);
                }

            }
        }
        public double? P55其它生料消耗
        {
            get
            {
                return this._P55其它生料消耗;
            }
            set
            {
                if (!_P55其它生料消耗.Equals(value))
                {
                    _P55其它生料消耗 = value;
                    RaisePropertyChanged("P55其它生料消耗", true);
                }

            }
        }
        public double? P56废铁总耗
        {
            get
            {
                return this._P56废铁总耗;
            }
            set
            {
                if (!_P56废铁总耗.Equals(value))
                {
                    _P56废铁总耗 = value;
                    RaisePropertyChanged("P56废铁总耗", true);
                }

            }
        }
        public double? P57废铁单耗
        {
            get
            {
                return this._P57废铁单耗;
            }
            set
            {
                if (!_P57废铁单耗.Equals(value))
                {
                    _P57废铁单耗 = value;
                    RaisePropertyChanged("P57废铁单耗", true);
                }

            }
        }
        public double? P58金属收得率
        {
            get
            {
                return this._P58金属收得率;
            }
            set
            {
                if (!_P58金属收得率.Equals(value))
                {
                    _P58金属收得率 = value;
                    RaisePropertyChanged("P58金属收得率", true);
                }

            }
        }
        public double? P59综合焦炭总耗
        {
            get
            {
                return this._P59综合焦炭总耗;
            }
            set
            {
                if (!_P59综合焦炭总耗.Equals(value))
                {
                    _P59综合焦炭总耗 = value;
                    RaisePropertyChanged("P59综合焦炭总耗", true);
                }

            }
        }
        public double? P60七号称
        {
            get
            {
                return this._P60七号称;
            }
            set
            {
                if (!_P60七号称.Equals(value))
                {
                    _P60七号称 = value;
                    RaisePropertyChanged("P60七号称", true);
                }

            }
        }
        public double? P61干毛焦
        {
            get
            {
                return this._P61干毛焦;
            }
            set
            {
                if (!_P61干毛焦.Equals(value))
                {
                    _P61干毛焦 = value;
                    RaisePropertyChanged("P61干毛焦", true);
                }

            }
        }
        public double? P62干焦粉
        {
            get
            {
                return this._P62干焦粉;
            }
            set
            {
                if (!_P62干焦粉.Equals(value))
                {
                    _P62干焦粉 = value;
                    RaisePropertyChanged("P62干焦粉", true);
                }

            }
        }
        public double? P63入炉焦炭总耗
        {
            get
            {
                return this._P63入炉焦炭总耗;
            }
            set
            {
                if (!_P63入炉焦炭总耗.Equals(value))
                {
                    _P63入炉焦炭总耗 = value;
                    RaisePropertyChanged("P63入炉焦炭总耗", true);
                }

            }
        }
        public double? P64入炉焦炭单耗
        {
            get
            {
                return this._P64入炉焦炭单耗;
            }
            set
            {
                if (!_P64入炉焦炭单耗.Equals(value))
                {
                    _P64入炉焦炭单耗 = value;
                    RaisePropertyChanged("P64入炉焦炭单耗", true);
                }

            }
        }
        public double? P65煤粉总耗
        {
            get
            {
                return this._P65煤粉总耗;
            }
            set
            {
                if (!_P65煤粉总耗.Equals(value))
                {
                    _P65煤粉总耗 = value;
                    RaisePropertyChanged("P65煤粉总耗", true);
                }

            }
        }
        public double? P66焦丁总耗
        {
            get
            {
                return this._P66焦丁总耗;
            }
            set
            {
                if (!_P66焦丁总耗.Equals(value))
                {
                    _P66焦丁总耗 = value;
                    RaisePropertyChanged("P66焦丁总耗", true);
                }

            }
        }
        public double? P67焦丁单耗
        {
            get
            {
                return this._P67焦丁单耗;
            }
            set
            {
                if (!_P67焦丁单耗.Equals(value))
                {
                    _P67焦丁单耗 = value;
                    RaisePropertyChanged("P67焦丁单耗", true);
                }

            }
        }
        public double? P68燃料比
        {
            get
            {
                return this._P68燃料比;
            }
            set
            {
                if (!_P68燃料比.Equals(value))
                {
                    _P68燃料比 = value;
                    RaisePropertyChanged("P68燃料比", true);
                }

            }
        }
        public double? P69铁成分SI
        {
            get
            {
                return this._P69铁成分SI;
            }
            set
            {
                if (!_P69铁成分SI.Equals(value))
                {
                    _P69铁成分SI = value;
                    RaisePropertyChanged("P69铁成分SI", true);
                }

            }
        }
        public double? P70铁成分MN
        {
            get
            {
                return this._P70铁成分MN;
            }
            set
            {
                if (!_P70铁成分MN.Equals(value))
                {
                    _P70铁成分MN = value;
                    RaisePropertyChanged("P70铁成分MN", true);
                }

            }
        }
        public double? P71铁成分P
        {
            get
            {
                return this._P71铁成分P;
            }
            set
            {
                if (!_P71铁成分P.Equals(value))
                {
                    _P71铁成分P = value;
                    RaisePropertyChanged("P71铁成分P", true);
                }

            }
        }
        public double? P72铁成分S
        {
            get
            {
                return this._P72铁成分S;
            }
            set
            {
                if (!_P72铁成分S.Equals(value))
                {
                    _P72铁成分S = value;
                    RaisePropertyChanged("P72铁成分S", true);
                }

            }
        }
        public double? P73渣成分CAO
        {
            get
            {
                return this._P73渣成分CAO;
            }
            set
            {
                if (!_P73渣成分CAO.Equals(value))
                {
                    _P73渣成分CAO = value;
                    RaisePropertyChanged("P73渣成分CAO", true);
                }

            }
        }
        public double? P74渣成分SIO2
        {
            get
            {
                return this._P74渣成分SIO2;
            }
            set
            {
                if (!_P74渣成分SIO2.Equals(value))
                {
                    _P74渣成分SIO2 = value;
                    RaisePropertyChanged("P74渣成分SIO2", true);
                }

            }
        }
        public double? P75渣成分AL2O3
        {
            get
            {
                return this._P75渣成分AL2O3;
            }
            set
            {
                if (!_P75渣成分AL2O3.Equals(value))
                {
                    _P75渣成分AL2O3 = value;
                    RaisePropertyChanged("P75渣成分AL2O3", true);
                }

            }
        }
        public double? P76渣成分MGO
        {
            get
            {
                return this._P76渣成分MGO;
            }
            set
            {
                if (!_P76渣成分MGO.Equals(value))
                {
                    _P76渣成分MGO = value;
                    RaisePropertyChanged("P76渣成分MGO", true);
                }

            }
        }
        public double? P77渣成分FEO
        {
            get
            {
                return this._P77渣成分FEO;
            }
            set
            {
                if (!_P77渣成分FEO.Equals(value))
                {
                    _P77渣成分FEO = value;
                    RaisePropertyChanged("P77渣成分FEO", true);
                }

            }
        }
        public double? P78渣成分S
        {
            get
            {
                return this._P78渣成分S;
            }
            set
            {
                if (!_P78渣成分S.Equals(value))
                {
                    _P78渣成分S = value;
                    RaisePropertyChanged("P78渣成分S", true);
                }

            }
        }
        public double? P79含SI偏差CAO
        {
            get
            {
                return this._P79含SI偏差CAO;
            }
            set
            {
                if (!_P79含SI偏差CAO.Equals(value))
                {
                    _P79含SI偏差CAO = value;
                    RaisePropertyChanged("P79含SI偏差CAO", true);
                }

            }
        }
        public double? P80含SI偏差制铁量
        {
            get
            {
                return this._P80含SI偏差制铁量;
            }
            set
            {
                if (!_P80含SI偏差制铁量.Equals(value))
                {
                    _P80含SI偏差制铁量 = value;
                    RaisePropertyChanged("P80含SI偏差制铁量", true);
                }

            }
        }
        public double? P81含SI偏差铸造铁
        {
            get
            {
                return this._P81含SI偏差铸造铁;
            }
            set
            {
                if (!_P81含SI偏差铸造铁.Equals(value))
                {
                    _P81含SI偏差铸造铁 = value;
                    RaisePropertyChanged("P81含SI偏差铸造铁", true);
                }

            }
        }
        public double? 综合焦炭单耗
        {
            get
            {
                return this._综合焦炭单耗;
            }
            set
            {
                if (!_综合焦炭单耗.Equals(value))
                {
                    _综合焦炭单耗 = value;
                    RaisePropertyChanged("综合焦炭单耗", true);
                }

            }
        }
        public double? 煤粉单耗
        {
            get
            {
                return this._煤粉单耗;
            }
            set
            {
                if (!_煤粉单耗.Equals(value))
                {
                    _煤粉单耗 = value;
                    RaisePropertyChanged("煤粉单耗", true);
                }

            }
        }
        public double? 一级铁
        {
            get
            {
                return this._一级铁;
            }
            set
            {
                if (!_一级铁.Equals(value))
                {
                    _一级铁 = value;
                    RaisePropertyChanged("一级铁", true);
                }

            }
        }
        public double? 优质铁
        {
            get
            {
                return this._优质铁;
            }
            set
            {
                if (!_优质铁.Equals(value))
                {
                    _优质铁 = value;
                    RaisePropertyChanged("优质铁", true);
                }

            }
        }
        public double? 瓦斯灰
        {
            get
            {
                return this._瓦斯灰;
            }
            set
            {
                if (!_瓦斯灰.Equals(value))
                {
                    _瓦斯灰 = value;
                    RaisePropertyChanged("瓦斯灰", true);
                }

            }
        }
        public double? 收入含铁
        {
            get
            {
                return this._收入含铁;
            }
            set
            {
                if (!_收入含铁.Equals(value))
                {
                    _收入含铁 = value;
                    RaisePropertyChanged("收入含铁", true);
                }

            }
        }
        public double? 支出含铁
        {
            get
            {
                return this._支出含铁;
            }
            set
            {
                if (!_支出含铁.Equals(value))
                {
                    _支出含铁 = value;
                    RaisePropertyChanged("支出含铁", true);
                }

            }
        }
        public double? 富氧量
        {
            get
            {
                return this._富氧量;
            }
            set
            {
                if (!_富氧量.Equals(value))
                {
                    _富氧量 = value;
                    RaisePropertyChanged("富氧量", true);
                }

            }
        }
        public double? 高压操作时间
        {
            get
            {
                return this._高压操作时间;
            }
            set
            {
                if (!_高压操作时间.Equals(value))
                {
                    _高压操作时间 = value;
                    RaisePropertyChanged("高压操作时间", true);
                }

            }
        }
        public double? 有效工作时间
        {
            get
            {
                return this._有效工作时间;
            }
            set
            {
                if (!_有效工作时间.Equals(value))
                {
                    _有效工作时间 = value;
                    RaisePropertyChanged("有效工作时间", true);
                }

            }
        }
        public double? 理论渣量
        {
            get
            {
                return this._理论渣量;
            }
            set
            {
                if (!_理论渣量.Equals(value))
                {
                    _理论渣量 = value;
                    RaisePropertyChanged("理论渣量", true);
                }

            }
        }
        public double? 深料线
        {
            get
            {
                return this._深料线;
            }
            set
            {
                if (!_深料线.Equals(value))
                {
                    _深料线 = value;
                    RaisePropertyChanged("深料线", true);
                }

            }
        }
        public double? 全部料线
        {
            get
            {
                return this._全部料线;
            }
            set
            {
                if (!_全部料线.Equals(value))
                {
                    _全部料线 = value;
                    RaisePropertyChanged("全部料线", true);
                }

            }
        }
        public double? 高炉有效容积
        {
            get
            {
                return this._高炉有效容积;
            }
            set
            {
                if (!_高炉有效容积.Equals(value))
                {
                    _高炉有效容积 = value;
                    RaisePropertyChanged("高炉有效容积", true);
                }

            }
        }
        public double? 高炉实际容积
        {
            get
            {
                return this._高炉实际容积;
            }
            set
            {
                if (!_高炉实际容积.Equals(value))
                {
                    _高炉实际容积 = value;
                    RaisePropertyChanged("高炉实际容积", true);
                }

            }
        }
        public double? 入炉矿含铁
        {
            get
            {
                return this._入炉矿含铁;
            }
            set
            {
                if (!_入炉矿含铁.Equals(value))
                {
                    _入炉矿含铁 = value;
                    RaisePropertyChanged("入炉矿含铁", true);
                }

            }
        }
        public string 备注
        {
            get
            {
                return this._备注;
            }
            set
            {
                if (!_备注.Equals(value))
                {
                    _备注 = value;
                    RaisePropertyChanged("备注", true);
                }

            }
        }
        public double? P82工艺称焦比
        {
            get
            {
                return this._P82工艺称焦比;
            }
            set
            {
                if (!_P82工艺称焦比.Equals(value))
                {
                    _P82工艺称焦比 = value;
                    RaisePropertyChanged("P82工艺称焦比", true);
                }

            }
        }

        public double? 球团矿
        {
            get
            {
                return this._球团矿;
            }
            set
            {
                if (!_球团矿.Equals(value))
                {
                    _球团矿 = value;
                    RaisePropertyChanged("球团矿", true);
                }

            }
        }

        public double? 进口球团矿
        {
            get
            {
                return this._进口球团矿;
            }
            set
            {
                if (!_进口球团矿.Equals(value))
                {
                    _进口球团矿 = value;
                    RaisePropertyChanged("进口球团矿", true);
                }

            }
        }

        public double? 国内球团矿
        {
            get
            {
                return this._国内球团矿;
            }
            set
            {
                if (!_国内球团矿.Equals(value))
                {
                    _国内球团矿 = value;
                    RaisePropertyChanged("国内球团矿", true);
                }

            }
        }


        public double? 其它熔剂
        {
            get
            {
                return this._其它熔剂;
            }
            set
            {
                if (!_其它熔剂.Equals(value))
                {
                    _其它熔剂 = value;
                    RaisePropertyChanged("其它熔剂", true);
                }

            }
        }

        public double? 其它块矿
        {
            get
            {
                return this._其它块矿;
            }
            set
            {
                if (!_其它块矿.Equals(value))
                {
                    _其它块矿 = value;
                    RaisePropertyChanged("其它块矿", true);
                }

            }
        }

        public double? 高钛球团矿
        {
            get
            {
                return this._高钛球团矿;
            }
            set
            {
                if (!_高钛球团矿.Equals(value))
                {
                    _高钛球团矿 = value;
                    RaisePropertyChanged("高钛球团矿", true);
                }

            }
        }

        public double? 高品位钛球
        {
            get
            {
                return this._高品位钛球;
            }
            set
            {
                if (!_高品位钛球.Equals(value))
                {
                    _高品位钛球 = value;
                    RaisePropertyChanged("高品位钛球", true);
                }

            }
        }

        public double? 萤石
        {
            get
            {
                return this._萤石;
            }
            set
            {
                if (!_萤石.Equals(value))
                {
                    _萤石 = value;
                    RaisePropertyChanged("萤石", true);
                }

            }
        }

        //private double? _进口球团矿;
        //private double? _国内球团矿;
        //private double? _其它块矿;
        //private double? _高钛球团矿;
        //private double? _高品位钛球;
        //private double? _其它熔剂;

        private double? _PB块 = null;

        public double? PB块
        {
            get { return _PB块; }
            set {
                if (_PB块!=value)
                {
                    _PB块 = value;
                    RaisePropertyChanged("PB块", true);
                }

             }
        }
        private double? _FMG块 = null;

        public double? 纽曼块
        {
            get { return _FMG块; }
            set
            {
                if (_FMG块 != value)
                {
                    _FMG块 = value;
                    RaisePropertyChanged("纽曼块", true);
                }
            }
        }
        private double? _锰矿 = null;

        public double? 锰矿
        {
            get { return _锰矿; }
            set
            {
                if (_锰矿 != value)
                {
                    _锰矿 = value;
                    RaisePropertyChanged("锰矿", true);
                }
            }
        }
        private double? _钛球 = 0;

        public double? 钛球
        {
            get { return _钛球; }
            set
            {
                if (_钛球 != value)
                {
                        _钛球 = value;
                    RaisePropertyChanged("钛球", true);
                }
            }
        }

        private double? _溶剂总耗 = null;

        public double? 溶剂总耗
        {
            get { return _溶剂总耗; }
            set
            {
                if (_溶剂总耗 != value)
                {
                    _溶剂总耗 = value;
                    RaisePropertyChanged("溶剂总耗", true);
                }
            }
        }
        private double? _溶剂单耗 = null;

        public double? 溶剂单耗
        {
            get { return _溶剂单耗; }
            set
            {
                if (_溶剂单耗 != value)
                {
                    _溶剂单耗 = value;
                    RaisePropertyChanged("溶剂单耗", true);
                }
            }
        }
        private double? _硅石 = null;

        public double? 硅石
        {
            get { return _硅石; }
            set
            {
                if (_硅石 != value)
                {
                    _硅石 = value;
                    RaisePropertyChanged("硅石", true);
                }
            }
        }
        private double? _白云石 = null;

        public double? 白云石
        {
            get { return _白云石; }
            set
            {
                if (_白云石 != value)
                {
                    _白云石 = value;
                    RaisePropertyChanged("白云石", true);
                }
            }
        }
        private double? _蛇纹石 = null;

        public double? 蛇纹石
        {
            get { return _蛇纹石; }
            set
            {
                if (_蛇纹石 != value)
                {
                    _蛇纹石 = value;
                    RaisePropertyChanged("蛇纹石", true);
                }
            }
        }

        //private double? _球团矿 = null;

        //public double? 球团矿
        //{
        //    get { return _球团矿; }
        //    set
        //    {
        //        if (_球团矿 != value)
        //        {
        //            _球团矿 = value;
        //            RaisePropertyChanged("球团矿", true);
        //        }
        //    }
        //}

     

        public virtual void SaveOther(OracleTransaction trans)
        {

        }
        public void DbInsert(OracleTransaction trans)
        {
            //InsertSql,InsertPara,AutoSql
            if (DataState == DataStateType.Add)
            {
                OracleConnection con = trans.Connection;

                OracleCommand selectCmd = new OracleCommand();
                selectCmd.Connection = con;
                selectCmd.Transaction = trans;
                selectCmd.CommandText = "SELECT Count(*) FROM 技术月报 WHERE P年=:P年 and P月=:P月 and P01单位=:P01单位 and P02项目=:P02项目";
                selectCmd.Parameters.Add(":P年", OracleType.Double, 22).Value = this.P年;
                selectCmd.Parameters.Add(":P月", OracleType.Double, 22).Value = this.P月;
                selectCmd.Parameters.Add(":P01单位", OracleType.VarChar, 20).Value = this.P01单位;
                selectCmd.Parameters.Add(":P02项目", OracleType.VarChar, 20).Value = this.P02项目;
                int count = Convert.ToInt32(selectCmd.ExecuteScalar());
                if (count > 0)
                {
                    DataState = DataStateType.Update;
                    DbUpdate(trans);
                }
                else
                {

                    OracleCommand insertCmd = new OracleCommand();
                    insertCmd.Connection = con;
                    insertCmd.Transaction = trans;
                    // 2016-11-24 球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂
                    insertCmd.CommandText = "INSERT INTO 技术月报(P年,P月,P01单位,P02项目,P03全铁产量,P04合格铁,P05制钢铁,P06铸造铁,P07折合产量,P08合格率,P09一级品率,P10送炼钢优质铁水率,P11高炉利用系数,P12入炉焦炭冶炼强度,P13综合焦炭冶炼强度,P14折算综合焦比,P15折合入炉焦比,P16入炉矿品位,P17熟料比,P18入炉焦炭负荷,P19综合焦炭负荷,P20休风时间,P21休风率,P22慢风时间,P23慢风率,P24煤气成分CO2,P25煤气成分计算1,P26生铁表面质量,P27深料线作业率,P28回收率,P29冷风流量,P30平均风温,P31风速,P32热风压力,P33炉顶压力,P34炉顶温度,P35富氧率,P36高压率,P37悬料次数,P38坐料次数,P39崩料次数,P40风口大套损坏数,P41风口中套损坏数,P42风口小套损坏数,P43渣口大套损坏数,P44渣口中套损坏数,P45渣口小套损坏数,P46渣铁比,P47灰铁比,P48原料总耗,P49原料单耗,P50机烧消耗,P51竖炉球消耗,P52印度球消耗,P53其它熟料消耗,P54本溪矿消耗,P55其它生料消耗,P56废铁总耗,P57废铁单耗,P58金属收得率,P59综合焦炭总耗,P60七号称,P61干毛焦,P62干焦粉,P63入炉焦炭总耗,P64入炉焦炭单耗,P65煤粉总耗,P66焦丁总耗,P67焦丁单耗,P68燃料比,P69铁成分SI,P70铁成分MN,P71铁成分P,P72铁成分S,P73渣成分CAO,P74渣成分SIO2,P75渣成分AL2O3,P76渣成分MGO,P77渣成分FEO,P78渣成分S,P79含SI偏差CAO,P80含SI偏差制铁量,P81含SI偏差铸造铁,综合焦炭单耗,煤粉单耗,一级铁,优质铁,瓦斯灰,收入含铁,支出含铁,富氧量,高压操作时间,有效工作时间,理论渣量,深料线,全部料线,高炉有效容积,高炉实际容积,入炉矿含铁,备注,P82工艺称焦比,PB块,纽曼块,锰矿,钛球,溶剂总耗,溶剂单耗,硅石,白云石,蛇纹石,球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂) VALUES(:P年,:P月,:P01单位,:P02项目,:P03全铁产量,:P04合格铁,:P05制钢铁,:P06铸造铁,:P07折合产量,:P08合格率,:P09一级品率,:P10送炼钢优质铁水率,:P11高炉利用系数,:P12入炉焦炭冶炼强度,:P13综合焦炭冶炼强度,:P14折算综合焦比,:P15折合入炉焦比,:P16入炉矿品位,:P17熟料比,:P18入炉焦炭负荷,:P19综合焦炭负荷,:P20休风时间,:P21休风率,:P22慢风时间,:P23慢风率,:P24煤气成分CO2,:P25煤气成分计算1,:P26生铁表面质量,:P27深料线作业率,:P28回收率,:P29冷风流量,:P30平均风温,:P31风速,:P32热风压力,:P33炉顶压力,:P34炉顶温度,:P35富氧率,:P36高压率,:P37悬料次数,:P38坐料次数,:P39崩料次数,:P40风口大套损坏数,:P41风口中套损坏数,:P42风口小套损坏数,:P43渣口大套损坏数,:P44渣口中套损坏数,:P45渣口小套损坏数,:P46渣铁比,:P47灰铁比,:P48原料总耗,:P49原料单耗,:P50机烧消耗,:P51竖炉球消耗,:P52印度球消耗,:P53其它熟料消耗,:P54本溪矿消耗,:P55其它生料消耗,:P56废铁总耗,:P57废铁单耗,:P58金属收得率,:P59综合焦炭总耗,:P60七号称,:P61干毛焦,:P62干焦粉,:P63入炉焦炭总耗,:P64入炉焦炭单耗,:P65煤粉总耗,:P66焦丁总耗,:P67焦丁单耗,:P68燃料比,:P69铁成分SI,:P70铁成分MN,:P71铁成分P,:P72铁成分S,:P73渣成分CAO,:P74渣成分SIO2,:P75渣成分AL2O3,:P76渣成分MGO,:P77渣成分FEO,:P78渣成分S,:P79含SI偏差CAO,:P80含SI偏差制铁量,:P81含SI偏差铸造铁,:综合焦炭单耗,:煤粉单耗,:一级铁,:优质铁,:瓦斯灰,:收入含铁,:支出含铁,:富氧量,:高压操作时间,:有效工作时间,:理论渣量,:深料线,:全部料线,:高炉有效容积,:高炉实际容积,:入炉矿含铁,:备注,:P82工艺称焦比,:PB块,:纽曼块,:锰矿,:钛球,:溶剂总耗,:溶剂单耗,:硅石,:白云石,:蛇纹石,:球团矿,:国内球团矿,:进口球团矿,:其它块矿,:高钛球团矿,:高品位钛球,:萤石,:其它熔剂)";

                    insertCmd.Parameters.Add(":P年", OracleType.Double, 22).Value = this.P年;
                    insertCmd.Parameters.Add(":P月", OracleType.Double, 22).Value = this.P月;
                    insertCmd.Parameters.Add(":P01单位", OracleType.VarChar, 20).Value = this.P01单位;
                    insertCmd.Parameters.Add(":P02项目", OracleType.VarChar, 20).Value = this.P02项目;
                    insertCmd.Parameters.Add(":P03全铁产量", OracleType.Double, 22).Value = (object)this.P03全铁产量 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P04合格铁", OracleType.Double, 22).Value = (object)this.P04合格铁 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P05制钢铁", OracleType.Double, 22).Value = (object)this.P05制钢铁 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P06铸造铁", OracleType.Double, 22).Value = (object)this.P06铸造铁 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P07折合产量", OracleType.Double, 22).Value = (object)this.P07折合产量 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P08合格率", OracleType.Double, 22).Value = (object)this.P08合格率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P09一级品率", OracleType.Double, 22).Value = (object)this.P09一级品率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P10送炼钢优质铁水率", OracleType.Double, 22).Value = (object)this.P10送炼钢优质铁水率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P11高炉利用系数", OracleType.Double, 22).Value = (object)this.P11高炉利用系数 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P12入炉焦炭冶炼强度", OracleType.Double, 22).Value = (object)this.P12入炉焦炭冶炼强度 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P13综合焦炭冶炼强度", OracleType.Double, 22).Value = (object)this.P13综合焦炭冶炼强度 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P14折算综合焦比", OracleType.Double, 22).Value = (object)this.P14折算综合焦比 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P15折合入炉焦比", OracleType.Double, 22).Value = (object)this.P15折合入炉焦比 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P16入炉矿品位", OracleType.Double, 22).Value = (object)this.P16入炉矿品位 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P17熟料比", OracleType.Double, 22).Value = (object)this.P17熟料比 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P18入炉焦炭负荷", OracleType.Double, 22).Value = (object)this.P18入炉焦炭负荷 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P19综合焦炭负荷", OracleType.Double, 22).Value = (object)this.P19综合焦炭负荷 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P20休风时间", OracleType.Double, 22).Value = (object)this.P20休风时间 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P21休风率", OracleType.Double, 22).Value = (object)this.P21休风率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P22慢风时间", OracleType.Double, 22).Value = (object)this.P22慢风时间 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P23慢风率", OracleType.Double, 22).Value = (object)this.P23慢风率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P24煤气成分CO2", OracleType.Double, 22).Value = (object)this.P24煤气成分CO2 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P25煤气成分计算1", OracleType.Double, 22).Value = (object)this.P25煤气成分计算1 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P26生铁表面质量", OracleType.Double, 22).Value = (object)this.P26生铁表面质量 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P27深料线作业率", OracleType.Double, 22).Value = (object)this.P27深料线作业率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P28回收率", OracleType.Double, 22).Value = (object)this.P28回收率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P29冷风流量", OracleType.Double, 22).Value = (object)this.P29冷风流量 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P30平均风温", OracleType.Double, 22).Value = (object)this.P30平均风温 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P31风速", OracleType.Double, 22).Value = (object)this.P31风速 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P32热风压力", OracleType.Double, 22).Value = (object)this.P32热风压力 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P33炉顶压力", OracleType.Double, 22).Value = (object)this.P33炉顶压力 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P34炉顶温度", OracleType.Double, 22).Value = (object)this.P34炉顶温度 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P35富氧率", OracleType.Double, 22).Value = (object)this.P35富氧率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P36高压率", OracleType.Double, 22).Value = (object)this.P36高压率 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P37悬料次数", OracleType.Double, 22).Value = (object)this.P37悬料次数 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P38坐料次数", OracleType.Double, 22).Value = (object)this.P38坐料次数 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P39崩料次数", OracleType.Double, 22).Value = (object)this.P39崩料次数 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P40风口大套损坏数", OracleType.Double, 22).Value = (object)this.P40风口大套损坏数 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P41风口中套损坏数", OracleType.Double, 22).Value = (object)this.P41风口中套损坏数 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":P42风口小套损坏数", OracleType.Double, 22).Value = (object)this.P42风口小套损坏数??DBNull.Value;
                    insertCmd.Parameters.Add(":P43渣口大套损坏数", OracleType.Double, 22).Value = (object)this.P43渣口大套损坏数??DBNull.Value;
                    insertCmd.Parameters.Add(":P44渣口中套损坏数", OracleType.Double, 22).Value = (object)this.P44渣口中套损坏数??DBNull.Value;
                    insertCmd.Parameters.Add(":P45渣口小套损坏数", OracleType.Double, 22).Value = (object)this.P45渣口小套损坏数??DBNull.Value;
                    insertCmd.Parameters.Add(":P46渣铁比", OracleType.Double, 22).Value = (object)this.P46渣铁比??DBNull.Value;
                    insertCmd.Parameters.Add(":P47灰铁比", OracleType.Double, 22).Value = (object)this.P47灰铁比??DBNull.Value;
                    insertCmd.Parameters.Add(":P48原料总耗", OracleType.Double, 22).Value = (object)this.P48原料总耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P49原料单耗", OracleType.Double, 22).Value = (object)this.P49原料单耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P50机烧消耗", OracleType.Double, 22).Value = (object)this.P50机烧消耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P51竖炉球消耗", OracleType.Double, 22).Value = (object)this.P51竖炉球消耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P52印度球消耗", OracleType.Double, 22).Value = (object)this.P52印度球消耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P53其它熟料消耗", OracleType.Double, 22).Value = (object)this.P53其它熟料消耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P54本溪矿消耗", OracleType.Double, 22).Value = (object)this.P54本溪矿消耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P55其它生料消耗", OracleType.Double, 22).Value = (object)this.P55其它生料消耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P56废铁总耗", OracleType.Double, 22).Value = (object)this.P56废铁总耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P57废铁单耗", OracleType.Double, 22).Value = (object)this.P57废铁单耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P58金属收得率", OracleType.Double, 22).Value = (object)this.P58金属收得率??DBNull.Value;
                    insertCmd.Parameters.Add(":P59综合焦炭总耗", OracleType.Double, 22).Value = (object)this.P59综合焦炭总耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P60七号称", OracleType.Double, 22).Value = (object)this.P60七号称??DBNull.Value;
                    insertCmd.Parameters.Add(":P61干毛焦", OracleType.Double, 22).Value = (object)this.P61干毛焦??DBNull.Value;
                    insertCmd.Parameters.Add(":P62干焦粉", OracleType.Double, 22).Value = (object)this.P62干焦粉??DBNull.Value;
                    insertCmd.Parameters.Add(":P63入炉焦炭总耗", OracleType.Double, 22).Value = (object)this.P63入炉焦炭总耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P64入炉焦炭单耗", OracleType.Double, 22).Value = (object)this.P64入炉焦炭单耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P65煤粉总耗", OracleType.Double, 22).Value = (object)this.P65煤粉总耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P66焦丁总耗", OracleType.Double, 22).Value = (object)this.P66焦丁总耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P67焦丁单耗", OracleType.Double, 22).Value = (object)this.P67焦丁单耗??DBNull.Value;
                    insertCmd.Parameters.Add(":P68燃料比", OracleType.Double, 22).Value = (object)this.P68燃料比??DBNull.Value;
                    insertCmd.Parameters.Add(":P69铁成分SI", OracleType.Double, 22).Value = (object)this.P69铁成分SI??DBNull.Value;
                    insertCmd.Parameters.Add(":P70铁成分MN", OracleType.Double, 22).Value = (object)this.P70铁成分MN??DBNull.Value;
                    insertCmd.Parameters.Add(":P71铁成分P", OracleType.Double, 22).Value = (object)this.P71铁成分P??DBNull.Value;
                    insertCmd.Parameters.Add(":P72铁成分S", OracleType.Double, 22).Value = (object)this.P72铁成分S??DBNull.Value;
                    insertCmd.Parameters.Add(":P73渣成分CAO", OracleType.Double, 22).Value = (object)this.P73渣成分CAO??DBNull.Value;
                    insertCmd.Parameters.Add(":P74渣成分SIO2", OracleType.Double, 22).Value = (object)this.P74渣成分SIO2??DBNull.Value;
                    insertCmd.Parameters.Add(":P75渣成分AL2O3", OracleType.Double, 22).Value = (object)this.P75渣成分AL2O3??DBNull.Value;
                    insertCmd.Parameters.Add(":P76渣成分MGO", OracleType.Double, 22).Value = (object)this.P76渣成分MGO??DBNull.Value;
                    insertCmd.Parameters.Add(":P77渣成分FEO", OracleType.Double, 22).Value = (object)this.P77渣成分FEO??DBNull.Value;
                    insertCmd.Parameters.Add(":P78渣成分S", OracleType.Double, 22).Value = (object)this.P78渣成分S??DBNull.Value;
                    insertCmd.Parameters.Add(":P79含SI偏差CAO", OracleType.Double, 22).Value = (object)this.P79含SI偏差CAO??DBNull.Value;
                    insertCmd.Parameters.Add(":P80含SI偏差制铁量", OracleType.Double, 22).Value = (object)this.P80含SI偏差制铁量??DBNull.Value;
                    insertCmd.Parameters.Add(":P81含SI偏差铸造铁", OracleType.Double, 22).Value = (object)this.P81含SI偏差铸造铁??DBNull.Value;
                    insertCmd.Parameters.Add(":综合焦炭单耗", OracleType.Double, 22).Value = (object)this.综合焦炭单耗??DBNull.Value;
                    insertCmd.Parameters.Add(":煤粉单耗", OracleType.Double, 22).Value = (object)this.煤粉单耗??DBNull.Value;
                    insertCmd.Parameters.Add(":一级铁", OracleType.Double, 22).Value = (object)this.一级铁??DBNull.Value;
                    insertCmd.Parameters.Add(":优质铁", OracleType.Double, 22).Value = (object)this.优质铁??DBNull.Value;
                    insertCmd.Parameters.Add(":瓦斯灰", OracleType.Double, 22).Value = (object)this.瓦斯灰??DBNull.Value;
                    insertCmd.Parameters.Add(":收入含铁", OracleType.Double, 22).Value = (object)this.收入含铁??DBNull.Value;
                    insertCmd.Parameters.Add(":支出含铁", OracleType.Double, 22).Value = (object)this.支出含铁??DBNull.Value;
                    insertCmd.Parameters.Add(":富氧量", OracleType.Double, 22).Value = (object)this.富氧量??DBNull.Value;
                    insertCmd.Parameters.Add(":高压操作时间", OracleType.Double, 22).Value = (object)this.高压操作时间??DBNull.Value;
                    insertCmd.Parameters.Add(":有效工作时间", OracleType.Double, 22).Value = (object)this.有效工作时间??DBNull.Value;
                    insertCmd.Parameters.Add(":理论渣量", OracleType.Double, 22).Value = (object)this.理论渣量??DBNull.Value;
                    insertCmd.Parameters.Add(":深料线", OracleType.Double, 22).Value = (object)this.深料线??DBNull.Value;
                    insertCmd.Parameters.Add(":全部料线", OracleType.Double, 22).Value = (object)this.全部料线??DBNull.Value;
                    insertCmd.Parameters.Add(":高炉有效容积", OracleType.Double, 22).Value = (object)this.高炉有效容积??DBNull.Value;
                    insertCmd.Parameters.Add(":高炉实际容积", OracleType.Double, 22).Value = (object)this.高炉实际容积??DBNull.Value;
                    insertCmd.Parameters.Add(":入炉矿含铁", OracleType.Double, 22).Value = (object)this.入炉矿含铁??DBNull.Value;
                    insertCmd.Parameters.Add(":备注", OracleType.VarChar, 2000).Value = this.备注;
                    insertCmd.Parameters.Add(":P82工艺称焦比", OracleType.Double, 22).Value = (object)this.P82工艺称焦比??DBNull.Value;
                    insertCmd.Parameters.Add(":PB块", OracleType.Double, 22).Value = (object)this.PB块 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":纽曼块", OracleType.Double, 22).Value = (object)this.纽曼块 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":锰矿", OracleType.Double, 22).Value = (object)this.锰矿 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":钛球", OracleType.Double, 22).Value = (object)this.钛球 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":溶剂总耗", OracleType.Double, 22).Value = (object)this.溶剂总耗 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":溶剂单耗", OracleType.Double, 22).Value = (object)this.溶剂单耗 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":硅石", OracleType.Double, 22).Value = (object)this.硅石 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":白云石", OracleType.Double, 22).Value = (object)this.白云石 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":蛇纹石", OracleType.Double, 22).Value = (object)this.蛇纹石 ?? DBNull.Value;

                    // 2016-11-24 球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂
                    insertCmd.Parameters.Add(":球团矿", OracleType.Double, 22).Value = (object)this.球团矿 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":国内球团矿", OracleType.Double, 22).Value = (object)this.国内球团矿 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":进口球团矿", OracleType.Double, 22).Value = (object)this.进口球团矿 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":其它块矿", OracleType.Double, 22).Value = (object)this.其它块矿 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":高钛球团矿", OracleType.Double, 22).Value = (object)this.高钛球团矿 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":高品位钛球", OracleType.Double, 22).Value = (object)this.高品位钛球 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":萤石", OracleType.Double, 22).Value = (object)this.萤石 ?? DBNull.Value;
                    insertCmd.Parameters.Add(":其它熔剂", OracleType.Double, 22).Value = (object)this.其它熔剂 ?? DBNull.Value;
                   

                    insertCmd.ExecuteNonQuery();
                }
            }
        }
        public void DbDelete(OracleTransaction trans)
        {
            //DelSql,DelPara
            if (DataState == DataStateType.Delete)
            {
                OracleConnection con = trans.Connection;
                OracleCommand deleteCmd = new OracleCommand();
                deleteCmd.Connection = con;
                deleteCmd.Transaction = trans;
                deleteCmd.CommandText = "DELETE FROM 技术月报 WHERE P年=:P年 and P月=:P月 and P01单位=:P01单位 and P02项目=:P02项目";
                deleteCmd.Parameters.Add(":P年", OracleType.Double, 22).Value = this.P年;
                deleteCmd.Parameters.Add(":P月", OracleType.Double, 22).Value = this.P月;
                deleteCmd.Parameters.Add(":P01单位", OracleType.VarChar, 20).Value = this.P01单位;
                deleteCmd.Parameters.Add(":P02项目", OracleType.VarChar, 20).Value = this.P02项目;

                deleteCmd.ExecuteNonQuery();
            }

        }
        public void DbUpdate(OracleTransaction trans)
        {
            //UpdateSql,UpdatePara
            if (DataState == DataStateType.Update)
            {
                OracleConnection con = trans.Connection;
                OracleCommand updateCmd = new OracleCommand();
                updateCmd.Connection = con;
                updateCmd.Transaction = trans;
                // 2016-11-24 球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂
                updateCmd.CommandText = "UPDATE 技术月报 SET P03全铁产量=:P03全铁产量,P04合格铁=:P04合格铁,P05制钢铁=:P05制钢铁,P06铸造铁=:P06铸造铁,P07折合产量=:P07折合产量,P08合格率=:P08合格率,P09一级品率=:P09一级品率,P10送炼钢优质铁水率=:P10送炼钢优质铁水率,P11高炉利用系数=:P11高炉利用系数,P12入炉焦炭冶炼强度=:P12入炉焦炭冶炼强度,P13综合焦炭冶炼强度=:P13综合焦炭冶炼强度,P14折算综合焦比=:P14折算综合焦比,P15折合入炉焦比=:P15折合入炉焦比,P16入炉矿品位=:P16入炉矿品位,P17熟料比=:P17熟料比,P18入炉焦炭负荷=:P18入炉焦炭负荷,P19综合焦炭负荷=:P19综合焦炭负荷,P20休风时间=:P20休风时间,P21休风率=:P21休风率,P22慢风时间=:P22慢风时间,P23慢风率=:P23慢风率,P24煤气成分CO2=:P24煤气成分CO2,P25煤气成分计算1=:P25煤气成分计算1,P26生铁表面质量=:P26生铁表面质量,P27深料线作业率=:P27深料线作业率,P28回收率=:P28回收率,P29冷风流量=:P29冷风流量,P30平均风温=:P30平均风温,P31风速=:P31风速,P32热风压力=:P32热风压力,P33炉顶压力=:P33炉顶压力,P34炉顶温度=:P34炉顶温度,P35富氧率=:P35富氧率,P36高压率=:P36高压率,P37悬料次数=:P37悬料次数,P38坐料次数=:P38坐料次数,P39崩料次数=:P39崩料次数,P40风口大套损坏数=:P40风口大套损坏数,P41风口中套损坏数=:P41风口中套损坏数,P42风口小套损坏数=:P42风口小套损坏数,P43渣口大套损坏数=:P43渣口大套损坏数,P44渣口中套损坏数=:P44渣口中套损坏数,P45渣口小套损坏数=:P45渣口小套损坏数,P46渣铁比=:P46渣铁比,P47灰铁比=:P47灰铁比,P48原料总耗=:P48原料总耗,P49原料单耗=:P49原料单耗,P50机烧消耗=:P50机烧消耗,P51竖炉球消耗=:P51竖炉球消耗,P52印度球消耗=:P52印度球消耗,P53其它熟料消耗=:P53其它熟料消耗,P54本溪矿消耗=:P54本溪矿消耗,P55其它生料消耗=:P55其它生料消耗,P56废铁总耗=:P56废铁总耗,P57废铁单耗=:P57废铁单耗,P58金属收得率=:P58金属收得率,P59综合焦炭总耗=:P59综合焦炭总耗,P60七号称=:P60七号称,P61干毛焦=:P61干毛焦,P62干焦粉=:P62干焦粉,P63入炉焦炭总耗=:P63入炉焦炭总耗,P64入炉焦炭单耗=:P64入炉焦炭单耗,P65煤粉总耗=:P65煤粉总耗,P66焦丁总耗=:P66焦丁总耗,P67焦丁单耗=:P67焦丁单耗,P68燃料比=:P68燃料比,P69铁成分SI=:P69铁成分SI,P70铁成分MN=:P70铁成分MN,P71铁成分P=:P71铁成分P,P72铁成分S=:P72铁成分S,P73渣成分CAO=:P73渣成分CAO,P74渣成分SIO2=:P74渣成分SIO2,P75渣成分AL2O3=:P75渣成分AL2O3,P76渣成分MGO=:P76渣成分MGO,P77渣成分FEO=:P77渣成分FEO,P78渣成分S=:P78渣成分S,P79含SI偏差CAO=:P79含SI偏差CAO,P80含SI偏差制铁量=:P80含SI偏差制铁量,P81含SI偏差铸造铁=:P81含SI偏差铸造铁,综合焦炭单耗=:综合焦炭单耗,煤粉单耗=:煤粉单耗,一级铁=:一级铁,优质铁=:优质铁,瓦斯灰=:瓦斯灰,收入含铁=:收入含铁,支出含铁=:支出含铁,富氧量=:富氧量,高压操作时间=:高压操作时间,有效工作时间=:有效工作时间,理论渣量=:理论渣量,深料线=:深料线,全部料线=:全部料线,高炉有效容积=:高炉有效容积,高炉实际容积=:高炉实际容积,入炉矿含铁=:入炉矿含铁,备注=:备注,P82工艺称焦比=:P82工艺称焦比,PB块=:PB块,纽曼块=:纽曼块,锰矿=:锰矿,钛球=:钛球,溶剂总耗=:溶剂总耗,溶剂单耗=:溶剂单耗,硅石=:硅石,白云石=:白云石,蛇纹石=:蛇纹石,球团矿=:球团矿,国内球团矿=:国内球团矿,进口球团矿=:进口球团矿,其它块矿=:其它块矿,高钛球团矿=:高钛球团矿,高品位钛球=:高品位钛球,萤石=:萤石,其它熔剂=:其它熔剂  WHERE P年=:P年 and P月=:P月 and P01单位=:P01单位 and P02项目=:P02项目";

                updateCmd.Parameters.Add(":P03全铁产量", OracleType.Double, 22).Value = (object)this.P03全铁产量 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P04合格铁", OracleType.Double, 22).Value = (object)this.P04合格铁 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P05制钢铁", OracleType.Double, 22).Value = (object)this.P05制钢铁 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P06铸造铁", OracleType.Double, 22).Value = (object)this.P06铸造铁 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P07折合产量", OracleType.Double, 22).Value = (object)this.P07折合产量 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P08合格率", OracleType.Double, 22).Value = (object)this.P08合格率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P09一级品率", OracleType.Double, 22).Value = (object)this.P09一级品率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P10送炼钢优质铁水率", OracleType.Double, 22).Value = (object)this.P10送炼钢优质铁水率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P11高炉利用系数", OracleType.Double, 22).Value = (object)this.P11高炉利用系数 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P12入炉焦炭冶炼强度", OracleType.Double, 22).Value = (object)this.P12入炉焦炭冶炼强度 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P13综合焦炭冶炼强度", OracleType.Double, 22).Value = (object)this.P13综合焦炭冶炼强度 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P14折算综合焦比", OracleType.Double, 22).Value = (object)this.P14折算综合焦比 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P15折合入炉焦比", OracleType.Double, 22).Value = (object)this.P15折合入炉焦比 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P16入炉矿品位", OracleType.Double, 22).Value = (object)this.P16入炉矿品位 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P17熟料比", OracleType.Double, 22).Value = (object)this.P17熟料比 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P18入炉焦炭负荷", OracleType.Double, 22).Value = (object)this.P18入炉焦炭负荷 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P19综合焦炭负荷", OracleType.Double, 22).Value = (object)this.P19综合焦炭负荷 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P20休风时间", OracleType.Double, 22).Value = (object)this.P20休风时间 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P21休风率", OracleType.Double, 22).Value = (object)this.P21休风率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P22慢风时间", OracleType.Double, 22).Value = (object)this.P22慢风时间 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P23慢风率", OracleType.Double, 22).Value = (object)this.P23慢风率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P24煤气成分CO2", OracleType.Double, 22).Value = (object)this.P24煤气成分CO2 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P25煤气成分计算1", OracleType.Double, 22).Value = (object)this.P25煤气成分计算1 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P26生铁表面质量", OracleType.Double, 22).Value = (object)this.P26生铁表面质量 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P27深料线作业率", OracleType.Double, 22).Value = (object)this.P27深料线作业率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P28回收率", OracleType.Double, 22).Value = (object)this.P28回收率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P29冷风流量", OracleType.Double, 22).Value = (object)this.P29冷风流量 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P30平均风温", OracleType.Double, 22).Value = (object)this.P30平均风温 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P31风速", OracleType.Double, 22).Value = (object)this.P31风速 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P32热风压力", OracleType.Double, 22).Value = (object)this.P32热风压力 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P33炉顶压力", OracleType.Double, 22).Value = (object)this.P33炉顶压力 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P34炉顶温度", OracleType.Double, 22).Value = (object)this.P34炉顶温度 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P35富氧率", OracleType.Double, 22).Value = (object)this.P35富氧率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P36高压率", OracleType.Double, 22).Value = (object)this.P36高压率 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P37悬料次数", OracleType.Double, 22).Value = (object)this.P37悬料次数 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P38坐料次数", OracleType.Double, 22).Value = (object)this.P38坐料次数 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P39崩料次数", OracleType.Double, 22).Value = (object)this.P39崩料次数 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P40风口大套损坏数", OracleType.Double, 22).Value = (object)this.P40风口大套损坏数 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P41风口中套损坏数", OracleType.Double, 22).Value = (object)this.P41风口中套损坏数 ?? DBNull.Value;
                updateCmd.Parameters.Add(":P42风口小套损坏数", OracleType.Double, 22).Value = (object)this.P42风口小套损坏数??DBNull.Value;
                updateCmd.Parameters.Add(":P43渣口大套损坏数", OracleType.Double, 22).Value = (object)this.P43渣口大套损坏数??DBNull.Value;
                updateCmd.Parameters.Add(":P44渣口中套损坏数", OracleType.Double, 22).Value = (object)this.P44渣口中套损坏数??DBNull.Value;
                updateCmd.Parameters.Add(":P45渣口小套损坏数", OracleType.Double, 22).Value = (object)this.P45渣口小套损坏数??DBNull.Value;
                updateCmd.Parameters.Add(":P46渣铁比", OracleType.Double, 22).Value = (object)this.P46渣铁比??DBNull.Value;
                updateCmd.Parameters.Add(":P47灰铁比", OracleType.Double, 22).Value = (object)this.P47灰铁比??DBNull.Value;
                updateCmd.Parameters.Add(":P48原料总耗", OracleType.Double, 22).Value = (object)this.P48原料总耗??DBNull.Value;
                updateCmd.Parameters.Add(":P49原料单耗", OracleType.Double, 22).Value = (object)this.P49原料单耗??DBNull.Value;
                updateCmd.Parameters.Add(":P50机烧消耗", OracleType.Double, 22).Value = (object)this.P50机烧消耗??DBNull.Value;
                updateCmd.Parameters.Add(":P51竖炉球消耗", OracleType.Double, 22).Value = (object)this.P51竖炉球消耗??DBNull.Value;
                updateCmd.Parameters.Add(":P52印度球消耗", OracleType.Double, 22).Value = (object)this.P52印度球消耗??DBNull.Value;
                updateCmd.Parameters.Add(":P53其它熟料消耗", OracleType.Double, 22).Value = (object)this.P53其它熟料消耗??DBNull.Value;
                updateCmd.Parameters.Add(":P54本溪矿消耗", OracleType.Double, 22).Value = (object)this.P54本溪矿消耗??DBNull.Value;
                updateCmd.Parameters.Add(":P55其它生料消耗", OracleType.Double, 22).Value = (object)this.P55其它生料消耗??DBNull.Value;
                updateCmd.Parameters.Add(":P56废铁总耗", OracleType.Double, 22).Value = (object)this.P56废铁总耗??DBNull.Value;
                updateCmd.Parameters.Add(":P57废铁单耗", OracleType.Double, 22).Value = (object)this.P57废铁单耗??DBNull.Value;
                updateCmd.Parameters.Add(":P58金属收得率", OracleType.Double, 22).Value = (object)this.P58金属收得率??DBNull.Value;
                updateCmd.Parameters.Add(":P59综合焦炭总耗", OracleType.Double, 22).Value = (object)this.P59综合焦炭总耗??DBNull.Value;
                updateCmd.Parameters.Add(":P60七号称", OracleType.Double, 22).Value = (object)this.P60七号称??DBNull.Value;
                updateCmd.Parameters.Add(":P61干毛焦", OracleType.Double, 22).Value = (object)this.P61干毛焦??DBNull.Value;
                updateCmd.Parameters.Add(":P62干焦粉", OracleType.Double, 22).Value = (object)this.P62干焦粉??DBNull.Value;
                updateCmd.Parameters.Add(":P63入炉焦炭总耗", OracleType.Double, 22).Value = (object)this.P63入炉焦炭总耗??DBNull.Value;
                updateCmd.Parameters.Add(":P64入炉焦炭单耗", OracleType.Double, 22).Value = (object)this.P64入炉焦炭单耗??DBNull.Value;
                updateCmd.Parameters.Add(":P65煤粉总耗", OracleType.Double, 22).Value = (object)this.P65煤粉总耗??DBNull.Value;
                updateCmd.Parameters.Add(":P66焦丁总耗", OracleType.Double, 22).Value = (object)this.P66焦丁总耗??DBNull.Value;
                updateCmd.Parameters.Add(":P67焦丁单耗", OracleType.Double, 22).Value = (object)this.P67焦丁单耗??DBNull.Value;
                updateCmd.Parameters.Add(":P68燃料比", OracleType.Double, 22).Value = (object)this.P68燃料比??DBNull.Value;
                updateCmd.Parameters.Add(":P69铁成分SI", OracleType.Double, 22).Value = (object)this.P69铁成分SI??DBNull.Value;
                updateCmd.Parameters.Add(":P70铁成分MN", OracleType.Double, 22).Value = (object)this.P70铁成分MN??DBNull.Value;
                updateCmd.Parameters.Add(":P71铁成分P", OracleType.Double, 22).Value = (object)this.P71铁成分P??DBNull.Value;
                updateCmd.Parameters.Add(":P72铁成分S", OracleType.Double, 22).Value = (object)this.P72铁成分S??DBNull.Value;
                updateCmd.Parameters.Add(":P73渣成分CAO", OracleType.Double, 22).Value = (object)this.P73渣成分CAO??DBNull.Value;
                updateCmd.Parameters.Add(":P74渣成分SIO2", OracleType.Double, 22).Value = (object)this.P74渣成分SIO2??DBNull.Value;
                updateCmd.Parameters.Add(":P75渣成分AL2O3", OracleType.Double, 22).Value = (object)this.P75渣成分AL2O3??DBNull.Value;
                updateCmd.Parameters.Add(":P76渣成分MGO", OracleType.Double, 22).Value = (object)this.P76渣成分MGO??DBNull.Value;
                updateCmd.Parameters.Add(":P77渣成分FEO", OracleType.Double, 22).Value = (object)this.P77渣成分FEO??DBNull.Value;
                updateCmd.Parameters.Add(":P78渣成分S", OracleType.Double, 22).Value = (object)this.P78渣成分S??DBNull.Value;
                updateCmd.Parameters.Add(":P79含SI偏差CAO", OracleType.Double, 22).Value = (object)this.P79含SI偏差CAO??DBNull.Value;
                updateCmd.Parameters.Add(":P80含SI偏差制铁量", OracleType.Double, 22).Value = (object)this.P80含SI偏差制铁量??DBNull.Value;
                updateCmd.Parameters.Add(":P81含SI偏差铸造铁", OracleType.Double, 22).Value = (object)this.P81含SI偏差铸造铁??DBNull.Value;
                updateCmd.Parameters.Add(":综合焦炭单耗", OracleType.Double, 22).Value = (object)this.综合焦炭单耗??DBNull.Value;
                updateCmd.Parameters.Add(":煤粉单耗", OracleType.Double, 22).Value = (object)this.煤粉单耗??DBNull.Value;
                updateCmd.Parameters.Add(":一级铁", OracleType.Double, 22).Value = (object)this.一级铁??DBNull.Value;
                updateCmd.Parameters.Add(":优质铁", OracleType.Double, 22).Value = (object)this.优质铁??DBNull.Value;
                updateCmd.Parameters.Add(":瓦斯灰", OracleType.Double, 22).Value = (object)this.瓦斯灰??DBNull.Value;
                updateCmd.Parameters.Add(":收入含铁", OracleType.Double, 22).Value = (object)this.收入含铁??DBNull.Value;
                updateCmd.Parameters.Add(":支出含铁", OracleType.Double, 22).Value = (object)this.支出含铁??DBNull.Value;
                updateCmd.Parameters.Add(":富氧量", OracleType.Double, 22).Value = (object)this.富氧量??DBNull.Value;
                updateCmd.Parameters.Add(":高压操作时间", OracleType.Double, 22).Value = (object)this.高压操作时间??DBNull.Value;
                updateCmd.Parameters.Add(":有效工作时间", OracleType.Double, 22).Value = (object)this.有效工作时间??DBNull.Value;
                updateCmd.Parameters.Add(":理论渣量", OracleType.Double, 22).Value = (object)this.理论渣量??DBNull.Value;
                updateCmd.Parameters.Add(":深料线", OracleType.Double, 22).Value = (object)this.深料线??DBNull.Value;
                updateCmd.Parameters.Add(":全部料线", OracleType.Double, 22).Value = (object)this.全部料线??DBNull.Value;
                updateCmd.Parameters.Add(":高炉有效容积", OracleType.Double, 22).Value = (object)this.高炉有效容积??DBNull.Value;
                updateCmd.Parameters.Add(":高炉实际容积", OracleType.Double, 22).Value = (object)this.高炉实际容积??DBNull.Value;
                updateCmd.Parameters.Add(":入炉矿含铁", OracleType.Double, 22).Value = (object)this.入炉矿含铁??DBNull.Value;
                updateCmd.Parameters.Add(":备注", OracleType.VarChar, 2000).Value = this.备注;
                updateCmd.Parameters.Add(":P82工艺称焦比", OracleType.Double, 22).Value = (object)this.P82工艺称焦比 ?? DBNull.Value;
                updateCmd.Parameters.Add(":PB块", OracleType.Double, 22).Value = (object)this.PB块 ?? DBNull.Value;
                updateCmd.Parameters.Add(":纽曼块", OracleType.Double, 22).Value = (object)this.纽曼块 ?? DBNull.Value;
                updateCmd.Parameters.Add(":锰矿", OracleType.Double, 22).Value = (object)this.锰矿 ?? DBNull.Value;
                updateCmd.Parameters.Add(":钛球", OracleType.Double, 22).Value = (object)this.钛球 ?? DBNull.Value;
                updateCmd.Parameters.Add(":溶剂总耗", OracleType.Double, 22).Value = (object)this.溶剂总耗 ?? DBNull.Value;
                updateCmd.Parameters.Add(":溶剂单耗", OracleType.Double, 22).Value = (object)this.溶剂单耗 ?? DBNull.Value;
                updateCmd.Parameters.Add(":硅石", OracleType.Double, 22).Value = (object)this.硅石 ?? DBNull.Value;
                updateCmd.Parameters.Add(":白云石", OracleType.Double, 22).Value = (object)this.白云石 ?? DBNull.Value;
                updateCmd.Parameters.Add(":蛇纹石", OracleType.Double, 22).Value = (object)this.蛇纹石 ?? DBNull.Value;
                // 2016-11-24 球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂
                updateCmd.Parameters.Add(":球团矿", OracleType.Double, 22).Value = (object)this.球团矿 ?? DBNull.Value;
                updateCmd.Parameters.Add(":国内球团矿", OracleType.Double, 22).Value = (object)this.国内球团矿 ?? DBNull.Value;
                updateCmd.Parameters.Add(":进口球团矿", OracleType.Double, 22).Value = (object)this.进口球团矿 ?? DBNull.Value;
                updateCmd.Parameters.Add(":其它块矿", OracleType.Double, 22).Value = (object)this.其它块矿 ?? DBNull.Value;
                updateCmd.Parameters.Add(":高钛球团矿", OracleType.Double, 22).Value = (object)this.高钛球团矿 ?? DBNull.Value;
                updateCmd.Parameters.Add(":高品位钛球", OracleType.Double, 22).Value = (object)this.高品位钛球 ?? DBNull.Value;
                updateCmd.Parameters.Add(":萤石", OracleType.Double, 22).Value = (object)this.萤石 ?? DBNull.Value;
                updateCmd.Parameters.Add(":其它熔剂", OracleType.Double, 22).Value = (object)this.其它熔剂 ?? DBNull.Value;

                updateCmd.Parameters.Add(":P年", OracleType.Double, 22).Value = this.P年;
                updateCmd.Parameters.Add(":P月", OracleType.Double, 22).Value = this.P月;
                updateCmd.Parameters.Add(":P01单位", OracleType.VarChar, 20).Value = this.P01单位;
                updateCmd.Parameters.Add(":P02项目", OracleType.VarChar, 20).Value = this.P02项目;
                updateCmd.ExecuteNonQuery();
            }


        }
    }
    public partial class JiShuYueBaoTable : BindingList<JiShuYueBao>, IFilter
    {
        //技术月报,ltznConnectionString
        private int? _年 = null;

        public int? 年
        {
            get { return _年; }
            set { _年 = value; }
        }

        private int? _月 = null;

        public int? 月
        {
            get { return _月; }
            set { _月 = value; }
        }


        private List<JiShuYueBao> hideList = new List<JiShuYueBao>();

        public void Save()
        {
            OracleConnection con = new OracleConnection(Properties.Settings.Default.ltznConnectionString);
            con.Open();
            OracleTransaction trans = con.BeginTransaction();
            Save(trans);
            trans.Commit();
            con.Close();
        }

        public void Save(OracleTransaction trans)
        {
            List<JiShuYueBao> deleteList = new List<JiShuYueBao>();
            OracleConnection con = trans.Connection;
            foreach (JiShuYueBao item in hideList)
            {
                if (item.DataState == DataStateType.Delete)
                    deleteList.Add(item);
                item.Save(trans);
            }
            foreach (JiShuYueBao item in deleteList)
            {
                hideList.Remove(item);
            }
        }

        protected override void InsertItem(int index, JiShuYueBao item)
        {
            base.InsertItem(index, item);
            if (!beginAdjustData)
            {
                hideList.Add(item);
            }
        }

        protected override void ClearItems()
        {
            if (!beginAdjustData)
            {
                foreach (JiShuYueBao delObj in this)
                {
                    if (delObj.DataState == DataStateType.Add)
                    {
                        hideList.Remove(delObj);
                    }
                    delObj.Delete();
                }
            }
            base.ClearItems();
        }

        protected override void RemoveItem(int index)
        {
            if (!beginAdjustData)
            {
                JiShuYueBao delObj = this[index];
                if (delObj.DataState == DataStateType.Add)
                {
                    hideList.Remove(delObj);
                }
                delObj.Delete();
            }
            base.RemoveItem(index);
        }

        protected override void ApplySortCore(PropertyDescriptor prop, ListSortDirection direction)
        {
            propertyDescriptor = prop;
            sortDirection = direction;
            _IsSortedCore = true;
            List<JiShuYueBao> list = this.Items as List<JiShuYueBao>;
            list.Sort(Compare);
            _IsSortedCore = true;
            ListChangedEventArgs arg = new ListChangedEventArgs(ListChangedType.Reset, propertyDescriptor);
            this.OnListChanged(arg);

        }

        private PropertyDescriptor propertyDescriptor = null;
        protected override PropertyDescriptor SortPropertyCore
        {
            get
            {
                return propertyDescriptor;
            }
        }

        private ListSortDirection sortDirection = ListSortDirection.Ascending;
        protected override ListSortDirection SortDirectionCore
        {
            get
            {
                return sortDirection;
            }
        }

        private int Compare(JiShuYueBao x, JiShuYueBao y)
        {
            if (sortDirection == ListSortDirection.Descending)
                return CompareValue(propertyDescriptor.GetValue(y), propertyDescriptor.GetValue(x));
            else
                return CompareValue(propertyDescriptor.GetValue(x), propertyDescriptor.GetValue(y));
        }

        private int Compare2(JiShuYueBao x, JiShuYueBao y)
        {
            return hideList.IndexOf(x).CompareTo(hideList.IndexOf(y));
        }

        static int CompareValue(object o1, object o2)
        {
            if (o1 == null) return o2 == null ? 0 : -1;
            else if (o2 == null) return 1;
            else if (o1 is IComparable) return ((IComparable)o1).CompareTo(o2);
            else if (o2 is IComparable) return ((IComparable)o2).CompareTo(o1);
            else return o1.ToString().CompareTo(o2.ToString());
        }

        protected override bool SupportsSortingCore
        {
            get
            {
                return true;
            }
        }

        private bool _IsSortedCore = false;
        protected override bool IsSortedCore
        {
            get
            {
                return _IsSortedCore;
            }
        }

        protected override void RemoveSortCore()
        {
            _IsSortedCore = false;
            List<JiShuYueBao> list = this.Items as List<JiShuYueBao>;
            list.Sort(Compare2);
            ListChangedEventArgs arg = new ListChangedEventArgs(ListChangedType.Reset, -1);
            this.OnListChanged(arg);
        }

        public void RemoveSort()
        {
            RemoveSortCore();
        }

        private bool beginAdjustData = false;



        public void CancelFilter()
        {
            beginAdjustData = true;
            this.Clear();
            foreach (JiShuYueBao item in hideList)
            {
                if (item.DataState != DataStateType.Delete)
                {
                    this.Add(item);
                }
            }
            beginAdjustData = false;

            ListChangedEventArgs arg = new ListChangedEventArgs(ListChangedType.Reset, -1);
            this.OnListChanged(arg);
        }

        protected override void OnListChanged(ListChangedEventArgs e)
        {
            if (!beginAdjustData)
                base.OnListChanged(e);
        }

        #region IFilter 成员

        public void Filter(Dictionary<string, string> para)
        {
            beginAdjustData = true;
            this.Clear();
            foreach (JiShuYueBao hideItem in hideList)
            {
                bool shouldAdd = true;
                shouldAdd &= (hideItem.DataState != DataStateType.Delete);

                foreach (KeyValuePair<string, string> item in para)
                {
                    PropertyInfo p = typeof(JiShuYueBao).GetProperty(item.Key);
                    if (p == null) continue;
                    if (p.PropertyType == typeof(string))
                    {
                        string val = Convert.ToString(p.GetValue(hideItem, null));
                        shouldAdd &= val.StartsWith(item.Value);
                    }
                    if (p.PropertyType == typeof(double))
                    {
                        double val = Convert.ToDouble(p.GetValue(hideItem, null));
                        shouldAdd &= (val == Convert.ToDouble(item.Value));
                    }
                    if (p.PropertyType == typeof(int))
                    {
                        int val = Convert.ToInt32(p.GetValue(hideItem, null));
                        shouldAdd &= (val == Convert.ToInt32(item.Value));
                    }
                    if (p.PropertyType == typeof(long))
                    {
                        long val = Convert.ToInt64(p.GetValue(hideItem, null));
                        shouldAdd &= (val == Convert.ToInt64(item.Value));
                    }
                }
                if (shouldAdd)
                    this.Add(hideItem);
            }
            List<JiShuYueBao> list = this.Items as List<JiShuYueBao>;
            if (IsSortedCore)
                list.Sort(Compare);
            else
                list.Sort(Compare2);

            beginAdjustData = false;
            ListChangedEventArgs arg = new ListChangedEventArgs(ListChangedType.Reset, -1);
            this.OnListChanged(arg);
        }

        #endregion
        public void Load()
        {
            //ConStr, EntiyType, SelectSql, SelectPara, SelectParaVal
            beginAdjustData = true;
            this.Clear();
            hideList.Clear();
            OracleConnection con = new OracleConnection(Properties.Settings.Default.ltznConnectionString);
            con.Open();
            OracleCommand selectCmd = new OracleCommand();
            selectCmd.Connection = con;
            selectCmd.CommandText = "SELECT P年,P月,P01单位,P02项目,P03全铁产量,P04合格铁,P05制钢铁,P06铸造铁,P07折合产量,P08合格率,P09一级品率,P10送炼钢优质铁水率,P11高炉利用系数,P12入炉焦炭冶炼强度,P13综合焦炭冶炼强度,P14折算综合焦比,P15折合入炉焦比,P16入炉矿品位,P17熟料比,P18入炉焦炭负荷,P19综合焦炭负荷,P20休风时间,P21休风率,P22慢风时间,P23慢风率,P24煤气成分CO2,P25煤气成分计算1,P26生铁表面质量,P27深料线作业率,P28回收率,P29冷风流量,P30平均风温,P31风速,P32热风压力,P33炉顶压力,P34炉顶温度,P35富氧率,P36高压率,P37悬料次数,P38坐料次数,P39崩料次数,P40风口大套损坏数,P41风口中套损坏数,P42风口小套损坏数,P43渣口大套损坏数,P44渣口中套损坏数,P45渣口小套损坏数,P46渣铁比,P47灰铁比,P48原料总耗,P49原料单耗,P50机烧消耗,P51竖炉球消耗,P52印度球消耗,P53其它熟料消耗,P54本溪矿消耗,P55其它生料消耗,P56废铁总耗,P57废铁单耗,P58金属收得率,P59综合焦炭总耗,P60七号称,P61干毛焦,P62干焦粉,P63入炉焦炭总耗,P64入炉焦炭单耗,P65煤粉总耗,P66焦丁总耗,P67焦丁单耗,P68燃料比,P69铁成分SI,P70铁成分MN,P71铁成分P,P72铁成分S,P73渣成分CAO,P74渣成分SIO2,P75渣成分AL2O3,P76渣成分MGO,P77渣成分FEO,P78渣成分S,P79含SI偏差CAO,P80含SI偏差制铁量,P81含SI偏差铸造铁,综合焦炭单耗,煤粉单耗,一级铁,优质铁,瓦斯灰,收入含铁,支出含铁,富氧量,高压操作时间,有效工作时间,理论渣量,深料线,全部料线,高炉有效容积,高炉实际容积,入炉矿含铁,备注,P82工艺称焦比 FROM 技术月报";

            OracleDataReader dr = selectCmd.ExecuteReader();
            while (dr.Read())
            {
                JiShuYueBao item = new JiShuYueBao();
                item.BeginInit();
                if (dr.IsDBNull(0)) item.P年 = 0; else item.P年 = dr.GetInt32(0);
                if (dr.IsDBNull(1)) item.P月 = 0; else item.P月 = dr.GetInt32(1);
                if (dr.IsDBNull(2)) item.P01单位 = ""; else item.P01单位 = dr.GetString(2);
                if (dr.IsDBNull(3)) item.P02项目 = ""; else item.P02项目 = dr.GetString(3);
                if (dr.IsDBNull(4)) item.P03全铁产量 = 0; else item.P03全铁产量 = dr.GetDouble(4);
                if (dr.IsDBNull(5)) item.P04合格铁 = 0; else item.P04合格铁 = dr.GetDouble(5);
                if (dr.IsDBNull(6)) item.P05制钢铁 = 0; else item.P05制钢铁 = dr.GetDouble(6);
                if (dr.IsDBNull(7)) item.P06铸造铁 = 0; else item.P06铸造铁 = dr.GetDouble(7);
                if (dr.IsDBNull(8)) item.P07折合产量 = 0; else item.P07折合产量 = dr.GetDouble(8);
                if (dr.IsDBNull(9)) item.P08合格率 = 0; else item.P08合格率 = dr.GetDouble(9);
                if (dr.IsDBNull(10)) item.P09一级品率 = 0; else item.P09一级品率 = dr.GetDouble(10);
                if (dr.IsDBNull(11)) item.P10送炼钢优质铁水率 = 0; else item.P10送炼钢优质铁水率 = dr.GetDouble(11);
                if (dr.IsDBNull(12)) item.P11高炉利用系数 = 0; else item.P11高炉利用系数 = dr.GetDouble(12);
                if (dr.IsDBNull(13)) item.P12入炉焦炭冶炼强度 = 0; else item.P12入炉焦炭冶炼强度 = dr.GetDouble(13);
                if (dr.IsDBNull(14)) item.P13综合焦炭冶炼强度 = 0; else item.P13综合焦炭冶炼强度 = dr.GetDouble(14);
                if (dr.IsDBNull(15)) item.P14折算综合焦比 = 0; else item.P14折算综合焦比 = dr.GetDouble(15);
                if (dr.IsDBNull(16)) item.P15折合入炉焦比 = 0; else item.P15折合入炉焦比 = dr.GetDouble(16);
                if (dr.IsDBNull(17)) item.P16入炉矿品位 = 0; else item.P16入炉矿品位 = dr.GetDouble(17);
                if (dr.IsDBNull(18)) item.P17熟料比 = 0; else item.P17熟料比 = dr.GetDouble(18);
                if (dr.IsDBNull(19)) item.P18入炉焦炭负荷 = 0; else item.P18入炉焦炭负荷 = dr.GetDouble(19);
                if (dr.IsDBNull(20)) item.P19综合焦炭负荷 = 0; else item.P19综合焦炭负荷 = dr.GetDouble(20);
                if (dr.IsDBNull(21)) item.P20休风时间 = 0; else item.P20休风时间 = dr.GetDouble(21);
                if (dr.IsDBNull(22)) item.P21休风率 = 0; else item.P21休风率 = dr.GetDouble(22);
                if (dr.IsDBNull(23)) item.P22慢风时间 = 0; else item.P22慢风时间 = dr.GetDouble(23);
                if (dr.IsDBNull(24)) item.P23慢风率 = 0; else item.P23慢风率 = dr.GetDouble(24);
                if (dr.IsDBNull(25)) item.P24煤气成分CO2 = 0; else item.P24煤气成分CO2 = dr.GetDouble(25);
                if (dr.IsDBNull(26)) item.P25煤气成分计算1 = 0; else item.P25煤气成分计算1 = dr.GetDouble(26);
                if (dr.IsDBNull(27)) item.P26生铁表面质量 = 0; else item.P26生铁表面质量 = dr.GetDouble(27);
                if (dr.IsDBNull(28)) item.P27深料线作业率 = 0; else item.P27深料线作业率 = dr.GetDouble(28);
                if (dr.IsDBNull(29)) item.P28回收率 = 0; else item.P28回收率 = dr.GetDouble(29);
                if (dr.IsDBNull(30)) item.P29冷风流量 = 0; else item.P29冷风流量 = dr.GetDouble(30);
                if (dr.IsDBNull(31)) item.P30平均风温 = 0; else item.P30平均风温 = dr.GetDouble(31);
                if (dr.IsDBNull(32)) item.P31风速 = 0; else item.P31风速 = dr.GetDouble(32);
                if (dr.IsDBNull(33)) item.P32热风压力 = 0; else item.P32热风压力 = dr.GetDouble(33);
                if (dr.IsDBNull(34)) item.P33炉顶压力 = 0; else item.P33炉顶压力 = dr.GetDouble(34);
                if (dr.IsDBNull(35)) item.P34炉顶温度 = 0; else item.P34炉顶温度 = dr.GetDouble(35);
                if (dr.IsDBNull(36)) item.P35富氧率 = 0; else item.P35富氧率 = dr.GetDouble(36);
                if (dr.IsDBNull(37)) item.P36高压率 = 0; else item.P36高压率 = dr.GetDouble(37);
                if (dr.IsDBNull(38)) item.P37悬料次数 = 0; else item.P37悬料次数 = dr.GetDouble(38);
                if (dr.IsDBNull(39)) item.P38坐料次数 = 0; else item.P38坐料次数 = dr.GetDouble(39);
                if (dr.IsDBNull(40)) item.P39崩料次数 = 0; else item.P39崩料次数 = dr.GetDouble(40);
                if (dr.IsDBNull(41)) item.P40风口大套损坏数 = 0; else item.P40风口大套损坏数 = dr.GetDouble(41);
                if (dr.IsDBNull(42)) item.P41风口中套损坏数 = 0; else item.P41风口中套损坏数 = dr.GetDouble(42);
                if (dr.IsDBNull(43)) item.P42风口小套损坏数 = 0; else item.P42风口小套损坏数 = dr.GetDouble(43);
                if (dr.IsDBNull(44)) item.P43渣口大套损坏数 = 0; else item.P43渣口大套损坏数 = dr.GetDouble(44);
                if (dr.IsDBNull(45)) item.P44渣口中套损坏数 = 0; else item.P44渣口中套损坏数 = dr.GetDouble(45);
                if (dr.IsDBNull(46)) item.P45渣口小套损坏数 = 0; else item.P45渣口小套损坏数 = dr.GetDouble(46);
                if (dr.IsDBNull(47)) item.P46渣铁比 = 0; else item.P46渣铁比 = dr.GetDouble(47);
                if (dr.IsDBNull(48)) item.P47灰铁比 = 0; else item.P47灰铁比 = dr.GetDouble(48);
                if (dr.IsDBNull(49)) item.P48原料总耗 = 0; else item.P48原料总耗 = dr.GetDouble(49);
                if (dr.IsDBNull(50)) item.P49原料单耗 = 0; else item.P49原料单耗 = dr.GetDouble(50);
                if (dr.IsDBNull(51)) item.P50机烧消耗 = 0; else item.P50机烧消耗 = dr.GetDouble(51);
                if (dr.IsDBNull(52)) item.P51竖炉球消耗 = 0; else item.P51竖炉球消耗 = dr.GetDouble(52);
                if (dr.IsDBNull(53)) item.P52印度球消耗 = 0; else item.P52印度球消耗 = dr.GetDouble(53);
                if (dr.IsDBNull(54)) item.P53其它熟料消耗 = 0; else item.P53其它熟料消耗 = dr.GetDouble(54);
                if (dr.IsDBNull(55)) item.P54本溪矿消耗 = 0; else item.P54本溪矿消耗 = dr.GetDouble(55);
                if (dr.IsDBNull(56)) item.P55其它生料消耗 = 0; else item.P55其它生料消耗 = dr.GetDouble(56);
                if (dr.IsDBNull(57)) item.P56废铁总耗 = 0; else item.P56废铁总耗 = dr.GetDouble(57);
                if (dr.IsDBNull(58)) item.P57废铁单耗 = 0; else item.P57废铁单耗 = dr.GetDouble(58);
                if (dr.IsDBNull(59)) item.P58金属收得率 = 0; else item.P58金属收得率 = dr.GetDouble(59);
                if (dr.IsDBNull(60)) item.P59综合焦炭总耗 = 0; else item.P59综合焦炭总耗 = dr.GetDouble(60);
                if (dr.IsDBNull(61)) item.P60七号称 = 0; else item.P60七号称 = dr.GetDouble(61);
                if (dr.IsDBNull(62)) item.P61干毛焦 = 0; else item.P61干毛焦 = dr.GetDouble(62);
                if (dr.IsDBNull(63)) item.P62干焦粉 = 0; else item.P62干焦粉 = dr.GetDouble(63);
                if (dr.IsDBNull(64)) item.P63入炉焦炭总耗 = 0; else item.P63入炉焦炭总耗 = dr.GetDouble(64);
                if (dr.IsDBNull(65)) item.P64入炉焦炭单耗 = 0; else item.P64入炉焦炭单耗 = dr.GetDouble(65);
                if (dr.IsDBNull(66)) item.P65煤粉总耗 = 0; else item.P65煤粉总耗 = dr.GetDouble(66);
                if (dr.IsDBNull(67)) item.P66焦丁总耗 = 0; else item.P66焦丁总耗 = dr.GetDouble(67);
                if (dr.IsDBNull(68)) item.P67焦丁单耗 = 0; else item.P67焦丁单耗 = dr.GetDouble(68);
                if (dr.IsDBNull(69)) item.P68燃料比 = 0; else item.P68燃料比 = dr.GetDouble(69);
                if (dr.IsDBNull(70)) item.P69铁成分SI = 0; else item.P69铁成分SI = dr.GetDouble(70);
                if (dr.IsDBNull(71)) item.P70铁成分MN = 0; else item.P70铁成分MN = dr.GetDouble(71);
                if (dr.IsDBNull(72)) item.P71铁成分P = 0; else item.P71铁成分P = dr.GetDouble(72);
                if (dr.IsDBNull(73)) item.P72铁成分S = 0; else item.P72铁成分S = dr.GetDouble(73);
                if (dr.IsDBNull(74)) item.P73渣成分CAO = 0; else item.P73渣成分CAO = dr.GetDouble(74);
                if (dr.IsDBNull(75)) item.P74渣成分SIO2 = 0; else item.P74渣成分SIO2 = dr.GetDouble(75);
                if (dr.IsDBNull(76)) item.P75渣成分AL2O3 = 0; else item.P75渣成分AL2O3 = dr.GetDouble(76);
                if (dr.IsDBNull(77)) item.P76渣成分MGO = 0; else item.P76渣成分MGO = dr.GetDouble(77);
                if (dr.IsDBNull(78)) item.P77渣成分FEO = 0; else item.P77渣成分FEO = dr.GetDouble(78);
                if (dr.IsDBNull(79)) item.P78渣成分S = 0; else item.P78渣成分S = dr.GetDouble(79);
                if (dr.IsDBNull(80)) item.P79含SI偏差CAO = 0; else item.P79含SI偏差CAO = dr.GetDouble(80);
                if (dr.IsDBNull(81)) item.P80含SI偏差制铁量 = 0; else item.P80含SI偏差制铁量 = dr.GetDouble(81);
                if (dr.IsDBNull(82)) item.P81含SI偏差铸造铁 = 0; else item.P81含SI偏差铸造铁 = dr.GetDouble(82);
                if (dr.IsDBNull(83)) item.综合焦炭单耗 = 0; else item.综合焦炭单耗 = dr.GetDouble(83);
                if (dr.IsDBNull(84)) item.煤粉单耗 = 0; else item.煤粉单耗 = dr.GetDouble(84);
                if (dr.IsDBNull(85)) item.一级铁 = 0; else item.一级铁 = dr.GetDouble(85);
                if (dr.IsDBNull(86)) item.优质铁 = 0; else item.优质铁 = dr.GetDouble(86);
                if (dr.IsDBNull(87)) item.瓦斯灰 = 0; else item.瓦斯灰 = dr.GetDouble(87);
                if (dr.IsDBNull(88)) item.收入含铁 = 0; else item.收入含铁 = dr.GetDouble(88);
                if (dr.IsDBNull(89)) item.支出含铁 = 0; else item.支出含铁 = dr.GetDouble(89);
                if (dr.IsDBNull(90)) item.富氧量 = 0; else item.富氧量 = dr.GetDouble(90);
                if (dr.IsDBNull(91)) item.高压操作时间 = 0; else item.高压操作时间 = dr.GetDouble(91);
                if (dr.IsDBNull(92)) item.有效工作时间 = 0; else item.有效工作时间 = dr.GetDouble(92);
                if (dr.IsDBNull(93)) item.理论渣量 = 0; else item.理论渣量 = dr.GetDouble(93);
                if (dr.IsDBNull(94)) item.深料线 = 0; else item.深料线 = dr.GetDouble(94);
                if (dr.IsDBNull(95)) item.全部料线 = 0; else item.全部料线 = dr.GetDouble(95);
                if (dr.IsDBNull(96)) item.高炉有效容积 = 0; else item.高炉有效容积 = dr.GetDouble(96);
                if (dr.IsDBNull(97)) item.高炉实际容积 = 0; else item.高炉实际容积 = dr.GetDouble(97);
                if (dr.IsDBNull(98)) item.入炉矿含铁 = 0; else item.入炉矿含铁 = dr.GetDouble(98);
                if (dr.IsDBNull(99)) item.备注 = ""; else item.备注 = dr.GetString(99);
                if (dr.IsDBNull(100)) item.P82工艺称焦比 = 0; else item.P82工艺称焦比 = dr.GetDouble(100);

                item.EndInit();
                item.ClearDataState();
                this.Add(item);
                hideList.Add(item);
            }
            dr.Close();
            con.Close();
            beginAdjustData = false;
            ListChangedEventArgs arg = new ListChangedEventArgs(ListChangedType.Reset, -1);
            this.OnListChanged(arg);
        }

        public void LoadByMonth(int year, int month)
        {
            年 = year;
            月 = month;

            //ConStr, EntiyType, SelectSql, SelectPara, SelectParaVal
            beginAdjustData = true;
            this.Clear();
            hideList.Clear();
            OracleConnection con = new OracleConnection(Properties.Settings.Default.ltznConnectionString);
            con.Open();
            OracleCommand selectCmd = new OracleCommand();
            selectCmd.Connection = con;
            //2016-11-24 添加物料 球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂
            selectCmd.CommandText = "SELECT P年,P月,P01单位,P02项目,P03全铁产量,P04合格铁,P05制钢铁,P06铸造铁,P07折合产量,P08合格率,P09一级品率,P10送炼钢优质铁水率,P11高炉利用系数,P12入炉焦炭冶炼强度,P13综合焦炭冶炼强度,P14折算综合焦比,P15折合入炉焦比,P16入炉矿品位,P17熟料比,P18入炉焦炭负荷,P19综合焦炭负荷,P20休风时间,P21休风率,P22慢风时间,P23慢风率,P24煤气成分CO2,P25煤气成分计算1,P26生铁表面质量,P27深料线作业率,P28回收率,P29冷风流量,P30平均风温,P31风速,P32热风压力,P33炉顶压力,P34炉顶温度,P35富氧率,P36高压率,P37悬料次数,P38坐料次数,P39崩料次数,P40风口大套损坏数,P41风口中套损坏数,P42风口小套损坏数,P43渣口大套损坏数,P44渣口中套损坏数,P45渣口小套损坏数,P46渣铁比,P47灰铁比,P48原料总耗,P49原料单耗,P50机烧消耗,P51竖炉球消耗,P52印度球消耗,P53其它熟料消耗,P54本溪矿消耗,P55其它生料消耗,P56废铁总耗,P57废铁单耗,P58金属收得率,P59综合焦炭总耗,P60七号称,P61干毛焦,P62干焦粉,P63入炉焦炭总耗,P64入炉焦炭单耗,P65煤粉总耗,P66焦丁总耗,P67焦丁单耗,P68燃料比,P69铁成分SI,P70铁成分MN,P71铁成分P,P72铁成分S,P73渣成分CAO,P74渣成分SIO2,P75渣成分AL2O3,P76渣成分MGO,P77渣成分FEO,P78渣成分S,P79含SI偏差CAO,P80含SI偏差制铁量,P81含SI偏差铸造铁,综合焦炭单耗,煤粉单耗,一级铁,优质铁,瓦斯灰,收入含铁,支出含铁,富氧量,高压操作时间,有效工作时间,理论渣量,深料线,全部料线,高炉有效容积,高炉实际容积,入炉矿含铁,备注,P82工艺称焦比,PB块,纽曼块,锰矿,钛球,溶剂总耗,溶剂单耗,硅石,白云石,蛇纹石,球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂 FROM 技术月报 WHERE P年=:year and P月=:month";
            selectCmd.Parameters.Add(":year", year);
            selectCmd.Parameters.Add(":month", month);
            OracleDataReader dr = selectCmd.ExecuteReader();
            while (dr.Read())
            {
                JiShuYueBao item = new JiShuYueBao();
                item.BeginInit();
                if (dr.IsDBNull(0)) item.P年 = 0; else item.P年 = dr.GetInt32(0);
                if (dr.IsDBNull(1)) item.P月 = 0; else item.P月 = dr.GetInt32(1);
                if (dr.IsDBNull(2)) item.P01单位 = ""; else item.P01单位 = dr.GetString(2);
                if (dr.IsDBNull(3)) item.P02项目 = ""; else item.P02项目 = dr.GetString(3);
                if (dr.IsDBNull(4)) item.P03全铁产量 = 0; else item.P03全铁产量 = dr.GetDouble(4);
                if (dr.IsDBNull(5)) item.P04合格铁 = 0; else item.P04合格铁 = dr.GetDouble(5);
                if (dr.IsDBNull(6)) item.P05制钢铁 = 0; else item.P05制钢铁 = dr.GetDouble(6);
                if (dr.IsDBNull(7)) item.P06铸造铁 = 0; else item.P06铸造铁 = dr.GetDouble(7);
                if (dr.IsDBNull(8)) item.P07折合产量 = 0; else item.P07折合产量 = dr.GetDouble(8);
                if (dr.IsDBNull(9)) item.P08合格率 = 0; else item.P08合格率 = dr.GetDouble(9);
                if (dr.IsDBNull(10)) item.P09一级品率 = 0; else item.P09一级品率 = dr.GetDouble(10);
                if (dr.IsDBNull(11)) item.P10送炼钢优质铁水率 = 0; else item.P10送炼钢优质铁水率 = dr.GetDouble(11);
                if (dr.IsDBNull(12)) item.P11高炉利用系数 = 0; else item.P11高炉利用系数 = dr.GetDouble(12);
                if (dr.IsDBNull(13)) item.P12入炉焦炭冶炼强度 = 0; else item.P12入炉焦炭冶炼强度 = dr.GetDouble(13);
                if (dr.IsDBNull(14)) item.P13综合焦炭冶炼强度 = 0; else item.P13综合焦炭冶炼强度 = dr.GetDouble(14);
                if (dr.IsDBNull(15)) item.P14折算综合焦比 = 0; else item.P14折算综合焦比 = dr.GetDouble(15);
                if (dr.IsDBNull(16)) item.P15折合入炉焦比 = 0; else item.P15折合入炉焦比 = dr.GetDouble(16);
                if (dr.IsDBNull(17)) item.P16入炉矿品位 = 0; else item.P16入炉矿品位 = dr.GetDouble(17);
                if (dr.IsDBNull(18)) item.P17熟料比 = 0; else item.P17熟料比 = dr.GetDouble(18);
                if (dr.IsDBNull(19)) item.P18入炉焦炭负荷 = 0; else item.P18入炉焦炭负荷 = dr.GetDouble(19);
                if (dr.IsDBNull(20)) item.P19综合焦炭负荷 = 0; else item.P19综合焦炭负荷 = dr.GetDouble(20);
                if (dr.IsDBNull(21)) item.P20休风时间 = 0; else item.P20休风时间 = dr.GetDouble(21);
                if (dr.IsDBNull(22)) item.P21休风率 = 0; else item.P21休风率 = dr.GetDouble(22);
                if (dr.IsDBNull(23)) item.P22慢风时间 = 0; else item.P22慢风时间 = dr.GetDouble(23);
                if (dr.IsDBNull(24)) item.P23慢风率 = 0; else item.P23慢风率 = dr.GetDouble(24);
                if (dr.IsDBNull(25)) item.P24煤气成分CO2 = 0; else item.P24煤气成分CO2 = dr.GetDouble(25);
                if (dr.IsDBNull(26)) item.P25煤气成分计算1 = 0; else item.P25煤气成分计算1 = dr.GetDouble(26);
                if (dr.IsDBNull(27)) item.P26生铁表面质量 = 0; else item.P26生铁表面质量 = dr.GetDouble(27);
                if (dr.IsDBNull(28)) item.P27深料线作业率 = 0; else item.P27深料线作业率 = dr.GetDouble(28);
                if (dr.IsDBNull(29)) item.P28回收率 = 0; else item.P28回收率 = dr.GetDouble(29);
                if (dr.IsDBNull(30)) item.P29冷风流量 = 0; else item.P29冷风流量 = dr.GetDouble(30);
                if (dr.IsDBNull(31)) item.P30平均风温 = 0; else item.P30平均风温 = dr.GetDouble(31);
                if (dr.IsDBNull(32)) item.P31风速 = 0; else item.P31风速 = dr.GetDouble(32);
                if (dr.IsDBNull(33)) item.P32热风压力 = 0; else item.P32热风压力 = dr.GetDouble(33);
                if (dr.IsDBNull(34)) item.P33炉顶压力 = 0; else item.P33炉顶压力 = dr.GetDouble(34);
                if (dr.IsDBNull(35)) item.P34炉顶温度 = 0; else item.P34炉顶温度 = dr.GetDouble(35);
                if (dr.IsDBNull(36)) item.P35富氧率 = 0; else item.P35富氧率 = dr.GetDouble(36);
                if (dr.IsDBNull(37)) item.P36高压率 = 0; else item.P36高压率 = dr.GetDouble(37);
                if (dr.IsDBNull(38)) item.P37悬料次数 = 0; else item.P37悬料次数 = dr.GetDouble(38);
                if (dr.IsDBNull(39)) item.P38坐料次数 = 0; else item.P38坐料次数 = dr.GetDouble(39);
                if (dr.IsDBNull(40)) item.P39崩料次数 = 0; else item.P39崩料次数 = dr.GetDouble(40);
                if (dr.IsDBNull(41)) item.P40风口大套损坏数 = 0; else item.P40风口大套损坏数 = dr.GetDouble(41);
                if (dr.IsDBNull(42)) item.P41风口中套损坏数 = 0; else item.P41风口中套损坏数 = dr.GetDouble(42);
                if (dr.IsDBNull(43)) item.P42风口小套损坏数 = 0; else item.P42风口小套损坏数 = dr.GetDouble(43);
                if (dr.IsDBNull(44)) item.P43渣口大套损坏数 = 0; else item.P43渣口大套损坏数 = dr.GetDouble(44);
                if (dr.IsDBNull(45)) item.P44渣口中套损坏数 = 0; else item.P44渣口中套损坏数 = dr.GetDouble(45);
                if (dr.IsDBNull(46)) item.P45渣口小套损坏数 = 0; else item.P45渣口小套损坏数 = dr.GetDouble(46);
                if (dr.IsDBNull(47)) item.P46渣铁比 = 0; else item.P46渣铁比 = dr.GetDouble(47);
                if (dr.IsDBNull(48)) item.P47灰铁比 = 0; else item.P47灰铁比 = dr.GetDouble(48);
                if (dr.IsDBNull(49)) item.P48原料总耗 = 0; else item.P48原料总耗 = dr.GetDouble(49);
                if (dr.IsDBNull(50)) item.P49原料单耗 = 0; else item.P49原料单耗 = dr.GetDouble(50);
                if (dr.IsDBNull(51)) item.P50机烧消耗 = 0; else item.P50机烧消耗 = dr.GetDouble(51);
                if (dr.IsDBNull(52)) item.P51竖炉球消耗 = 0; else item.P51竖炉球消耗 = dr.GetDouble(52);
                if (dr.IsDBNull(53)) item.P52印度球消耗 = 0; else item.P52印度球消耗 = dr.GetDouble(53);
                if (dr.IsDBNull(54)) item.P53其它熟料消耗 = 0; else item.P53其它熟料消耗 = dr.GetDouble(54);
                if (dr.IsDBNull(55)) item.P54本溪矿消耗 = 0; else item.P54本溪矿消耗 = dr.GetDouble(55);
                if (dr.IsDBNull(56)) item.P55其它生料消耗 = 0; else item.P55其它生料消耗 = dr.GetDouble(56);
                if (dr.IsDBNull(57)) item.P56废铁总耗 = 0; else item.P56废铁总耗 = dr.GetDouble(57);
                if (dr.IsDBNull(58)) item.P57废铁单耗 = 0; else item.P57废铁单耗 = dr.GetDouble(58);
                if (dr.IsDBNull(59)) item.P58金属收得率 = 0; else item.P58金属收得率 = dr.GetDouble(59);
                if (dr.IsDBNull(60)) item.P59综合焦炭总耗 = 0; else item.P59综合焦炭总耗 = dr.GetDouble(60);
                if (dr.IsDBNull(61)) item.P60七号称 = 0; else item.P60七号称 = dr.GetDouble(61);
                if (dr.IsDBNull(62)) item.P61干毛焦 = 0; else item.P61干毛焦 = dr.GetDouble(62);
                if (dr.IsDBNull(63)) item.P62干焦粉 = 0; else item.P62干焦粉 = dr.GetDouble(63);
                if (dr.IsDBNull(64)) item.P63入炉焦炭总耗 = 0; else item.P63入炉焦炭总耗 = dr.GetDouble(64);
                if (dr.IsDBNull(65)) item.P64入炉焦炭单耗 = 0; else item.P64入炉焦炭单耗 = dr.GetDouble(65);
                if (dr.IsDBNull(66)) item.P65煤粉总耗 = 0; else item.P65煤粉总耗 = dr.GetDouble(66);
                if (dr.IsDBNull(67)) item.P66焦丁总耗 = 0; else item.P66焦丁总耗 = dr.GetDouble(67);
                if (dr.IsDBNull(68)) item.P67焦丁单耗 = 0; else item.P67焦丁单耗 = dr.GetDouble(68);
                if (dr.IsDBNull(69)) item.P68燃料比 = 0; else item.P68燃料比 = dr.GetDouble(69);
                if (dr.IsDBNull(70)) item.P69铁成分SI = 0; else item.P69铁成分SI = dr.GetDouble(70);
                if (dr.IsDBNull(71)) item.P70铁成分MN = 0; else item.P70铁成分MN = dr.GetDouble(71);
                if (dr.IsDBNull(72)) item.P71铁成分P = 0; else item.P71铁成分P = dr.GetDouble(72);
                if (dr.IsDBNull(73)) item.P72铁成分S = 0; else item.P72铁成分S = dr.GetDouble(73);
                if (dr.IsDBNull(74)) item.P73渣成分CAO = 0; else item.P73渣成分CAO = dr.GetDouble(74);
                if (dr.IsDBNull(75)) item.P74渣成分SIO2 = 0; else item.P74渣成分SIO2 = dr.GetDouble(75);
                if (dr.IsDBNull(76)) item.P75渣成分AL2O3 = 0; else item.P75渣成分AL2O3 = dr.GetDouble(76);
                if (dr.IsDBNull(77)) item.P76渣成分MGO = 0; else item.P76渣成分MGO = dr.GetDouble(77);
                if (dr.IsDBNull(78)) item.P77渣成分FEO = 0; else item.P77渣成分FEO = dr.GetDouble(78);
                if (dr.IsDBNull(79)) item.P78渣成分S = 0; else item.P78渣成分S = dr.GetDouble(79);
                if (dr.IsDBNull(80)) item.P79含SI偏差CAO = 0; else item.P79含SI偏差CAO = dr.GetDouble(80);
                if (dr.IsDBNull(81)) item.P80含SI偏差制铁量 = 0; else item.P80含SI偏差制铁量 = dr.GetDouble(81);
                if (dr.IsDBNull(82)) item.P81含SI偏差铸造铁 = 0; else item.P81含SI偏差铸造铁 = dr.GetDouble(82);
                if (dr.IsDBNull(83)) item.综合焦炭单耗 = 0; else item.综合焦炭单耗 = dr.GetDouble(83);
                if (dr.IsDBNull(84)) item.煤粉单耗 = 0; else item.煤粉单耗 = dr.GetDouble(84);
                if (dr.IsDBNull(85)) item.一级铁 = 0; else item.一级铁 = dr.GetDouble(85);
                if (dr.IsDBNull(86)) item.优质铁 = 0; else item.优质铁 = dr.GetDouble(86);
                if (dr.IsDBNull(87)) item.瓦斯灰 = 0; else item.瓦斯灰 = dr.GetDouble(87);
                if (dr.IsDBNull(88)) item.收入含铁 = 0; else item.收入含铁 = dr.GetDouble(88);
                if (dr.IsDBNull(89)) item.支出含铁 = 0; else item.支出含铁 = dr.GetDouble(89);
                if (dr.IsDBNull(90)) item.富氧量 = 0; else item.富氧量 = dr.GetDouble(90);
                if (dr.IsDBNull(91)) item.高压操作时间 = 0; else item.高压操作时间 = dr.GetDouble(91);
                if (dr.IsDBNull(92)) item.有效工作时间 = 0; else item.有效工作时间 = dr.GetDouble(92);
                if (dr.IsDBNull(93)) item.理论渣量 = 0; else item.理论渣量 = dr.GetDouble(93);
                if (dr.IsDBNull(94)) item.深料线 = 0; else item.深料线 = dr.GetDouble(94);
                if (dr.IsDBNull(95)) item.全部料线 = 0; else item.全部料线 = dr.GetDouble(95);
                if (dr.IsDBNull(96)) item.高炉有效容积 = 0; else item.高炉有效容积 = dr.GetDouble(96);
                if (dr.IsDBNull(97)) item.高炉实际容积 = 0; else item.高炉实际容积 = dr.GetDouble(97);
                if (dr.IsDBNull(98)) item.入炉矿含铁 = 0; else item.入炉矿含铁 = dr.GetDouble(98);
                if (dr.IsDBNull(99)) item.备注 = ""; else item.备注 = dr.GetString(99);
                if (dr.IsDBNull(100)) item.P82工艺称焦比 = 0; else item.P82工艺称焦比 = dr.GetDouble(100);
                if (dr.IsDBNull(101)) item.PB块 = 0; else item.PB块 = dr.GetDouble(101);
                if (dr.IsDBNull(102)) item.纽曼块 = 0; else item.纽曼块 = dr.GetDouble(102);
                if (dr.IsDBNull(103)) item.锰矿 = 0; else item.锰矿 = dr.GetDouble(103);
                if (dr.IsDBNull(104)) item.钛球 = 0; else item.钛球 = dr.GetDouble(104);
                if (dr.IsDBNull(105)) item.溶剂总耗 = 0; else item.溶剂总耗 = dr.GetDouble(105);
                if (dr.IsDBNull(106)) item.溶剂单耗 = 0; else item.溶剂单耗 = dr.GetDouble(106);
                if (dr.IsDBNull(107)) item.硅石 = 0; else item.硅石 = dr.GetDouble(107);
                if (dr.IsDBNull(108)) item.白云石 = 0; else item.白云石 = dr.GetDouble(108);
                if (dr.IsDBNull(109)) item.蛇纹石 = 0; else item.蛇纹石 = dr.GetDouble(109);
                //球团矿,国内球团矿,进口球团矿,其它块矿,高钛球团矿,高品位钛球,萤石,其它熔剂
                if (dr.IsDBNull(110)) item.球团矿 = 0; else item.球团矿 = dr.GetDouble(110);
                if (dr.IsDBNull(111)) item.国内球团矿 = 0; else item.国内球团矿 = dr.GetDouble(111);
                if (dr.IsDBNull(112)) item.进口球团矿 = 0; else item.进口球团矿 = dr.GetDouble(112);
                if (dr.IsDBNull(113)) item.其它块矿 = 0; else item.其它块矿 = dr.GetDouble(113);
                if (dr.IsDBNull(114)) item.高钛球团矿 = 0; else item.高钛球团矿 = dr.GetDouble(114);
                if (dr.IsDBNull(115)) item.高品位钛球 = 0; else item.高品位钛球 = dr.GetDouble(115);
                if (dr.IsDBNull(116)) item.萤石 = 0; else item.萤石 = dr.GetDouble(116);
                if (dr.IsDBNull(117)) item.其它熔剂 = 0; else item.其它熔剂 = dr.GetDouble(117);
                item.EndInit();
                item.ClearDataState();
                this.Add(item);
                hideList.Add(item);
            }
            dr.Close();
            con.Close();
            beginAdjustData = false;
            ListChangedEventArgs arg = new ListChangedEventArgs(ListChangedType.Reset, -1);
            this.OnListChanged(arg);
        }

        public JiShuYueBao GetJishuYueBao(int nian, int yue, string danwei, string xiangmu)
        {
            JiShuYueBao yuebao = null;
            foreach (var item in this)
            {
                if (item.P年 == nian && item.P月 == yue && item.P01单位 == danwei && item.P02项目 == xiangmu)
                {
                    yuebao = item;
                    break;
                }
            }
            if (yuebao == null)
            {
                yuebao = new JiShuYueBao();
                yuebao.P年 = nian;
                yuebao.P月 = yue;
                yuebao.P01单位 = danwei;
                yuebao.P02项目 = xiangmu;
                this.Add(yuebao);
            }
            return yuebao;
        }

    }

    public class MonthReportRepository : RepositoryBase
    {
        public JiShuYueBaoTable LoadByMonth(int year, int month)
        {
            JiShuYueBaoTable table = new JiShuYueBaoTable();
            table.LoadByMonth(year, month);
            return table;
        }


        public void Save(JiShuYueBaoTable table, int year, int yue)
        {
            List<string> xiangmuList = new List<string>() { "本月", "累计" };
            for (int gaolu = 1; gaolu < 7; gaolu++)
            {
                foreach (var xiangmu in xiangmuList)
                {
                    bool find = false;
                    foreach (var item in table)
                    {
                        if (item.P01单位 == string.Format("{0}#", gaolu) && item.P02项目 == xiangmu)
                        {
                            find = true;
                            break;
                        }
                    }
                    if (!find)
                    {
                        JiShuYueBao yuebao = new JiShuYueBao();
                        yuebao.P年 = year;
                        yuebao.P月 = yue;
                        yuebao.P01单位 = string.Format("{0}#", gaolu);
                        yuebao.P02项目 = xiangmu;
                        table.Add(yuebao);
                    }
                }
            }
            table.Save();
        }


        

       
      
    }
}
