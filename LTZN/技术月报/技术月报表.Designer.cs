//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5420
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LTZN.技术月报 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("技术月报表")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 技术月报表 : global::System.Data.DataSet {
        
        private 技术月报DataTable table技术月报;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 技术月报表() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected 技术月报表(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["技术月报"] != null)) {
                    base.Tables.Add(new 技术月报DataTable(ds.Tables["技术月报"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 技术月报DataTable 技术月报 {
            get {
                return this.table技术月报;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            技术月报表 cln = ((技术月报表)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["技术月报"] != null)) {
                    base.Tables.Add(new 技术月报DataTable(ds.Tables["技术月报"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table技术月报 = ((技术月报DataTable)(base.Tables["技术月报"]));
            if ((initTable == true)) {
                if ((this.table技术月报 != null)) {
                    this.table技术月报.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "技术月报表";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/技术月报表.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table技术月报 = new 技术月报DataTable();
            base.Tables.Add(this.table技术月报);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize技术月报() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            技术月报表 ds = new 技术月报表();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 技术月报RowChangeEventHandler(object sender, 技术月报RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 技术月报DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnP年;
            
            private global::System.Data.DataColumn columnP月;
            
            private global::System.Data.DataColumn columnP01单位;
            
            private global::System.Data.DataColumn columnP02项目;
            
            private global::System.Data.DataColumn columnP03全铁产量;
            
            private global::System.Data.DataColumn columnP04合格铁;
            
            private global::System.Data.DataColumn columnP05制钢铁;
            
            private global::System.Data.DataColumn columnP06铸造铁;
            
            private global::System.Data.DataColumn columnP07折合产量;
            
            private global::System.Data.DataColumn columnP08合格率;
            
            private global::System.Data.DataColumn columnP09一级品率;
            
            private global::System.Data.DataColumn columnP10送炼钢优质铁水率;
            
            private global::System.Data.DataColumn columnP11高炉利用系数;
            
            private global::System.Data.DataColumn columnP12入炉焦炭冶炼强度;
            
            private global::System.Data.DataColumn columnP13综合焦炭冶炼强度;
            
            private global::System.Data.DataColumn columnP14折算综合焦比;
            
            private global::System.Data.DataColumn columnP15折合入炉焦比;
            
            private global::System.Data.DataColumn columnP16入炉矿品位;
            
            private global::System.Data.DataColumn columnP17熟料比;
            
            private global::System.Data.DataColumn columnP18入炉焦炭负荷;
            
            private global::System.Data.DataColumn columnP19综合焦炭负荷;
            
            private global::System.Data.DataColumn columnP20休风时间;
            
            private global::System.Data.DataColumn columnP21休风率;
            
            private global::System.Data.DataColumn columnP22慢风时间;
            
            private global::System.Data.DataColumn columnP23慢风率;
            
            private global::System.Data.DataColumn columnP24煤气成分CO2;
            
            private global::System.Data.DataColumn columnP25煤气成分计算1;
            
            private global::System.Data.DataColumn columnP26生铁表面质量;
            
            private global::System.Data.DataColumn columnP27深料线作业率;
            
            private global::System.Data.DataColumn columnP28回收率;
            
            private global::System.Data.DataColumn columnP29冷风流量;
            
            private global::System.Data.DataColumn columnP30平均风温;
            
            private global::System.Data.DataColumn columnP31风速;
            
            private global::System.Data.DataColumn columnP32热风压力;
            
            private global::System.Data.DataColumn columnP33炉顶压力;
            
            private global::System.Data.DataColumn columnP34炉顶温度;
            
            private global::System.Data.DataColumn columnP35富氧率;
            
            private global::System.Data.DataColumn columnP36高压率;
            
            private global::System.Data.DataColumn columnP37悬料次数;
            
            private global::System.Data.DataColumn columnP38坐料次数;
            
            private global::System.Data.DataColumn columnP39崩料次数;
            
            private global::System.Data.DataColumn columnP40风口大套损坏数;
            
            private global::System.Data.DataColumn columnP41风口中套损坏数;
            
            private global::System.Data.DataColumn columnP42风口小套损坏数;
            
            private global::System.Data.DataColumn columnP43渣口大套损坏数;
            
            private global::System.Data.DataColumn columnP44渣口中套损坏数;
            
            private global::System.Data.DataColumn columnP45渣口小套损坏数;
            
            private global::System.Data.DataColumn columnP46渣铁比;
            
            private global::System.Data.DataColumn columnP47灰铁比;
            
            private global::System.Data.DataColumn columnP48原料总耗;
            
            private global::System.Data.DataColumn columnP49原料单耗;
            
            private global::System.Data.DataColumn columnP50机烧消耗;
            
            private global::System.Data.DataColumn columnP51竖炉球消耗;
            
            private global::System.Data.DataColumn columnP52印度球消耗;
            
            private global::System.Data.DataColumn columnP53其它熟料消耗;
            
            private global::System.Data.DataColumn columnP54本溪矿消耗;
            
            private global::System.Data.DataColumn columnP55其它生料消耗;
            
            private global::System.Data.DataColumn columnP56废铁总耗;
            
            private global::System.Data.DataColumn columnP57废铁单耗;
            
            private global::System.Data.DataColumn columnP58金属收得率;
            
            private global::System.Data.DataColumn columnP59综合焦炭总耗;
            
            private global::System.Data.DataColumn columnP60七号称;
            
            private global::System.Data.DataColumn columnP61干毛焦;
            
            private global::System.Data.DataColumn columnP62干焦粉;
            
            private global::System.Data.DataColumn columnP63入炉焦炭总耗;
            
            private global::System.Data.DataColumn columnP64入炉焦炭单耗;
            
            private global::System.Data.DataColumn columnP65煤粉总耗;
            
            private global::System.Data.DataColumn columnP66焦丁总耗;
            
            private global::System.Data.DataColumn columnP67焦丁单耗;
            
            private global::System.Data.DataColumn columnP68燃料比;
            
            private global::System.Data.DataColumn columnP69铁成分SI;
            
            private global::System.Data.DataColumn columnP70铁成分MN;
            
            private global::System.Data.DataColumn columnP71铁成分P;
            
            private global::System.Data.DataColumn columnP72铁成分S;
            
            private global::System.Data.DataColumn columnP73渣成分CAO;
            
            private global::System.Data.DataColumn columnP74渣成分SIO2;
            
            private global::System.Data.DataColumn columnP75渣成分AL2O3;
            
            private global::System.Data.DataColumn columnP76渣成分MGO;
            
            private global::System.Data.DataColumn columnP77渣成分FEO;
            
            private global::System.Data.DataColumn columnP78渣成分S;
            
            private global::System.Data.DataColumn columnP79含SI偏差CAO;
            
            private global::System.Data.DataColumn columnP80含SI偏差制铁量;
            
            private global::System.Data.DataColumn columnP81含SI偏差铸造铁;
            
            private global::System.Data.DataColumn column综合焦炭单耗;
            
            private global::System.Data.DataColumn column煤粉单耗;
            
            private global::System.Data.DataColumn column一级铁;
            
            private global::System.Data.DataColumn column优质铁;
            
            private global::System.Data.DataColumn column瓦斯灰;
            
            private global::System.Data.DataColumn column收入含铁;
            
            private global::System.Data.DataColumn column支出含铁;
            
            private global::System.Data.DataColumn column富氧量;
            
            private global::System.Data.DataColumn column高压操作时间;
            
            private global::System.Data.DataColumn column有效工作时间;
            
            private global::System.Data.DataColumn column理论渣量;
            
            private global::System.Data.DataColumn column深料线;
            
            private global::System.Data.DataColumn column全部料线;
            
            private global::System.Data.DataColumn column高炉有效容积;
            
            private global::System.Data.DataColumn column高炉实际容积;
            
            private global::System.Data.DataColumn column入炉矿含铁;
            
            private global::System.Data.DataColumn column备注;
            
            private global::System.Data.DataColumn columnP82工艺称焦比;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报DataTable() {
                this.TableName = "技术月报";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 技术月报DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 技术月报DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P年Column {
                get {
                    return this.columnP年;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P月Column {
                get {
                    return this.columnP月;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P01单位Column {
                get {
                    return this.columnP01单位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P02项目Column {
                get {
                    return this.columnP02项目;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P03全铁产量Column {
                get {
                    return this.columnP03全铁产量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P04合格铁Column {
                get {
                    return this.columnP04合格铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P05制钢铁Column {
                get {
                    return this.columnP05制钢铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P06铸造铁Column {
                get {
                    return this.columnP06铸造铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P07折合产量Column {
                get {
                    return this.columnP07折合产量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P08合格率Column {
                get {
                    return this.columnP08合格率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P09一级品率Column {
                get {
                    return this.columnP09一级品率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P10送炼钢优质铁水率Column {
                get {
                    return this.columnP10送炼钢优质铁水率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P11高炉利用系数Column {
                get {
                    return this.columnP11高炉利用系数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P12入炉焦炭冶炼强度Column {
                get {
                    return this.columnP12入炉焦炭冶炼强度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P13综合焦炭冶炼强度Column {
                get {
                    return this.columnP13综合焦炭冶炼强度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P14折算综合焦比Column {
                get {
                    return this.columnP14折算综合焦比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P15折合入炉焦比Column {
                get {
                    return this.columnP15折合入炉焦比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P16入炉矿品位Column {
                get {
                    return this.columnP16入炉矿品位;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P17熟料比Column {
                get {
                    return this.columnP17熟料比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P18入炉焦炭负荷Column {
                get {
                    return this.columnP18入炉焦炭负荷;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P19综合焦炭负荷Column {
                get {
                    return this.columnP19综合焦炭负荷;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P20休风时间Column {
                get {
                    return this.columnP20休风时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P21休风率Column {
                get {
                    return this.columnP21休风率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P22慢风时间Column {
                get {
                    return this.columnP22慢风时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P23慢风率Column {
                get {
                    return this.columnP23慢风率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P24煤气成分CO2Column {
                get {
                    return this.columnP24煤气成分CO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P25煤气成分计算1Column {
                get {
                    return this.columnP25煤气成分计算1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P26生铁表面质量Column {
                get {
                    return this.columnP26生铁表面质量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P27深料线作业率Column {
                get {
                    return this.columnP27深料线作业率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P28回收率Column {
                get {
                    return this.columnP28回收率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P29冷风流量Column {
                get {
                    return this.columnP29冷风流量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P30平均风温Column {
                get {
                    return this.columnP30平均风温;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P31风速Column {
                get {
                    return this.columnP31风速;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P32热风压力Column {
                get {
                    return this.columnP32热风压力;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P33炉顶压力Column {
                get {
                    return this.columnP33炉顶压力;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P34炉顶温度Column {
                get {
                    return this.columnP34炉顶温度;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P35富氧率Column {
                get {
                    return this.columnP35富氧率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P36高压率Column {
                get {
                    return this.columnP36高压率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P37悬料次数Column {
                get {
                    return this.columnP37悬料次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P38坐料次数Column {
                get {
                    return this.columnP38坐料次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P39崩料次数Column {
                get {
                    return this.columnP39崩料次数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P40风口大套损坏数Column {
                get {
                    return this.columnP40风口大套损坏数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P41风口中套损坏数Column {
                get {
                    return this.columnP41风口中套损坏数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P42风口小套损坏数Column {
                get {
                    return this.columnP42风口小套损坏数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P43渣口大套损坏数Column {
                get {
                    return this.columnP43渣口大套损坏数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P44渣口中套损坏数Column {
                get {
                    return this.columnP44渣口中套损坏数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P45渣口小套损坏数Column {
                get {
                    return this.columnP45渣口小套损坏数;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P46渣铁比Column {
                get {
                    return this.columnP46渣铁比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P47灰铁比Column {
                get {
                    return this.columnP47灰铁比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P48原料总耗Column {
                get {
                    return this.columnP48原料总耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P49原料单耗Column {
                get {
                    return this.columnP49原料单耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P50机烧消耗Column {
                get {
                    return this.columnP50机烧消耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P51竖炉球消耗Column {
                get {
                    return this.columnP51竖炉球消耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P52印度球消耗Column {
                get {
                    return this.columnP52印度球消耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P53其它熟料消耗Column {
                get {
                    return this.columnP53其它熟料消耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P54本溪矿消耗Column {
                get {
                    return this.columnP54本溪矿消耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P55其它生料消耗Column {
                get {
                    return this.columnP55其它生料消耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P56废铁总耗Column {
                get {
                    return this.columnP56废铁总耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P57废铁单耗Column {
                get {
                    return this.columnP57废铁单耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P58金属收得率Column {
                get {
                    return this.columnP58金属收得率;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P59综合焦炭总耗Column {
                get {
                    return this.columnP59综合焦炭总耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P60七号称Column {
                get {
                    return this.columnP60七号称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P61干毛焦Column {
                get {
                    return this.columnP61干毛焦;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P62干焦粉Column {
                get {
                    return this.columnP62干焦粉;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P63入炉焦炭总耗Column {
                get {
                    return this.columnP63入炉焦炭总耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P64入炉焦炭单耗Column {
                get {
                    return this.columnP64入炉焦炭单耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P65煤粉总耗Column {
                get {
                    return this.columnP65煤粉总耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P66焦丁总耗Column {
                get {
                    return this.columnP66焦丁总耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P67焦丁单耗Column {
                get {
                    return this.columnP67焦丁单耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P68燃料比Column {
                get {
                    return this.columnP68燃料比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P69铁成分SIColumn {
                get {
                    return this.columnP69铁成分SI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P70铁成分MNColumn {
                get {
                    return this.columnP70铁成分MN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P71铁成分PColumn {
                get {
                    return this.columnP71铁成分P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P72铁成分SColumn {
                get {
                    return this.columnP72铁成分S;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P73渣成分CAOColumn {
                get {
                    return this.columnP73渣成分CAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P74渣成分SIO2Column {
                get {
                    return this.columnP74渣成分SIO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P75渣成分AL2O3Column {
                get {
                    return this.columnP75渣成分AL2O3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P76渣成分MGOColumn {
                get {
                    return this.columnP76渣成分MGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P77渣成分FEOColumn {
                get {
                    return this.columnP77渣成分FEO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P78渣成分SColumn {
                get {
                    return this.columnP78渣成分S;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P79含SI偏差CAOColumn {
                get {
                    return this.columnP79含SI偏差CAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P80含SI偏差制铁量Column {
                get {
                    return this.columnP80含SI偏差制铁量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P81含SI偏差铸造铁Column {
                get {
                    return this.columnP81含SI偏差铸造铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 综合焦炭单耗Column {
                get {
                    return this.column综合焦炭单耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 煤粉单耗Column {
                get {
                    return this.column煤粉单耗;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 一级铁Column {
                get {
                    return this.column一级铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 优质铁Column {
                get {
                    return this.column优质铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 瓦斯灰Column {
                get {
                    return this.column瓦斯灰;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 收入含铁Column {
                get {
                    return this.column收入含铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 支出含铁Column {
                get {
                    return this.column支出含铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 富氧量Column {
                get {
                    return this.column富氧量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 高压操作时间Column {
                get {
                    return this.column高压操作时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 有效工作时间Column {
                get {
                    return this.column有效工作时间;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 理论渣量Column {
                get {
                    return this.column理论渣量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 深料线Column {
                get {
                    return this.column深料线;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 全部料线Column {
                get {
                    return this.column全部料线;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 高炉有效容积Column {
                get {
                    return this.column高炉有效容积;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 高炉实际容积Column {
                get {
                    return this.column高炉实际容积;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 入炉矿含铁Column {
                get {
                    return this.column入炉矿含铁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 备注Column {
                get {
                    return this.column备注;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn P82工艺称焦比Column {
                get {
                    return this.columnP82工艺称焦比;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报Row this[int index] {
                get {
                    return ((技术月报Row)(this.Rows[index]));
                }
            }
            
            public event 技术月报RowChangeEventHandler 技术月报RowChanging;
            
            public event 技术月报RowChangeEventHandler 技术月报RowChanged;
            
            public event 技术月报RowChangeEventHandler 技术月报RowDeleting;
            
            public event 技术月报RowChangeEventHandler 技术月报RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add技术月报Row(技术月报Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报Row Add技术月报Row(
                        decimal P年, 
                        decimal P月, 
                        string P01单位, 
                        string P02项目, 
                        decimal P03全铁产量, 
                        decimal P04合格铁, 
                        decimal P05制钢铁, 
                        decimal P06铸造铁, 
                        decimal P07折合产量, 
                        decimal P08合格率, 
                        decimal P09一级品率, 
                        decimal P10送炼钢优质铁水率, 
                        decimal P11高炉利用系数, 
                        decimal P12入炉焦炭冶炼强度, 
                        decimal P13综合焦炭冶炼强度, 
                        decimal P14折算综合焦比, 
                        decimal P15折合入炉焦比, 
                        decimal P16入炉矿品位, 
                        decimal P17熟料比, 
                        decimal P18入炉焦炭负荷, 
                        decimal P19综合焦炭负荷, 
                        decimal P20休风时间, 
                        decimal P21休风率, 
                        decimal P22慢风时间, 
                        decimal P23慢风率, 
                        decimal P24煤气成分CO2, 
                        decimal P25煤气成分计算1, 
                        decimal P26生铁表面质量, 
                        decimal P27深料线作业率, 
                        decimal P28回收率, 
                        decimal P29冷风流量, 
                        decimal P30平均风温, 
                        decimal P31风速, 
                        decimal P32热风压力, 
                        decimal P33炉顶压力, 
                        decimal P34炉顶温度, 
                        decimal P35富氧率, 
                        decimal P36高压率, 
                        decimal P37悬料次数, 
                        decimal P38坐料次数, 
                        decimal P39崩料次数, 
                        decimal P40风口大套损坏数, 
                        decimal P41风口中套损坏数, 
                        decimal P42风口小套损坏数, 
                        decimal P43渣口大套损坏数, 
                        decimal P44渣口中套损坏数, 
                        decimal P45渣口小套损坏数, 
                        decimal P46渣铁比, 
                        decimal P47灰铁比, 
                        decimal P48原料总耗, 
                        decimal P49原料单耗, 
                        decimal P50机烧消耗, 
                        decimal P51竖炉球消耗, 
                        decimal P52印度球消耗, 
                        decimal P53其它熟料消耗, 
                        decimal P54本溪矿消耗, 
                        decimal P55其它生料消耗, 
                        decimal P56废铁总耗, 
                        decimal P57废铁单耗, 
                        decimal P58金属收得率, 
                        decimal P59综合焦炭总耗, 
                        decimal P60七号称, 
                        decimal P61干毛焦, 
                        decimal P62干焦粉, 
                        decimal P63入炉焦炭总耗, 
                        decimal P64入炉焦炭单耗, 
                        decimal P65煤粉总耗, 
                        decimal P66焦丁总耗, 
                        decimal P67焦丁单耗, 
                        decimal P68燃料比, 
                        decimal P69铁成分SI, 
                        decimal P70铁成分MN, 
                        decimal P71铁成分P, 
                        decimal P72铁成分S, 
                        decimal P73渣成分CAO, 
                        decimal P74渣成分SIO2, 
                        decimal P75渣成分AL2O3, 
                        decimal P76渣成分MGO, 
                        decimal P77渣成分FEO, 
                        decimal P78渣成分S, 
                        decimal P79含SI偏差CAO, 
                        decimal P80含SI偏差制铁量, 
                        decimal P81含SI偏差铸造铁, 
                        decimal 综合焦炭单耗, 
                        decimal 煤粉单耗, 
                        decimal 一级铁, 
                        decimal 优质铁, 
                        decimal 瓦斯灰, 
                        decimal 收入含铁, 
                        decimal 支出含铁, 
                        decimal 富氧量, 
                        decimal 高压操作时间, 
                        decimal 有效工作时间, 
                        decimal 理论渣量, 
                        decimal 深料线, 
                        decimal 全部料线, 
                        decimal 高炉有效容积, 
                        decimal 高炉实际容积, 
                        decimal 入炉矿含铁, 
                        string 备注, 
                        decimal P82工艺称焦比) {
                技术月报Row row技术月报Row = ((技术月报Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        P年,
                        P月,
                        P01单位,
                        P02项目,
                        P03全铁产量,
                        P04合格铁,
                        P05制钢铁,
                        P06铸造铁,
                        P07折合产量,
                        P08合格率,
                        P09一级品率,
                        P10送炼钢优质铁水率,
                        P11高炉利用系数,
                        P12入炉焦炭冶炼强度,
                        P13综合焦炭冶炼强度,
                        P14折算综合焦比,
                        P15折合入炉焦比,
                        P16入炉矿品位,
                        P17熟料比,
                        P18入炉焦炭负荷,
                        P19综合焦炭负荷,
                        P20休风时间,
                        P21休风率,
                        P22慢风时间,
                        P23慢风率,
                        P24煤气成分CO2,
                        P25煤气成分计算1,
                        P26生铁表面质量,
                        P27深料线作业率,
                        P28回收率,
                        P29冷风流量,
                        P30平均风温,
                        P31风速,
                        P32热风压力,
                        P33炉顶压力,
                        P34炉顶温度,
                        P35富氧率,
                        P36高压率,
                        P37悬料次数,
                        P38坐料次数,
                        P39崩料次数,
                        P40风口大套损坏数,
                        P41风口中套损坏数,
                        P42风口小套损坏数,
                        P43渣口大套损坏数,
                        P44渣口中套损坏数,
                        P45渣口小套损坏数,
                        P46渣铁比,
                        P47灰铁比,
                        P48原料总耗,
                        P49原料单耗,
                        P50机烧消耗,
                        P51竖炉球消耗,
                        P52印度球消耗,
                        P53其它熟料消耗,
                        P54本溪矿消耗,
                        P55其它生料消耗,
                        P56废铁总耗,
                        P57废铁单耗,
                        P58金属收得率,
                        P59综合焦炭总耗,
                        P60七号称,
                        P61干毛焦,
                        P62干焦粉,
                        P63入炉焦炭总耗,
                        P64入炉焦炭单耗,
                        P65煤粉总耗,
                        P66焦丁总耗,
                        P67焦丁单耗,
                        P68燃料比,
                        P69铁成分SI,
                        P70铁成分MN,
                        P71铁成分P,
                        P72铁成分S,
                        P73渣成分CAO,
                        P74渣成分SIO2,
                        P75渣成分AL2O3,
                        P76渣成分MGO,
                        P77渣成分FEO,
                        P78渣成分S,
                        P79含SI偏差CAO,
                        P80含SI偏差制铁量,
                        P81含SI偏差铸造铁,
                        综合焦炭单耗,
                        煤粉单耗,
                        一级铁,
                        优质铁,
                        瓦斯灰,
                        收入含铁,
                        支出含铁,
                        富氧量,
                        高压操作时间,
                        有效工作时间,
                        理论渣量,
                        深料线,
                        全部料线,
                        高炉有效容积,
                        高炉实际容积,
                        入炉矿含铁,
                        备注,
                        P82工艺称焦比};
                row技术月报Row.ItemArray = columnValuesArray;
                this.Rows.Add(row技术月报Row);
                return row技术月报Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报Row FindByP年P月P01单位P02项目(decimal P年, decimal P月, string P01单位, string P02项目) {
                return ((技术月报Row)(this.Rows.Find(new object[] {
                            P年,
                            P月,
                            P01单位,
                            P02项目})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                技术月报DataTable cln = ((技术月报DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 技术月报DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnP年 = base.Columns["P年"];
                this.columnP月 = base.Columns["P月"];
                this.columnP01单位 = base.Columns["P01单位"];
                this.columnP02项目 = base.Columns["P02项目"];
                this.columnP03全铁产量 = base.Columns["P03全铁产量"];
                this.columnP04合格铁 = base.Columns["P04合格铁"];
                this.columnP05制钢铁 = base.Columns["P05制钢铁"];
                this.columnP06铸造铁 = base.Columns["P06铸造铁"];
                this.columnP07折合产量 = base.Columns["P07折合产量"];
                this.columnP08合格率 = base.Columns["P08合格率"];
                this.columnP09一级品率 = base.Columns["P09一级品率"];
                this.columnP10送炼钢优质铁水率 = base.Columns["P10送炼钢优质铁水率"];
                this.columnP11高炉利用系数 = base.Columns["P11高炉利用系数"];
                this.columnP12入炉焦炭冶炼强度 = base.Columns["P12入炉焦炭冶炼强度"];
                this.columnP13综合焦炭冶炼强度 = base.Columns["P13综合焦炭冶炼强度"];
                this.columnP14折算综合焦比 = base.Columns["P14折算综合焦比"];
                this.columnP15折合入炉焦比 = base.Columns["P15折合入炉焦比"];
                this.columnP16入炉矿品位 = base.Columns["P16入炉矿品位"];
                this.columnP17熟料比 = base.Columns["P17熟料比"];
                this.columnP18入炉焦炭负荷 = base.Columns["P18入炉焦炭负荷"];
                this.columnP19综合焦炭负荷 = base.Columns["P19综合焦炭负荷"];
                this.columnP20休风时间 = base.Columns["P20休风时间"];
                this.columnP21休风率 = base.Columns["P21休风率"];
                this.columnP22慢风时间 = base.Columns["P22慢风时间"];
                this.columnP23慢风率 = base.Columns["P23慢风率"];
                this.columnP24煤气成分CO2 = base.Columns["P24煤气成分CO2"];
                this.columnP25煤气成分计算1 = base.Columns["P25煤气成分计算1"];
                this.columnP26生铁表面质量 = base.Columns["P26生铁表面质量"];
                this.columnP27深料线作业率 = base.Columns["P27深料线作业率"];
                this.columnP28回收率 = base.Columns["P28回收率"];
                this.columnP29冷风流量 = base.Columns["P29冷风流量"];
                this.columnP30平均风温 = base.Columns["P30平均风温"];
                this.columnP31风速 = base.Columns["P31风速"];
                this.columnP32热风压力 = base.Columns["P32热风压力"];
                this.columnP33炉顶压力 = base.Columns["P33炉顶压力"];
                this.columnP34炉顶温度 = base.Columns["P34炉顶温度"];
                this.columnP35富氧率 = base.Columns["P35富氧率"];
                this.columnP36高压率 = base.Columns["P36高压率"];
                this.columnP37悬料次数 = base.Columns["P37悬料次数"];
                this.columnP38坐料次数 = base.Columns["P38坐料次数"];
                this.columnP39崩料次数 = base.Columns["P39崩料次数"];
                this.columnP40风口大套损坏数 = base.Columns["P40风口大套损坏数"];
                this.columnP41风口中套损坏数 = base.Columns["P41风口中套损坏数"];
                this.columnP42风口小套损坏数 = base.Columns["P42风口小套损坏数"];
                this.columnP43渣口大套损坏数 = base.Columns["P43渣口大套损坏数"];
                this.columnP44渣口中套损坏数 = base.Columns["P44渣口中套损坏数"];
                this.columnP45渣口小套损坏数 = base.Columns["P45渣口小套损坏数"];
                this.columnP46渣铁比 = base.Columns["P46渣铁比"];
                this.columnP47灰铁比 = base.Columns["P47灰铁比"];
                this.columnP48原料总耗 = base.Columns["P48原料总耗"];
                this.columnP49原料单耗 = base.Columns["P49原料单耗"];
                this.columnP50机烧消耗 = base.Columns["P50机烧消耗"];
                this.columnP51竖炉球消耗 = base.Columns["P51竖炉球消耗"];
                this.columnP52印度球消耗 = base.Columns["P52印度球消耗"];
                this.columnP53其它熟料消耗 = base.Columns["P53其它熟料消耗"];
                this.columnP54本溪矿消耗 = base.Columns["P54本溪矿消耗"];
                this.columnP55其它生料消耗 = base.Columns["P55其它生料消耗"];
                this.columnP56废铁总耗 = base.Columns["P56废铁总耗"];
                this.columnP57废铁单耗 = base.Columns["P57废铁单耗"];
                this.columnP58金属收得率 = base.Columns["P58金属收得率"];
                this.columnP59综合焦炭总耗 = base.Columns["P59综合焦炭总耗"];
                this.columnP60七号称 = base.Columns["P60七号称"];
                this.columnP61干毛焦 = base.Columns["P61干毛焦"];
                this.columnP62干焦粉 = base.Columns["P62干焦粉"];
                this.columnP63入炉焦炭总耗 = base.Columns["P63入炉焦炭总耗"];
                this.columnP64入炉焦炭单耗 = base.Columns["P64入炉焦炭单耗"];
                this.columnP65煤粉总耗 = base.Columns["P65煤粉总耗"];
                this.columnP66焦丁总耗 = base.Columns["P66焦丁总耗"];
                this.columnP67焦丁单耗 = base.Columns["P67焦丁单耗"];
                this.columnP68燃料比 = base.Columns["P68燃料比"];
                this.columnP69铁成分SI = base.Columns["P69铁成分SI"];
                this.columnP70铁成分MN = base.Columns["P70铁成分MN"];
                this.columnP71铁成分P = base.Columns["P71铁成分P"];
                this.columnP72铁成分S = base.Columns["P72铁成分S"];
                this.columnP73渣成分CAO = base.Columns["P73渣成分CAO"];
                this.columnP74渣成分SIO2 = base.Columns["P74渣成分SIO2"];
                this.columnP75渣成分AL2O3 = base.Columns["P75渣成分AL2O3"];
                this.columnP76渣成分MGO = base.Columns["P76渣成分MGO"];
                this.columnP77渣成分FEO = base.Columns["P77渣成分FEO"];
                this.columnP78渣成分S = base.Columns["P78渣成分S"];
                this.columnP79含SI偏差CAO = base.Columns["P79含SI偏差CAO"];
                this.columnP80含SI偏差制铁量 = base.Columns["P80含SI偏差制铁量"];
                this.columnP81含SI偏差铸造铁 = base.Columns["P81含SI偏差铸造铁"];
                this.column综合焦炭单耗 = base.Columns["综合焦炭单耗"];
                this.column煤粉单耗 = base.Columns["煤粉单耗"];
                this.column一级铁 = base.Columns["一级铁"];
                this.column优质铁 = base.Columns["优质铁"];
                this.column瓦斯灰 = base.Columns["瓦斯灰"];
                this.column收入含铁 = base.Columns["收入含铁"];
                this.column支出含铁 = base.Columns["支出含铁"];
                this.column富氧量 = base.Columns["富氧量"];
                this.column高压操作时间 = base.Columns["高压操作时间"];
                this.column有效工作时间 = base.Columns["有效工作时间"];
                this.column理论渣量 = base.Columns["理论渣量"];
                this.column深料线 = base.Columns["深料线"];
                this.column全部料线 = base.Columns["全部料线"];
                this.column高炉有效容积 = base.Columns["高炉有效容积"];
                this.column高炉实际容积 = base.Columns["高炉实际容积"];
                this.column入炉矿含铁 = base.Columns["入炉矿含铁"];
                this.column备注 = base.Columns["备注"];
                this.columnP82工艺称焦比 = base.Columns["P82工艺称焦比"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnP年 = new global::System.Data.DataColumn("P年", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP年);
                this.columnP月 = new global::System.Data.DataColumn("P月", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP月);
                this.columnP01单位 = new global::System.Data.DataColumn("P01单位", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP01单位);
                this.columnP02项目 = new global::System.Data.DataColumn("P02项目", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP02项目);
                this.columnP03全铁产量 = new global::System.Data.DataColumn("P03全铁产量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP03全铁产量);
                this.columnP04合格铁 = new global::System.Data.DataColumn("P04合格铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP04合格铁);
                this.columnP05制钢铁 = new global::System.Data.DataColumn("P05制钢铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP05制钢铁);
                this.columnP06铸造铁 = new global::System.Data.DataColumn("P06铸造铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP06铸造铁);
                this.columnP07折合产量 = new global::System.Data.DataColumn("P07折合产量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP07折合产量);
                this.columnP08合格率 = new global::System.Data.DataColumn("P08合格率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP08合格率);
                this.columnP09一级品率 = new global::System.Data.DataColumn("P09一级品率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP09一级品率);
                this.columnP10送炼钢优质铁水率 = new global::System.Data.DataColumn("P10送炼钢优质铁水率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP10送炼钢优质铁水率);
                this.columnP11高炉利用系数 = new global::System.Data.DataColumn("P11高炉利用系数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP11高炉利用系数);
                this.columnP12入炉焦炭冶炼强度 = new global::System.Data.DataColumn("P12入炉焦炭冶炼强度", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP12入炉焦炭冶炼强度);
                this.columnP13综合焦炭冶炼强度 = new global::System.Data.DataColumn("P13综合焦炭冶炼强度", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP13综合焦炭冶炼强度);
                this.columnP14折算综合焦比 = new global::System.Data.DataColumn("P14折算综合焦比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP14折算综合焦比);
                this.columnP15折合入炉焦比 = new global::System.Data.DataColumn("P15折合入炉焦比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP15折合入炉焦比);
                this.columnP16入炉矿品位 = new global::System.Data.DataColumn("P16入炉矿品位", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP16入炉矿品位);
                this.columnP17熟料比 = new global::System.Data.DataColumn("P17熟料比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP17熟料比);
                this.columnP18入炉焦炭负荷 = new global::System.Data.DataColumn("P18入炉焦炭负荷", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP18入炉焦炭负荷);
                this.columnP19综合焦炭负荷 = new global::System.Data.DataColumn("P19综合焦炭负荷", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP19综合焦炭负荷);
                this.columnP20休风时间 = new global::System.Data.DataColumn("P20休风时间", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP20休风时间);
                this.columnP21休风率 = new global::System.Data.DataColumn("P21休风率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP21休风率);
                this.columnP22慢风时间 = new global::System.Data.DataColumn("P22慢风时间", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP22慢风时间);
                this.columnP23慢风率 = new global::System.Data.DataColumn("P23慢风率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP23慢风率);
                this.columnP24煤气成分CO2 = new global::System.Data.DataColumn("P24煤气成分CO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP24煤气成分CO2);
                this.columnP25煤气成分计算1 = new global::System.Data.DataColumn("P25煤气成分计算1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP25煤气成分计算1);
                this.columnP26生铁表面质量 = new global::System.Data.DataColumn("P26生铁表面质量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP26生铁表面质量);
                this.columnP27深料线作业率 = new global::System.Data.DataColumn("P27深料线作业率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP27深料线作业率);
                this.columnP28回收率 = new global::System.Data.DataColumn("P28回收率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP28回收率);
                this.columnP29冷风流量 = new global::System.Data.DataColumn("P29冷风流量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP29冷风流量);
                this.columnP30平均风温 = new global::System.Data.DataColumn("P30平均风温", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP30平均风温);
                this.columnP31风速 = new global::System.Data.DataColumn("P31风速", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP31风速);
                this.columnP32热风压力 = new global::System.Data.DataColumn("P32热风压力", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP32热风压力);
                this.columnP33炉顶压力 = new global::System.Data.DataColumn("P33炉顶压力", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP33炉顶压力);
                this.columnP34炉顶温度 = new global::System.Data.DataColumn("P34炉顶温度", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP34炉顶温度);
                this.columnP35富氧率 = new global::System.Data.DataColumn("P35富氧率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP35富氧率);
                this.columnP36高压率 = new global::System.Data.DataColumn("P36高压率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP36高压率);
                this.columnP37悬料次数 = new global::System.Data.DataColumn("P37悬料次数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP37悬料次数);
                this.columnP38坐料次数 = new global::System.Data.DataColumn("P38坐料次数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP38坐料次数);
                this.columnP39崩料次数 = new global::System.Data.DataColumn("P39崩料次数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP39崩料次数);
                this.columnP40风口大套损坏数 = new global::System.Data.DataColumn("P40风口大套损坏数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP40风口大套损坏数);
                this.columnP41风口中套损坏数 = new global::System.Data.DataColumn("P41风口中套损坏数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP41风口中套损坏数);
                this.columnP42风口小套损坏数 = new global::System.Data.DataColumn("P42风口小套损坏数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP42风口小套损坏数);
                this.columnP43渣口大套损坏数 = new global::System.Data.DataColumn("P43渣口大套损坏数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP43渣口大套损坏数);
                this.columnP44渣口中套损坏数 = new global::System.Data.DataColumn("P44渣口中套损坏数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP44渣口中套损坏数);
                this.columnP45渣口小套损坏数 = new global::System.Data.DataColumn("P45渣口小套损坏数", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP45渣口小套损坏数);
                this.columnP46渣铁比 = new global::System.Data.DataColumn("P46渣铁比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP46渣铁比);
                this.columnP47灰铁比 = new global::System.Data.DataColumn("P47灰铁比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP47灰铁比);
                this.columnP48原料总耗 = new global::System.Data.DataColumn("P48原料总耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP48原料总耗);
                this.columnP49原料单耗 = new global::System.Data.DataColumn("P49原料单耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP49原料单耗);
                this.columnP50机烧消耗 = new global::System.Data.DataColumn("P50机烧消耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP50机烧消耗);
                this.columnP51竖炉球消耗 = new global::System.Data.DataColumn("P51竖炉球消耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP51竖炉球消耗);
                this.columnP52印度球消耗 = new global::System.Data.DataColumn("P52印度球消耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP52印度球消耗);
                this.columnP53其它熟料消耗 = new global::System.Data.DataColumn("P53其它熟料消耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP53其它熟料消耗);
                this.columnP54本溪矿消耗 = new global::System.Data.DataColumn("P54本溪矿消耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP54本溪矿消耗);
                this.columnP55其它生料消耗 = new global::System.Data.DataColumn("P55其它生料消耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP55其它生料消耗);
                this.columnP56废铁总耗 = new global::System.Data.DataColumn("P56废铁总耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP56废铁总耗);
                this.columnP57废铁单耗 = new global::System.Data.DataColumn("P57废铁单耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP57废铁单耗);
                this.columnP58金属收得率 = new global::System.Data.DataColumn("P58金属收得率", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP58金属收得率);
                this.columnP59综合焦炭总耗 = new global::System.Data.DataColumn("P59综合焦炭总耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP59综合焦炭总耗);
                this.columnP60七号称 = new global::System.Data.DataColumn("P60七号称", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP60七号称);
                this.columnP61干毛焦 = new global::System.Data.DataColumn("P61干毛焦", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP61干毛焦);
                this.columnP62干焦粉 = new global::System.Data.DataColumn("P62干焦粉", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP62干焦粉);
                this.columnP63入炉焦炭总耗 = new global::System.Data.DataColumn("P63入炉焦炭总耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP63入炉焦炭总耗);
                this.columnP64入炉焦炭单耗 = new global::System.Data.DataColumn("P64入炉焦炭单耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP64入炉焦炭单耗);
                this.columnP65煤粉总耗 = new global::System.Data.DataColumn("P65煤粉总耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP65煤粉总耗);
                this.columnP66焦丁总耗 = new global::System.Data.DataColumn("P66焦丁总耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP66焦丁总耗);
                this.columnP67焦丁单耗 = new global::System.Data.DataColumn("P67焦丁单耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP67焦丁单耗);
                this.columnP68燃料比 = new global::System.Data.DataColumn("P68燃料比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP68燃料比);
                this.columnP69铁成分SI = new global::System.Data.DataColumn("P69铁成分SI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP69铁成分SI);
                this.columnP70铁成分MN = new global::System.Data.DataColumn("P70铁成分MN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP70铁成分MN);
                this.columnP71铁成分P = new global::System.Data.DataColumn("P71铁成分P", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP71铁成分P);
                this.columnP72铁成分S = new global::System.Data.DataColumn("P72铁成分S", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP72铁成分S);
                this.columnP73渣成分CAO = new global::System.Data.DataColumn("P73渣成分CAO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP73渣成分CAO);
                this.columnP74渣成分SIO2 = new global::System.Data.DataColumn("P74渣成分SIO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP74渣成分SIO2);
                this.columnP75渣成分AL2O3 = new global::System.Data.DataColumn("P75渣成分AL2O3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP75渣成分AL2O3);
                this.columnP76渣成分MGO = new global::System.Data.DataColumn("P76渣成分MGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP76渣成分MGO);
                this.columnP77渣成分FEO = new global::System.Data.DataColumn("P77渣成分FEO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP77渣成分FEO);
                this.columnP78渣成分S = new global::System.Data.DataColumn("P78渣成分S", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP78渣成分S);
                this.columnP79含SI偏差CAO = new global::System.Data.DataColumn("P79含SI偏差CAO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP79含SI偏差CAO);
                this.columnP80含SI偏差制铁量 = new global::System.Data.DataColumn("P80含SI偏差制铁量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP80含SI偏差制铁量);
                this.columnP81含SI偏差铸造铁 = new global::System.Data.DataColumn("P81含SI偏差铸造铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP81含SI偏差铸造铁);
                this.column综合焦炭单耗 = new global::System.Data.DataColumn("综合焦炭单耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column综合焦炭单耗);
                this.column煤粉单耗 = new global::System.Data.DataColumn("煤粉单耗", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column煤粉单耗);
                this.column一级铁 = new global::System.Data.DataColumn("一级铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column一级铁);
                this.column优质铁 = new global::System.Data.DataColumn("优质铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column优质铁);
                this.column瓦斯灰 = new global::System.Data.DataColumn("瓦斯灰", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column瓦斯灰);
                this.column收入含铁 = new global::System.Data.DataColumn("收入含铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column收入含铁);
                this.column支出含铁 = new global::System.Data.DataColumn("支出含铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column支出含铁);
                this.column富氧量 = new global::System.Data.DataColumn("富氧量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column富氧量);
                this.column高压操作时间 = new global::System.Data.DataColumn("高压操作时间", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column高压操作时间);
                this.column有效工作时间 = new global::System.Data.DataColumn("有效工作时间", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column有效工作时间);
                this.column理论渣量 = new global::System.Data.DataColumn("理论渣量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column理论渣量);
                this.column深料线 = new global::System.Data.DataColumn("深料线", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column深料线);
                this.column全部料线 = new global::System.Data.DataColumn("全部料线", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column全部料线);
                this.column高炉有效容积 = new global::System.Data.DataColumn("高炉有效容积", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column高炉有效容积);
                this.column高炉实际容积 = new global::System.Data.DataColumn("高炉实际容积", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column高炉实际容积);
                this.column入炉矿含铁 = new global::System.Data.DataColumn("入炉矿含铁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column入炉矿含铁);
                this.column备注 = new global::System.Data.DataColumn("备注", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column备注);
                this.columnP82工艺称焦比 = new global::System.Data.DataColumn("P82工艺称焦比", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP82工艺称焦比);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnP年,
                                this.columnP月,
                                this.columnP01单位,
                                this.columnP02项目}, true));
                this.columnP年.AllowDBNull = false;
                this.columnP月.AllowDBNull = false;
                this.columnP01单位.AllowDBNull = false;
                this.columnP01单位.MaxLength = 20;
                this.columnP02项目.AllowDBNull = false;
                this.columnP02项目.MaxLength = 20;
                this.column备注.MaxLength = 2000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报Row New技术月报Row() {
                return ((技术月报Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 技术月报Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(技术月报Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.技术月报RowChanged != null)) {
                    this.技术月报RowChanged(this, new 技术月报RowChangeEvent(((技术月报Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.技术月报RowChanging != null)) {
                    this.技术月报RowChanging(this, new 技术月报RowChangeEvent(((技术月报Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.技术月报RowDeleted != null)) {
                    this.技术月报RowDeleted(this, new 技术月报RowChangeEvent(((技术月报Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.技术月报RowDeleting != null)) {
                    this.技术月报RowDeleting(this, new 技术月报RowChangeEvent(((技术月报Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove技术月报Row(技术月报Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                技术月报表 ds = new 技术月报表();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "技术月报DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 技术月报Row : global::System.Data.DataRow {
            
            private 技术月报DataTable table技术月报;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 技术月报Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table技术月报 = ((技术月报DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P年 {
                get {
                    return ((decimal)(this[this.table技术月报.P年Column]));
                }
                set {
                    this[this.table技术月报.P年Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P月 {
                get {
                    return ((decimal)(this[this.table技术月报.P月Column]));
                }
                set {
                    this[this.table技术月报.P月Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P01单位 {
                get {
                    return ((string)(this[this.table技术月报.P01单位Column]));
                }
                set {
                    this[this.table技术月报.P01单位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P02项目 {
                get {
                    return ((string)(this[this.table技术月报.P02项目Column]));
                }
                set {
                    this[this.table技术月报.P02项目Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P03全铁产量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P03全铁产量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P03全铁产量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P03全铁产量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P04合格铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P04合格铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P04合格铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P04合格铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P05制钢铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P05制钢铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P05制钢铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P05制钢铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P06铸造铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P06铸造铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P06铸造铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P06铸造铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P07折合产量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P07折合产量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P07折合产量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P07折合产量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P08合格率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P08合格率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P08合格率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P08合格率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P09一级品率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P09一级品率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P09一级品率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P09一级品率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P10送炼钢优质铁水率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P10送炼钢优质铁水率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P10送炼钢优质铁水率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P10送炼钢优质铁水率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P11高炉利用系数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P11高炉利用系数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P11高炉利用系数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P11高炉利用系数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P12入炉焦炭冶炼强度 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P12入炉焦炭冶炼强度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P12入炉焦炭冶炼强度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P12入炉焦炭冶炼强度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P13综合焦炭冶炼强度 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P13综合焦炭冶炼强度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P13综合焦炭冶炼强度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P13综合焦炭冶炼强度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P14折算综合焦比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P14折算综合焦比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P14折算综合焦比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P14折算综合焦比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P15折合入炉焦比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P15折合入炉焦比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P15折合入炉焦比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P15折合入炉焦比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P16入炉矿品位 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P16入炉矿品位Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P16入炉矿品位”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P16入炉矿品位Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P17熟料比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P17熟料比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P17熟料比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P17熟料比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P18入炉焦炭负荷 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P18入炉焦炭负荷Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P18入炉焦炭负荷”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P18入炉焦炭负荷Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P19综合焦炭负荷 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P19综合焦炭负荷Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P19综合焦炭负荷”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P19综合焦炭负荷Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P20休风时间 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P20休风时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P20休风时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P20休风时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P21休风率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P21休风率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P21休风率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P21休风率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P22慢风时间 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P22慢风时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P22慢风时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P22慢风时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P23慢风率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P23慢风率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P23慢风率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P23慢风率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P24煤气成分CO2 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P24煤气成分CO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P24煤气成分CO2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P24煤气成分CO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P25煤气成分计算1 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P25煤气成分计算1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P25煤气成分计算1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P25煤气成分计算1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P26生铁表面质量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P26生铁表面质量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P26生铁表面质量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P26生铁表面质量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P27深料线作业率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P27深料线作业率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P27深料线作业率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P27深料线作业率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P28回收率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P28回收率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P28回收率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P28回收率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P29冷风流量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P29冷风流量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P29冷风流量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P29冷风流量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P30平均风温 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P30平均风温Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P30平均风温”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P30平均风温Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P31风速 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P31风速Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P31风速”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P31风速Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P32热风压力 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P32热风压力Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P32热风压力”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P32热风压力Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P33炉顶压力 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P33炉顶压力Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P33炉顶压力”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P33炉顶压力Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P34炉顶温度 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P34炉顶温度Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P34炉顶温度”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P34炉顶温度Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P35富氧率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P35富氧率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P35富氧率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P35富氧率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P36高压率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P36高压率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P36高压率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P36高压率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P37悬料次数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P37悬料次数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P37悬料次数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P37悬料次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P38坐料次数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P38坐料次数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P38坐料次数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P38坐料次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P39崩料次数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P39崩料次数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P39崩料次数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P39崩料次数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P40风口大套损坏数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P40风口大套损坏数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P40风口大套损坏数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P40风口大套损坏数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P41风口中套损坏数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P41风口中套损坏数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P41风口中套损坏数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P41风口中套损坏数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P42风口小套损坏数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P42风口小套损坏数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P42风口小套损坏数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P42风口小套损坏数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P43渣口大套损坏数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P43渣口大套损坏数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P43渣口大套损坏数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P43渣口大套损坏数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P44渣口中套损坏数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P44渣口中套损坏数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P44渣口中套损坏数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P44渣口中套损坏数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P45渣口小套损坏数 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P45渣口小套损坏数Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P45渣口小套损坏数”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P45渣口小套损坏数Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P46渣铁比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P46渣铁比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P46渣铁比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P46渣铁比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P47灰铁比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P47灰铁比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P47灰铁比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P47灰铁比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P48原料总耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P48原料总耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P48原料总耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P48原料总耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P49原料单耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P49原料单耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P49原料单耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P49原料单耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P50机烧消耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P50机烧消耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P50机烧消耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P50机烧消耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P51竖炉球消耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P51竖炉球消耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P51竖炉球消耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P51竖炉球消耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P52印度球消耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P52印度球消耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P52印度球消耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P52印度球消耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P53其它熟料消耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P53其它熟料消耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P53其它熟料消耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P53其它熟料消耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P54本溪矿消耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P54本溪矿消耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P54本溪矿消耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P54本溪矿消耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P55其它生料消耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P55其它生料消耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P55其它生料消耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P55其它生料消耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P56废铁总耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P56废铁总耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P56废铁总耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P56废铁总耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P57废铁单耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P57废铁单耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P57废铁单耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P57废铁单耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P58金属收得率 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P58金属收得率Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P58金属收得率”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P58金属收得率Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P59综合焦炭总耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P59综合焦炭总耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P59综合焦炭总耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P59综合焦炭总耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P60七号称 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P60七号称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P60七号称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P60七号称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P61干毛焦 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P61干毛焦Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P61干毛焦”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P61干毛焦Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P62干焦粉 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P62干焦粉Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P62干焦粉”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P62干焦粉Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P63入炉焦炭总耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P63入炉焦炭总耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P63入炉焦炭总耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P63入炉焦炭总耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P64入炉焦炭单耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P64入炉焦炭单耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P64入炉焦炭单耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P64入炉焦炭单耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P65煤粉总耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P65煤粉总耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P65煤粉总耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P65煤粉总耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P66焦丁总耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P66焦丁总耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P66焦丁总耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P66焦丁总耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P67焦丁单耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P67焦丁单耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P67焦丁单耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P67焦丁单耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P68燃料比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P68燃料比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P68燃料比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P68燃料比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P69铁成分SI {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P69铁成分SIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P69铁成分SI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P69铁成分SIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P70铁成分MN {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P70铁成分MNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P70铁成分MN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P70铁成分MNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P71铁成分P {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P71铁成分PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P71铁成分P”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P71铁成分PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P72铁成分S {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P72铁成分SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P72铁成分S”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P72铁成分SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P73渣成分CAO {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P73渣成分CAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P73渣成分CAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P73渣成分CAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P74渣成分SIO2 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P74渣成分SIO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P74渣成分SIO2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P74渣成分SIO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P75渣成分AL2O3 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P75渣成分AL2O3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P75渣成分AL2O3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P75渣成分AL2O3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P76渣成分MGO {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P76渣成分MGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P76渣成分MGO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P76渣成分MGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P77渣成分FEO {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P77渣成分FEOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P77渣成分FEO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P77渣成分FEOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P78渣成分S {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P78渣成分SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P78渣成分S”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P78渣成分SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P79含SI偏差CAO {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P79含SI偏差CAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P79含SI偏差CAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P79含SI偏差CAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P80含SI偏差制铁量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P80含SI偏差制铁量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P80含SI偏差制铁量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P80含SI偏差制铁量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P81含SI偏差铸造铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P81含SI偏差铸造铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P81含SI偏差铸造铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P81含SI偏差铸造铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 综合焦炭单耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.综合焦炭单耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“综合焦炭单耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.综合焦炭单耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 煤粉单耗 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.煤粉单耗Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“煤粉单耗”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.煤粉单耗Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 一级铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.一级铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“一级铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.一级铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 优质铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.优质铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“优质铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.优质铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 瓦斯灰 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.瓦斯灰Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“瓦斯灰”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.瓦斯灰Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 收入含铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.收入含铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“收入含铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.收入含铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 支出含铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.支出含铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“支出含铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.支出含铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 富氧量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.富氧量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“富氧量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.富氧量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 高压操作时间 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.高压操作时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“高压操作时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.高压操作时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 有效工作时间 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.有效工作时间Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“有效工作时间”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.有效工作时间Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 理论渣量 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.理论渣量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“理论渣量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.理论渣量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 深料线 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.深料线Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“深料线”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.深料线Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 全部料线 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.全部料线Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“全部料线”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.全部料线Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 高炉有效容积 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.高炉有效容积Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“高炉有效容积”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.高炉有效容积Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 高炉实际容积 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.高炉实际容积Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“高炉实际容积”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.高炉实际容积Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 入炉矿含铁 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.入炉矿含铁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“入炉矿含铁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.入炉矿含铁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 备注 {
                get {
                    try {
                        return ((string)(this[this.table技术月报.备注Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“备注”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.备注Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P82工艺称焦比 {
                get {
                    try {
                        return ((decimal)(this[this.table技术月报.P82工艺称焦比Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“技术月报”中列“P82工艺称焦比”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table技术月报.P82工艺称焦比Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP03全铁产量Null() {
                return this.IsNull(this.table技术月报.P03全铁产量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP03全铁产量Null() {
                this[this.table技术月报.P03全铁产量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP04合格铁Null() {
                return this.IsNull(this.table技术月报.P04合格铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP04合格铁Null() {
                this[this.table技术月报.P04合格铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP05制钢铁Null() {
                return this.IsNull(this.table技术月报.P05制钢铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP05制钢铁Null() {
                this[this.table技术月报.P05制钢铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP06铸造铁Null() {
                return this.IsNull(this.table技术月报.P06铸造铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP06铸造铁Null() {
                this[this.table技术月报.P06铸造铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP07折合产量Null() {
                return this.IsNull(this.table技术月报.P07折合产量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP07折合产量Null() {
                this[this.table技术月报.P07折合产量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP08合格率Null() {
                return this.IsNull(this.table技术月报.P08合格率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP08合格率Null() {
                this[this.table技术月报.P08合格率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP09一级品率Null() {
                return this.IsNull(this.table技术月报.P09一级品率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP09一级品率Null() {
                this[this.table技术月报.P09一级品率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP10送炼钢优质铁水率Null() {
                return this.IsNull(this.table技术月报.P10送炼钢优质铁水率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP10送炼钢优质铁水率Null() {
                this[this.table技术月报.P10送炼钢优质铁水率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP11高炉利用系数Null() {
                return this.IsNull(this.table技术月报.P11高炉利用系数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP11高炉利用系数Null() {
                this[this.table技术月报.P11高炉利用系数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP12入炉焦炭冶炼强度Null() {
                return this.IsNull(this.table技术月报.P12入炉焦炭冶炼强度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP12入炉焦炭冶炼强度Null() {
                this[this.table技术月报.P12入炉焦炭冶炼强度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP13综合焦炭冶炼强度Null() {
                return this.IsNull(this.table技术月报.P13综合焦炭冶炼强度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP13综合焦炭冶炼强度Null() {
                this[this.table技术月报.P13综合焦炭冶炼强度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP14折算综合焦比Null() {
                return this.IsNull(this.table技术月报.P14折算综合焦比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP14折算综合焦比Null() {
                this[this.table技术月报.P14折算综合焦比Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP15折合入炉焦比Null() {
                return this.IsNull(this.table技术月报.P15折合入炉焦比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP15折合入炉焦比Null() {
                this[this.table技术月报.P15折合入炉焦比Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP16入炉矿品位Null() {
                return this.IsNull(this.table技术月报.P16入炉矿品位Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP16入炉矿品位Null() {
                this[this.table技术月报.P16入炉矿品位Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP17熟料比Null() {
                return this.IsNull(this.table技术月报.P17熟料比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP17熟料比Null() {
                this[this.table技术月报.P17熟料比Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP18入炉焦炭负荷Null() {
                return this.IsNull(this.table技术月报.P18入炉焦炭负荷Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP18入炉焦炭负荷Null() {
                this[this.table技术月报.P18入炉焦炭负荷Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP19综合焦炭负荷Null() {
                return this.IsNull(this.table技术月报.P19综合焦炭负荷Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP19综合焦炭负荷Null() {
                this[this.table技术月报.P19综合焦炭负荷Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP20休风时间Null() {
                return this.IsNull(this.table技术月报.P20休风时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP20休风时间Null() {
                this[this.table技术月报.P20休风时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP21休风率Null() {
                return this.IsNull(this.table技术月报.P21休风率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP21休风率Null() {
                this[this.table技术月报.P21休风率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP22慢风时间Null() {
                return this.IsNull(this.table技术月报.P22慢风时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP22慢风时间Null() {
                this[this.table技术月报.P22慢风时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP23慢风率Null() {
                return this.IsNull(this.table技术月报.P23慢风率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP23慢风率Null() {
                this[this.table技术月报.P23慢风率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP24煤气成分CO2Null() {
                return this.IsNull(this.table技术月报.P24煤气成分CO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP24煤气成分CO2Null() {
                this[this.table技术月报.P24煤气成分CO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP25煤气成分计算1Null() {
                return this.IsNull(this.table技术月报.P25煤气成分计算1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP25煤气成分计算1Null() {
                this[this.table技术月报.P25煤气成分计算1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP26生铁表面质量Null() {
                return this.IsNull(this.table技术月报.P26生铁表面质量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP26生铁表面质量Null() {
                this[this.table技术月报.P26生铁表面质量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP27深料线作业率Null() {
                return this.IsNull(this.table技术月报.P27深料线作业率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP27深料线作业率Null() {
                this[this.table技术月报.P27深料线作业率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP28回收率Null() {
                return this.IsNull(this.table技术月报.P28回收率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP28回收率Null() {
                this[this.table技术月报.P28回收率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP29冷风流量Null() {
                return this.IsNull(this.table技术月报.P29冷风流量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP29冷风流量Null() {
                this[this.table技术月报.P29冷风流量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP30平均风温Null() {
                return this.IsNull(this.table技术月报.P30平均风温Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP30平均风温Null() {
                this[this.table技术月报.P30平均风温Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP31风速Null() {
                return this.IsNull(this.table技术月报.P31风速Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP31风速Null() {
                this[this.table技术月报.P31风速Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP32热风压力Null() {
                return this.IsNull(this.table技术月报.P32热风压力Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP32热风压力Null() {
                this[this.table技术月报.P32热风压力Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP33炉顶压力Null() {
                return this.IsNull(this.table技术月报.P33炉顶压力Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP33炉顶压力Null() {
                this[this.table技术月报.P33炉顶压力Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP34炉顶温度Null() {
                return this.IsNull(this.table技术月报.P34炉顶温度Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP34炉顶温度Null() {
                this[this.table技术月报.P34炉顶温度Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP35富氧率Null() {
                return this.IsNull(this.table技术月报.P35富氧率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP35富氧率Null() {
                this[this.table技术月报.P35富氧率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP36高压率Null() {
                return this.IsNull(this.table技术月报.P36高压率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP36高压率Null() {
                this[this.table技术月报.P36高压率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP37悬料次数Null() {
                return this.IsNull(this.table技术月报.P37悬料次数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP37悬料次数Null() {
                this[this.table技术月报.P37悬料次数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP38坐料次数Null() {
                return this.IsNull(this.table技术月报.P38坐料次数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP38坐料次数Null() {
                this[this.table技术月报.P38坐料次数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP39崩料次数Null() {
                return this.IsNull(this.table技术月报.P39崩料次数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP39崩料次数Null() {
                this[this.table技术月报.P39崩料次数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP40风口大套损坏数Null() {
                return this.IsNull(this.table技术月报.P40风口大套损坏数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP40风口大套损坏数Null() {
                this[this.table技术月报.P40风口大套损坏数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP41风口中套损坏数Null() {
                return this.IsNull(this.table技术月报.P41风口中套损坏数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP41风口中套损坏数Null() {
                this[this.table技术月报.P41风口中套损坏数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP42风口小套损坏数Null() {
                return this.IsNull(this.table技术月报.P42风口小套损坏数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP42风口小套损坏数Null() {
                this[this.table技术月报.P42风口小套损坏数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP43渣口大套损坏数Null() {
                return this.IsNull(this.table技术月报.P43渣口大套损坏数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP43渣口大套损坏数Null() {
                this[this.table技术月报.P43渣口大套损坏数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP44渣口中套损坏数Null() {
                return this.IsNull(this.table技术月报.P44渣口中套损坏数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP44渣口中套损坏数Null() {
                this[this.table技术月报.P44渣口中套损坏数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP45渣口小套损坏数Null() {
                return this.IsNull(this.table技术月报.P45渣口小套损坏数Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP45渣口小套损坏数Null() {
                this[this.table技术月报.P45渣口小套损坏数Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP46渣铁比Null() {
                return this.IsNull(this.table技术月报.P46渣铁比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP46渣铁比Null() {
                this[this.table技术月报.P46渣铁比Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP47灰铁比Null() {
                return this.IsNull(this.table技术月报.P47灰铁比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP47灰铁比Null() {
                this[this.table技术月报.P47灰铁比Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP48原料总耗Null() {
                return this.IsNull(this.table技术月报.P48原料总耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP48原料总耗Null() {
                this[this.table技术月报.P48原料总耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP49原料单耗Null() {
                return this.IsNull(this.table技术月报.P49原料单耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP49原料单耗Null() {
                this[this.table技术月报.P49原料单耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP50机烧消耗Null() {
                return this.IsNull(this.table技术月报.P50机烧消耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP50机烧消耗Null() {
                this[this.table技术月报.P50机烧消耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP51竖炉球消耗Null() {
                return this.IsNull(this.table技术月报.P51竖炉球消耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP51竖炉球消耗Null() {
                this[this.table技术月报.P51竖炉球消耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP52印度球消耗Null() {
                return this.IsNull(this.table技术月报.P52印度球消耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP52印度球消耗Null() {
                this[this.table技术月报.P52印度球消耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP53其它熟料消耗Null() {
                return this.IsNull(this.table技术月报.P53其它熟料消耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP53其它熟料消耗Null() {
                this[this.table技术月报.P53其它熟料消耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP54本溪矿消耗Null() {
                return this.IsNull(this.table技术月报.P54本溪矿消耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP54本溪矿消耗Null() {
                this[this.table技术月报.P54本溪矿消耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP55其它生料消耗Null() {
                return this.IsNull(this.table技术月报.P55其它生料消耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP55其它生料消耗Null() {
                this[this.table技术月报.P55其它生料消耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP56废铁总耗Null() {
                return this.IsNull(this.table技术月报.P56废铁总耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP56废铁总耗Null() {
                this[this.table技术月报.P56废铁总耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP57废铁单耗Null() {
                return this.IsNull(this.table技术月报.P57废铁单耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP57废铁单耗Null() {
                this[this.table技术月报.P57废铁单耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP58金属收得率Null() {
                return this.IsNull(this.table技术月报.P58金属收得率Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP58金属收得率Null() {
                this[this.table技术月报.P58金属收得率Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP59综合焦炭总耗Null() {
                return this.IsNull(this.table技术月报.P59综合焦炭总耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP59综合焦炭总耗Null() {
                this[this.table技术月报.P59综合焦炭总耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP60七号称Null() {
                return this.IsNull(this.table技术月报.P60七号称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP60七号称Null() {
                this[this.table技术月报.P60七号称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP61干毛焦Null() {
                return this.IsNull(this.table技术月报.P61干毛焦Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP61干毛焦Null() {
                this[this.table技术月报.P61干毛焦Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP62干焦粉Null() {
                return this.IsNull(this.table技术月报.P62干焦粉Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP62干焦粉Null() {
                this[this.table技术月报.P62干焦粉Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP63入炉焦炭总耗Null() {
                return this.IsNull(this.table技术月报.P63入炉焦炭总耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP63入炉焦炭总耗Null() {
                this[this.table技术月报.P63入炉焦炭总耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP64入炉焦炭单耗Null() {
                return this.IsNull(this.table技术月报.P64入炉焦炭单耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP64入炉焦炭单耗Null() {
                this[this.table技术月报.P64入炉焦炭单耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP65煤粉总耗Null() {
                return this.IsNull(this.table技术月报.P65煤粉总耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP65煤粉总耗Null() {
                this[this.table技术月报.P65煤粉总耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP66焦丁总耗Null() {
                return this.IsNull(this.table技术月报.P66焦丁总耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP66焦丁总耗Null() {
                this[this.table技术月报.P66焦丁总耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP67焦丁单耗Null() {
                return this.IsNull(this.table技术月报.P67焦丁单耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP67焦丁单耗Null() {
                this[this.table技术月报.P67焦丁单耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP68燃料比Null() {
                return this.IsNull(this.table技术月报.P68燃料比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP68燃料比Null() {
                this[this.table技术月报.P68燃料比Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP69铁成分SINull() {
                return this.IsNull(this.table技术月报.P69铁成分SIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP69铁成分SINull() {
                this[this.table技术月报.P69铁成分SIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP70铁成分MNNull() {
                return this.IsNull(this.table技术月报.P70铁成分MNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP70铁成分MNNull() {
                this[this.table技术月报.P70铁成分MNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP71铁成分PNull() {
                return this.IsNull(this.table技术月报.P71铁成分PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP71铁成分PNull() {
                this[this.table技术月报.P71铁成分PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP72铁成分SNull() {
                return this.IsNull(this.table技术月报.P72铁成分SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP72铁成分SNull() {
                this[this.table技术月报.P72铁成分SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP73渣成分CAONull() {
                return this.IsNull(this.table技术月报.P73渣成分CAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP73渣成分CAONull() {
                this[this.table技术月报.P73渣成分CAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP74渣成分SIO2Null() {
                return this.IsNull(this.table技术月报.P74渣成分SIO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP74渣成分SIO2Null() {
                this[this.table技术月报.P74渣成分SIO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP75渣成分AL2O3Null() {
                return this.IsNull(this.table技术月报.P75渣成分AL2O3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP75渣成分AL2O3Null() {
                this[this.table技术月报.P75渣成分AL2O3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP76渣成分MGONull() {
                return this.IsNull(this.table技术月报.P76渣成分MGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP76渣成分MGONull() {
                this[this.table技术月报.P76渣成分MGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP77渣成分FEONull() {
                return this.IsNull(this.table技术月报.P77渣成分FEOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP77渣成分FEONull() {
                this[this.table技术月报.P77渣成分FEOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP78渣成分SNull() {
                return this.IsNull(this.table技术月报.P78渣成分SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP78渣成分SNull() {
                this[this.table技术月报.P78渣成分SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP79含SI偏差CAONull() {
                return this.IsNull(this.table技术月报.P79含SI偏差CAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP79含SI偏差CAONull() {
                this[this.table技术月报.P79含SI偏差CAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP80含SI偏差制铁量Null() {
                return this.IsNull(this.table技术月报.P80含SI偏差制铁量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP80含SI偏差制铁量Null() {
                this[this.table技术月报.P80含SI偏差制铁量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP81含SI偏差铸造铁Null() {
                return this.IsNull(this.table技术月报.P81含SI偏差铸造铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP81含SI偏差铸造铁Null() {
                this[this.table技术月报.P81含SI偏差铸造铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is综合焦炭单耗Null() {
                return this.IsNull(this.table技术月报.综合焦炭单耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set综合焦炭单耗Null() {
                this[this.table技术月报.综合焦炭单耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is煤粉单耗Null() {
                return this.IsNull(this.table技术月报.煤粉单耗Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set煤粉单耗Null() {
                this[this.table技术月报.煤粉单耗Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is一级铁Null() {
                return this.IsNull(this.table技术月报.一级铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set一级铁Null() {
                this[this.table技术月报.一级铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is优质铁Null() {
                return this.IsNull(this.table技术月报.优质铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set优质铁Null() {
                this[this.table技术月报.优质铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is瓦斯灰Null() {
                return this.IsNull(this.table技术月报.瓦斯灰Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set瓦斯灰Null() {
                this[this.table技术月报.瓦斯灰Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is收入含铁Null() {
                return this.IsNull(this.table技术月报.收入含铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set收入含铁Null() {
                this[this.table技术月报.收入含铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is支出含铁Null() {
                return this.IsNull(this.table技术月报.支出含铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set支出含铁Null() {
                this[this.table技术月报.支出含铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is富氧量Null() {
                return this.IsNull(this.table技术月报.富氧量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set富氧量Null() {
                this[this.table技术月报.富氧量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is高压操作时间Null() {
                return this.IsNull(this.table技术月报.高压操作时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set高压操作时间Null() {
                this[this.table技术月报.高压操作时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is有效工作时间Null() {
                return this.IsNull(this.table技术月报.有效工作时间Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set有效工作时间Null() {
                this[this.table技术月报.有效工作时间Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is理论渣量Null() {
                return this.IsNull(this.table技术月报.理论渣量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set理论渣量Null() {
                this[this.table技术月报.理论渣量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is深料线Null() {
                return this.IsNull(this.table技术月报.深料线Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set深料线Null() {
                this[this.table技术月报.深料线Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is全部料线Null() {
                return this.IsNull(this.table技术月报.全部料线Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set全部料线Null() {
                this[this.table技术月报.全部料线Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is高炉有效容积Null() {
                return this.IsNull(this.table技术月报.高炉有效容积Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set高炉有效容积Null() {
                this[this.table技术月报.高炉有效容积Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is高炉实际容积Null() {
                return this.IsNull(this.table技术月报.高炉实际容积Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set高炉实际容积Null() {
                this[this.table技术月报.高炉实际容积Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is入炉矿含铁Null() {
                return this.IsNull(this.table技术月报.入炉矿含铁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set入炉矿含铁Null() {
                this[this.table技术月报.入炉矿含铁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is备注Null() {
                return this.IsNull(this.table技术月报.备注Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set备注Null() {
                this[this.table技术月报.备注Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsP82工艺称焦比Null() {
                return this.IsNull(this.table技术月报.P82工艺称焦比Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetP82工艺称焦比Null() {
                this[this.table技术月报.P82工艺称焦比Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 技术月报RowChangeEvent : global::System.EventArgs {
            
            private 技术月报Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报RowChangeEvent(技术月报Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 技术月报Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LTZN.技术月报.技术月报表TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class 技术月报TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 技术月报TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "技术月报";
            tableMapping.ColumnMappings.Add("P年", "P年");
            tableMapping.ColumnMappings.Add("P月", "P月");
            tableMapping.ColumnMappings.Add("P01单位", "P01单位");
            tableMapping.ColumnMappings.Add("P02项目", "P02项目");
            tableMapping.ColumnMappings.Add("P03全铁产量", "P03全铁产量");
            tableMapping.ColumnMappings.Add("P04合格铁", "P04合格铁");
            tableMapping.ColumnMappings.Add("P05制钢铁", "P05制钢铁");
            tableMapping.ColumnMappings.Add("P06铸造铁", "P06铸造铁");
            tableMapping.ColumnMappings.Add("P07折合产量", "P07折合产量");
            tableMapping.ColumnMappings.Add("P08合格率", "P08合格率");
            tableMapping.ColumnMappings.Add("P09一级品率", "P09一级品率");
            tableMapping.ColumnMappings.Add("P10送炼钢优质铁水率", "P10送炼钢优质铁水率");
            tableMapping.ColumnMappings.Add("P11高炉利用系数", "P11高炉利用系数");
            tableMapping.ColumnMappings.Add("P12入炉焦炭冶炼强度", "P12入炉焦炭冶炼强度");
            tableMapping.ColumnMappings.Add("P13综合焦炭冶炼强度", "P13综合焦炭冶炼强度");
            tableMapping.ColumnMappings.Add("P14折算综合焦比", "P14折算综合焦比");
            tableMapping.ColumnMappings.Add("P15折合入炉焦比", "P15折合入炉焦比");
            tableMapping.ColumnMappings.Add("P16入炉矿品位", "P16入炉矿品位");
            tableMapping.ColumnMappings.Add("P17熟料比", "P17熟料比");
            tableMapping.ColumnMappings.Add("P18入炉焦炭负荷", "P18入炉焦炭负荷");
            tableMapping.ColumnMappings.Add("P19综合焦炭负荷", "P19综合焦炭负荷");
            tableMapping.ColumnMappings.Add("P20休风时间", "P20休风时间");
            tableMapping.ColumnMappings.Add("P21休风率", "P21休风率");
            tableMapping.ColumnMappings.Add("P22慢风时间", "P22慢风时间");
            tableMapping.ColumnMappings.Add("P23慢风率", "P23慢风率");
            tableMapping.ColumnMappings.Add("P24煤气成分CO2", "P24煤气成分CO2");
            tableMapping.ColumnMappings.Add("P25煤气成分计算1", "P25煤气成分计算1");
            tableMapping.ColumnMappings.Add("P26生铁表面质量", "P26生铁表面质量");
            tableMapping.ColumnMappings.Add("P27深料线作业率", "P27深料线作业率");
            tableMapping.ColumnMappings.Add("P28回收率", "P28回收率");
            tableMapping.ColumnMappings.Add("P29冷风流量", "P29冷风流量");
            tableMapping.ColumnMappings.Add("P30平均风温", "P30平均风温");
            tableMapping.ColumnMappings.Add("P31风速", "P31风速");
            tableMapping.ColumnMappings.Add("P32热风压力", "P32热风压力");
            tableMapping.ColumnMappings.Add("P33炉顶压力", "P33炉顶压力");
            tableMapping.ColumnMappings.Add("P34炉顶温度", "P34炉顶温度");
            tableMapping.ColumnMappings.Add("P35富氧率", "P35富氧率");
            tableMapping.ColumnMappings.Add("P36高压率", "P36高压率");
            tableMapping.ColumnMappings.Add("P37悬料次数", "P37悬料次数");
            tableMapping.ColumnMappings.Add("P38坐料次数", "P38坐料次数");
            tableMapping.ColumnMappings.Add("P39崩料次数", "P39崩料次数");
            tableMapping.ColumnMappings.Add("P40风口大套损坏数", "P40风口大套损坏数");
            tableMapping.ColumnMappings.Add("P41风口中套损坏数", "P41风口中套损坏数");
            tableMapping.ColumnMappings.Add("P42风口小套损坏数", "P42风口小套损坏数");
            tableMapping.ColumnMappings.Add("P43渣口大套损坏数", "P43渣口大套损坏数");
            tableMapping.ColumnMappings.Add("P44渣口中套损坏数", "P44渣口中套损坏数");
            tableMapping.ColumnMappings.Add("P45渣口小套损坏数", "P45渣口小套损坏数");
            tableMapping.ColumnMappings.Add("P46渣铁比", "P46渣铁比");
            tableMapping.ColumnMappings.Add("P47灰铁比", "P47灰铁比");
            tableMapping.ColumnMappings.Add("P48原料总耗", "P48原料总耗");
            tableMapping.ColumnMappings.Add("P49原料单耗", "P49原料单耗");
            tableMapping.ColumnMappings.Add("P50机烧消耗", "P50机烧消耗");
            tableMapping.ColumnMappings.Add("P51竖炉球消耗", "P51竖炉球消耗");
            tableMapping.ColumnMappings.Add("P52印度球消耗", "P52印度球消耗");
            tableMapping.ColumnMappings.Add("P53其它熟料消耗", "P53其它熟料消耗");
            tableMapping.ColumnMappings.Add("P54本溪矿消耗", "P54本溪矿消耗");
            tableMapping.ColumnMappings.Add("P55其它生料消耗", "P55其它生料消耗");
            tableMapping.ColumnMappings.Add("P56废铁总耗", "P56废铁总耗");
            tableMapping.ColumnMappings.Add("P57废铁单耗", "P57废铁单耗");
            tableMapping.ColumnMappings.Add("P58金属收得率", "P58金属收得率");
            tableMapping.ColumnMappings.Add("P59综合焦炭总耗", "P59综合焦炭总耗");
            tableMapping.ColumnMappings.Add("P60七号称", "P60七号称");
            tableMapping.ColumnMappings.Add("P61干毛焦", "P61干毛焦");
            tableMapping.ColumnMappings.Add("P62干焦粉", "P62干焦粉");
            tableMapping.ColumnMappings.Add("P63入炉焦炭总耗", "P63入炉焦炭总耗");
            tableMapping.ColumnMappings.Add("P64入炉焦炭单耗", "P64入炉焦炭单耗");
            tableMapping.ColumnMappings.Add("P65煤粉总耗", "P65煤粉总耗");
            tableMapping.ColumnMappings.Add("P66焦丁总耗", "P66焦丁总耗");
            tableMapping.ColumnMappings.Add("P67焦丁单耗", "P67焦丁单耗");
            tableMapping.ColumnMappings.Add("P68燃料比", "P68燃料比");
            tableMapping.ColumnMappings.Add("P69铁成分SI", "P69铁成分SI");
            tableMapping.ColumnMappings.Add("P70铁成分MN", "P70铁成分MN");
            tableMapping.ColumnMappings.Add("P71铁成分P", "P71铁成分P");
            tableMapping.ColumnMappings.Add("P72铁成分S", "P72铁成分S");
            tableMapping.ColumnMappings.Add("P73渣成分CAO", "P73渣成分CAO");
            tableMapping.ColumnMappings.Add("P74渣成分SIO2", "P74渣成分SIO2");
            tableMapping.ColumnMappings.Add("P75渣成分AL2O3", "P75渣成分AL2O3");
            tableMapping.ColumnMappings.Add("P76渣成分MGO", "P76渣成分MGO");
            tableMapping.ColumnMappings.Add("P77渣成分FEO", "P77渣成分FEO");
            tableMapping.ColumnMappings.Add("P78渣成分S", "P78渣成分S");
            tableMapping.ColumnMappings.Add("P79含SI偏差CAO", "P79含SI偏差CAO");
            tableMapping.ColumnMappings.Add("P80含SI偏差制铁量", "P80含SI偏差制铁量");
            tableMapping.ColumnMappings.Add("P81含SI偏差铸造铁", "P81含SI偏差铸造铁");
            tableMapping.ColumnMappings.Add("综合焦炭单耗", "综合焦炭单耗");
            tableMapping.ColumnMappings.Add("煤粉单耗", "煤粉单耗");
            tableMapping.ColumnMappings.Add("一级铁", "一级铁");
            tableMapping.ColumnMappings.Add("优质铁", "优质铁");
            tableMapping.ColumnMappings.Add("瓦斯灰", "瓦斯灰");
            tableMapping.ColumnMappings.Add("收入含铁", "收入含铁");
            tableMapping.ColumnMappings.Add("支出含铁", "支出含铁");
            tableMapping.ColumnMappings.Add("富氧量", "富氧量");
            tableMapping.ColumnMappings.Add("高压操作时间", "高压操作时间");
            tableMapping.ColumnMappings.Add("有效工作时间", "有效工作时间");
            tableMapping.ColumnMappings.Add("理论渣量", "理论渣量");
            tableMapping.ColumnMappings.Add("深料线", "深料线");
            tableMapping.ColumnMappings.Add("全部料线", "全部料线");
            tableMapping.ColumnMappings.Add("高炉有效容积", "高炉有效容积");
            tableMapping.ColumnMappings.Add("高炉实际容积", "高炉实际容积");
            tableMapping.ColumnMappings.Add("入炉矿含铁", "入炉矿含铁");
            tableMapping.ColumnMappings.Add("备注", "备注");
            tableMapping.ColumnMappings.Add("P82工艺称焦比", "P82工艺称焦比");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM 技术月报\r\nWHERE (P年 = :Original_P年) AND (P月 = :Original_P月) AND \r\n      (" +
                "P01单位 = :Original_P01单位) AND (P02项目 = :Original_P02项目)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P年", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P年", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P月", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P月", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P01单位", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "P01单位", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P02项目", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "P02项目", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"LF\".\"技术月报\" (\"P年\", \"P月\", \"P01单位\", \"P02项目\", \"P03全铁产量\", \"P04合格铁\", \"P05制" +
                "钢铁\", \"P06铸造铁\", \"P07折合产量\", \"P08合格率\", \"P09一级品率\", \"P10送炼钢优质铁水率\", \"P11高炉利用系数\", \"P12入" +
                "炉焦炭冶炼强度\", \"P13综合焦炭冶炼强度\", \"P14折算综合焦比\", \"P15折合入炉焦比\", \"P16入炉矿品位\", \"P17熟料比\", \"P18入炉焦" +
                "炭负荷\", \"P19综合焦炭负荷\", \"P20休风时间\", \"P21休风率\", \"P22慢风时间\", \"P23慢风率\", \"P24煤气成分CO2\", \"P25煤" +
                "气成分计算1\", \"P26生铁表面质量\", \"P27深料线作业率\", \"P28回收率\", \"P29冷风流量\", \"P30平均风温\", \"P31风速\", \"P32" +
                "热风压力\", \"P33炉顶压力\", \"P34炉顶温度\", \"P35富氧率\", \"P36高压率\", \"P37悬料次数\", \"P38坐料次数\", \"P39崩料次数\"" +
                ", \"P40风口大套损坏数\", \"P41风口中套损坏数\", \"P42风口小套损坏数\", \"P43渣口大套损坏数\", \"P44渣口中套损坏数\", \"P45渣口小套" +
                "损坏数\", \"P46渣铁比\", \"P47灰铁比\", \"P48原料总耗\", \"P49原料单耗\", \"P50机烧消耗\", \"P51竖炉球消耗\", \"P52印度球消耗" +
                "\", \"P53其它熟料消耗\", \"P54本溪矿消耗\", \"P55其它生料消耗\", \"P56废铁总耗\", \"P57废铁单耗\", \"P58金属收得率\", \"P59综" +
                "合焦炭总耗\", \"P60七号称\", \"P61干毛焦\", \"P62干焦粉\", \"P63入炉焦炭总耗\", \"P64入炉焦炭单耗\", \"P65煤粉总耗\", \"P66焦" +
                "丁总耗\", \"P67焦丁单耗\", \"P68燃料比\", \"P69铁成分SI\", \"P70铁成分MN\", \"P71铁成分P\", \"P72铁成分S\", \"P73渣成分" +
                "CAO\", \"P74渣成分SIO2\", \"P75渣成分AL2O3\", \"P76渣成分MGO\", \"P77渣成分FEO\", \"P78渣成分S\", \"P79含SI偏" +
                "差CAO\", \"P80含SI偏差制铁量\", \"P81含SI偏差铸造铁\", \"综合焦炭单耗\", \"煤粉单耗\", \"一级铁\", \"优质铁\", \"瓦斯灰\", \"收入含" +
                "铁\", \"支出含铁\", \"富氧量\", \"高压操作时间\", \"有效工作时间\", \"理论渣量\", \"深料线\", \"全部料线\", \"高炉有效容积\", \"高炉实际容积\"" +
                ", \"入炉矿含铁\", \"备注\", \"P82工艺称焦比\") VALUES (:P年, :P月, :P01单位, :P02项目, :P03全铁产量, :P04合格铁" +
                ", :P05制钢铁, :P06铸造铁, :P07折合产量, :P08合格率, :P09一级品率, :P10送炼钢优质铁水率, :P11高炉利用系数, :P12入" +
                "炉焦炭冶炼强度, :P13综合焦炭冶炼强度, :P14折算综合焦比, :P15折合入炉焦比, :P16入炉矿品位, :P17熟料比, :P18入炉焦炭负荷, :" +
                "P19综合焦炭负荷, :P20休风时间, :P21休风率, :P22慢风时间, :P23慢风率, :P24煤气成分CO2, :P25煤气成分计算1, :P26生" +
                "铁表面质量, :P27深料线作业率, :P28回收率, :P29冷风流量, :P30平均风温, :P31风速, :P32热风压力, :P33炉顶压力, :P34" +
                "炉顶温度, :P35富氧率, :P36高压率, :P37悬料次数, :P38坐料次数, :P39崩料次数, :P40风口大套损坏数, :P41风口中套损坏数, " +
                ":P42风口小套损坏数, :P43渣口大套损坏数, :P44渣口中套损坏数, :P45渣口小套损坏数, :P46渣铁比, :P47灰铁比, :P48原料总耗, " +
                ":P49原料单耗, :P50机烧消耗, :P51竖炉球消耗, :P52印度球消耗, :P53其它熟料消耗, :P54本溪矿消耗, :P55其它生料消耗, :P5" +
                "6废铁总耗, :P57废铁单耗, :P58金属收得率, :P59综合焦炭总耗, :P60七号称, :P61干毛焦, :P62干焦粉, :P63入炉焦炭总耗, :" +
                "P64入炉焦炭单耗, :P65煤粉总耗, :P66焦丁总耗, :P67焦丁单耗, :P68燃料比, :P69铁成分SI, :P70铁成分MN, :P71铁成分P" +
                ", :P72铁成分S, :P73渣成分CAO, :P74渣成分SIO2, :P75渣成分AL2O3, :P76渣成分MGO, :P77渣成分FEO, :P78渣" +
                "成分S, :P79含SI偏差CAO, :P80含SI偏差制铁量, :P81含SI偏差铸造铁, :综合焦炭单耗, :煤粉单耗, :一级铁, :优质铁, :瓦斯灰," +
                " :收入含铁, :支出含铁, :富氧量, :高压操作时间, :有效工作时间, :理论渣量, :深料线, :全部料线, :高炉有效容积, :高炉实际容积, :入炉" +
                "矿含铁, :备注, :P82工艺称焦比)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P年", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P年", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P月", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P月", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P01单位", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "P01单位", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P02项目", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "P02项目", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P03全铁产量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P03全铁产量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P04合格铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P04合格铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P05制钢铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P05制钢铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P06铸造铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P06铸造铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P07折合产量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P07折合产量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P08合格率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P08合格率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P09一级品率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P09一级品率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P10送炼钢优质铁水率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P10送炼钢优质铁水率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P11高炉利用系数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P11高炉利用系数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P12入炉焦炭冶炼强度", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P12入炉焦炭冶炼强度", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P13综合焦炭冶炼强度", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P13综合焦炭冶炼强度", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P14折算综合焦比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P14折算综合焦比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P15折合入炉焦比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P15折合入炉焦比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P16入炉矿品位", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P16入炉矿品位", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P17熟料比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P17熟料比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P18入炉焦炭负荷", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P18入炉焦炭负荷", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P19综合焦炭负荷", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P19综合焦炭负荷", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P20休风时间", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P20休风时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P21休风率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P21休风率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P22慢风时间", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P22慢风时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P23慢风率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P23慢风率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P24煤气成分CO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P24煤气成分CO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P25煤气成分计算1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P25煤气成分计算1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P26生铁表面质量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P26生铁表面质量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P27深料线作业率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P27深料线作业率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P28回收率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P28回收率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P29冷风流量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P29冷风流量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P30平均风温", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P30平均风温", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P31风速", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P31风速", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P32热风压力", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P32热风压力", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P33炉顶压力", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P33炉顶压力", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P34炉顶温度", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P34炉顶温度", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P35富氧率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P35富氧率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P36高压率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P36高压率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P37悬料次数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P37悬料次数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P38坐料次数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P38坐料次数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P39崩料次数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P39崩料次数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P40风口大套损坏数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P40风口大套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P41风口中套损坏数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P41风口中套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P42风口小套损坏数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P42风口小套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P43渣口大套损坏数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P43渣口大套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P44渣口中套损坏数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P44渣口中套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P45渣口小套损坏数", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P45渣口小套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P46渣铁比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P46渣铁比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P47灰铁比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P47灰铁比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P48原料总耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P48原料总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P49原料单耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P49原料单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P50机烧消耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P50机烧消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P51竖炉球消耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P51竖炉球消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P52印度球消耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P52印度球消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P53其它熟料消耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P53其它熟料消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P54本溪矿消耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P54本溪矿消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P55其它生料消耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P55其它生料消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P56废铁总耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P56废铁总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P57废铁单耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P57废铁单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P58金属收得率", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P58金属收得率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P59综合焦炭总耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P59综合焦炭总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P60七号称", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P60七号称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P61干毛焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P61干毛焦", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P62干焦粉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P62干焦粉", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P63入炉焦炭总耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P63入炉焦炭总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P64入炉焦炭单耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P64入炉焦炭单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P65煤粉总耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P65煤粉总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P66焦丁总耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P66焦丁总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P67焦丁单耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P67焦丁单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P68燃料比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P68燃料比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P69铁成分SI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P69铁成分SI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P70铁成分MN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P70铁成分MN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P71铁成分P", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P71铁成分P", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P72铁成分S", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P72铁成分S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P73渣成分CAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P73渣成分CAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P74渣成分SIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P74渣成分SIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P75渣成分AL2O3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P75渣成分AL2O3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P76渣成分MGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P76渣成分MGO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P77渣成分FEO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P77渣成分FEO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P78渣成分S", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P78渣成分S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P79含SI偏差CAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P79含SI偏差CAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P80含SI偏差制铁量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P80含SI偏差制铁量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P81含SI偏差铸造铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P81含SI偏差铸造铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("综合焦炭单耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "综合焦炭单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("煤粉单耗", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "煤粉单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("一级铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "一级铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("优质铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "优质铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("瓦斯灰", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "瓦斯灰", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("收入含铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "收入含铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("支出含铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "支出含铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("富氧量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高压操作时间", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高压操作时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("有效工作时间", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "有效工作时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("理论渣量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "理论渣量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("深料线", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "深料线", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("全部料线", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "全部料线", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉有效容积", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高炉有效容积", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉实际容积", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高炉实际容积", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("入炉矿含铁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "入炉矿含铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("备注", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "备注", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P82工艺称焦比", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P82工艺称焦比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE 技术月报\r\nSET P03全铁产量 = :P03全铁产量, P04合格铁 = :P04合格铁, P05制钢铁 = :P05制钢铁, \r\n      " +
                "P06铸造铁 = :P06铸造铁, P07折合产量 = :P07折合产量, P08合格率 = :P08合格率, \r\n      P09一级品率 = :P09一级" +
                "品率, P10送炼钢优质铁水率 = :P10送炼钢优质铁水率, \r\n      P11高炉利用系数 = :P11高炉利用系数, \r\n      P12入炉焦炭冶" +
                "炼强度 = :P12入炉焦炭冶炼强度, \r\n      P13综合焦炭冶炼强度 = :P13综合焦炭冶炼强度, \r\n      P14折算综合焦比 = :P14" +
                "折算综合焦比, P15折合入炉焦比 = :P15折合入炉焦比, \r\n      P16入炉矿品位 = :P16入炉矿品位, P17熟料比 = :P17熟料比, " +
                "\r\n      P18入炉焦炭负荷 = :P18入炉焦炭负荷, P19综合焦炭负荷 = :P19综合焦炭负荷, \r\n      P20休风时间 = :P20休风" +
                "时间, P21休风率 = :P21休风率, \r\n      P22慢风时间 = :P22慢风时间, P23慢风率 = :P23慢风率, \r\n      P24煤" +
                "气成分CO2 = :P24煤气成分CO2, P25煤气成分计算1 = :P25煤气成分计算1, \r\n      P26生铁表面质量 = :P26生铁表面质量, " +
                "P27深料线作业率 = :P27深料线作业率, \r\n      P28回收率 = :P28回收率, P29冷风流量 = :P29冷风流量, \r\n      P3" +
                "0平均风温 = :P30平均风温, P31风速 = :P31风速, P32热风压力 = :P32热风压力, \r\n      P33炉顶压力 = :P33炉顶压力" +
                ", P34炉顶温度 = :P34炉顶温度, \r\n      P35富氧率 = :P35富氧率, P36高压率 = :P36高压率, P37悬料次数 = :P37" +
                "悬料次数, \r\n      P38坐料次数 = :P38坐料次数, P39崩料次数 = :P39崩料次数, \r\n      P40风口大套损坏数 = :P40风" +
                "口大套损坏数, \r\n      P41风口中套损坏数 = :P41风口中套损坏数, \r\n      P42风口小套损坏数 = :P42风口小套损坏数, \r\n  " +
                "    P43渣口大套损坏数 = :P43渣口大套损坏数, \r\n      P44渣口中套损坏数 = :P44渣口中套损坏数, \r\n      P45渣口小套损" +
                "坏数 = :P45渣口小套损坏数, P46渣铁比 = :P46渣铁比, \r\n      P47灰铁比 = :P47灰铁比, P48原料总耗 = :P48原料总耗" +
                ", \r\n      P49原料单耗 = :P49原料单耗, P50机烧消耗 = :P50机烧消耗, \r\n      P51竖炉球消耗 = :P51竖炉球消耗, " +
                "P52印度球消耗 = :P52印度球消耗, \r\n      P53其它熟料消耗 = :P53其它熟料消耗, P54本溪矿消耗 = :P54本溪矿消耗, \r\n  " +
                "    P55其它生料消耗 = :P55其它生料消耗, P56废铁总耗 = :P56废铁总耗, \r\n      P57废铁单耗 = :P57废铁单耗, P58金" +
                "属收得率 = :P58金属收得率, \r\n      P59综合焦炭总耗 = :P59综合焦炭总耗, P60七号称 = :P60七号称, \r\n      P61干" +
                "毛焦 = :P61干毛焦, P62干焦粉 = :P62干焦粉, \r\n      P63入炉焦炭总耗 = :P63入炉焦炭总耗, P64入炉焦炭单耗 = :P64" +
                "入炉焦炭单耗, \r\n      P65煤粉总耗 = :P65煤粉总耗, P66焦丁总耗 = :P66焦丁总耗, \r\n      P67焦丁单耗 = :P67焦丁" +
                "单耗, P68燃料比 = :P68燃料比, \r\n      P69铁成分SI = :P69铁成分SI, P70铁成分MN = :P70铁成分MN, \r\n    " +
                "  P71铁成分P = :P71铁成分P, P72铁成分S = :P72铁成分S, \r\n      P73渣成分CAO = :P73渣成分CAO, P74渣成分" +
                "SIO2 = :P74渣成分SIO2, \r\n      P75渣成分AL2O3 = :P75渣成分AL2O3, P76渣成分MGO = :P76渣成分MGO, " +
                "\r\n      P77渣成分FEO = :P77渣成分FEO, P78渣成分S = :P78渣成分S, \r\n      P79含SI偏差CAO = :P79含S" +
                "I偏差CAO, P80含SI偏差制铁量 = :P80含SI偏差制铁量, \r\n      P81含SI偏差铸造铁 = :P81含SI偏差铸造铁, 综合焦炭单耗 =" +
                " :综合焦炭单耗, \r\n      煤粉单耗 = :煤粉单耗, 一级铁 = :一级铁, 优质铁 = :优质铁, 瓦斯灰 = :瓦斯灰, \r\n      收入含铁" +
                " = :收入含铁, 支出含铁 = :支出含铁, 富氧量 = :富氧量, \r\n      高压操作时间 = :高压操作时间, 有效工作时间 = :有效工作时间, " +
                "\r\n      理论渣量 = :理论渣量, 深料线 = :深料线, 全部料线 = :全部料线, \r\n      高炉有效容积 = :高炉有效容积, 高炉实际容积" +
                " = :高炉实际容积, \r\n      入炉矿含铁 = :入炉矿含铁, 备注 = :备注, P82工艺称焦比 = :P82工艺称焦比\r\nWHERE (P年 = " +
                ":Original_P年) AND (P月 = :Original_P月) AND \r\n      (P01单位 = :Original_P01单位) AND " +
                "(P02项目 = :Original_P02项目)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P03全铁产量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P03全铁产量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P04合格铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P04合格铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P05制钢铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P05制钢铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P06铸造铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P06铸造铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P07折合产量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P07折合产量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P08合格率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P08合格率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P09一级品率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P09一级品率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P10送炼钢优质铁水率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P10送炼钢优质铁水率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P11高炉利用系数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P11高炉利用系数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P12入炉焦炭冶炼强度", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P12入炉焦炭冶炼强度", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P13综合焦炭冶炼强度", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P13综合焦炭冶炼强度", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P14折算综合焦比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P14折算综合焦比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P15折合入炉焦比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P15折合入炉焦比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P16入炉矿品位", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P16入炉矿品位", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P17熟料比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P17熟料比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P18入炉焦炭负荷", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P18入炉焦炭负荷", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P19综合焦炭负荷", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P19综合焦炭负荷", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P20休风时间", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P20休风时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P21休风率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P21休风率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P22慢风时间", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P22慢风时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P23慢风率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P23慢风率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P24煤气成分CO2", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P24煤气成分CO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P25煤气成分计算1", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P25煤气成分计算1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P26生铁表面质量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P26生铁表面质量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P27深料线作业率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P27深料线作业率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P28回收率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P28回收率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P29冷风流量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P29冷风流量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P30平均风温", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P30平均风温", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P31风速", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P31风速", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P32热风压力", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P32热风压力", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P33炉顶压力", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P33炉顶压力", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P34炉顶温度", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P34炉顶温度", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P35富氧率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P35富氧率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P36高压率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P36高压率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P37悬料次数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P37悬料次数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P38坐料次数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P38坐料次数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P39崩料次数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P39崩料次数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P40风口大套损坏数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P40风口大套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P41风口中套损坏数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P41风口中套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P42风口小套损坏数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P42风口小套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P43渣口大套损坏数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P43渣口大套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P44渣口中套损坏数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P44渣口中套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P45渣口小套损坏数", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P45渣口小套损坏数", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P46渣铁比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P46渣铁比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P47灰铁比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P47灰铁比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P48原料总耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P48原料总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P49原料单耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P49原料单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P50机烧消耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P50机烧消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P51竖炉球消耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P51竖炉球消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P52印度球消耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P52印度球消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P53其它熟料消耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P53其它熟料消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P54本溪矿消耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P54本溪矿消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P55其它生料消耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P55其它生料消耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P56废铁总耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P56废铁总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P57废铁单耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P57废铁单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P58金属收得率", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P58金属收得率", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P59综合焦炭总耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P59综合焦炭总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P60七号称", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P60七号称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P61干毛焦", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P61干毛焦", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P62干焦粉", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P62干焦粉", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P63入炉焦炭总耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P63入炉焦炭总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P64入炉焦炭单耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P64入炉焦炭单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P65煤粉总耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P65煤粉总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P66焦丁总耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P66焦丁总耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P67焦丁单耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P67焦丁单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P68燃料比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P68燃料比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P69铁成分SI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P69铁成分SI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P70铁成分MN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P70铁成分MN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P71铁成分P", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P71铁成分P", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P72铁成分S", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P72铁成分S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P73渣成分CAO", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P73渣成分CAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P74渣成分SIO2", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P74渣成分SIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P75渣成分AL2O3", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P75渣成分AL2O3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P76渣成分MGO", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P76渣成分MGO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P77渣成分FEO", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P77渣成分FEO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P78渣成分S", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P78渣成分S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P79含SI偏差CAO", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P79含SI偏差CAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P80含SI偏差制铁量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P80含SI偏差制铁量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P81含SI偏差铸造铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P81含SI偏差铸造铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("综合焦炭单耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "综合焦炭单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("煤粉单耗", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "煤粉单耗", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("一级铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "一级铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("优质铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "优质铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("瓦斯灰", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "瓦斯灰", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("收入含铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "收入含铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("支出含铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "支出含铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("富氧量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高压操作时间", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "高压操作时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("有效工作时间", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "有效工作时间", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("理论渣量", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "理论渣量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("深料线", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "深料线", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("全部料线", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "全部料线", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉有效容积", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "高炉有效容积", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉实际容积", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "高炉实际容积", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("入炉矿含铁", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "入炉矿含铁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("备注", global::System.Data.OracleClient.OracleType.VarChar, 2000, global::System.Data.ParameterDirection.Input, "备注", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P82工艺称焦比", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P82工艺称焦比", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P年", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P年", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P月", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P月", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P01单位", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "P01单位", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P02项目", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "P02项目", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""P年"", ""P月"", ""P01单位"", ""P02项目"", ""P03全铁产量"", ""P04合格铁"", ""P05制钢铁"", ""P06铸造铁"", ""P07折合产量"", ""P08合格率"", ""P09一级品率"", ""P10送炼钢优质铁水率"", ""P11高炉利用系数"", ""P12入炉焦炭冶炼强度"", ""P13综合焦炭冶炼强度"", ""P14折算综合焦比"", ""P15折合入炉焦比"", ""P16入炉矿品位"", ""P17熟料比"", ""P18入炉焦炭负荷"", ""P19综合焦炭负荷"", ""P20休风时间"", ""P21休风率"", ""P22慢风时间"", ""P23慢风率"", ""P24煤气成分CO2"", ""P25煤气成分计算1"", ""P26生铁表面质量"", ""P27深料线作业率"", ""P28回收率"", ""P29冷风流量"", ""P30平均风温"", ""P31风速"", ""P32热风压力"", ""P33炉顶压力"", ""P34炉顶温度"", ""P35富氧率"", ""P36高压率"", ""P37悬料次数"", ""P38坐料次数"", ""P39崩料次数"", ""P40风口大套损坏数"", ""P41风口中套损坏数"", ""P42风口小套损坏数"", ""P43渣口大套损坏数"", ""P44渣口中套损坏数"", ""P45渣口小套损坏数"", ""P46渣铁比"", ""P47灰铁比"", ""P48原料总耗"", ""P49原料单耗"", ""P50机烧消耗"", ""P51竖炉球消耗"", ""P52印度球消耗"", ""P53其它熟料消耗"", ""P54本溪矿消耗"", ""P55其它生料消耗"", ""P56废铁总耗"", ""P57废铁单耗"", ""P58金属收得率"", ""P59综合焦炭总耗"", ""P60七号称"", ""P61干毛焦"", ""P62干焦粉"", ""P63入炉焦炭总耗"", ""P64入炉焦炭单耗"", ""P65煤粉总耗"", ""P66焦丁总耗"", ""P67焦丁单耗"", ""P68燃料比"", ""P69铁成分SI"", ""P70铁成分MN"", ""P71铁成分P"", ""P72铁成分S"", ""P73渣成分CAO"", ""P74渣成分SIO2"", ""P75渣成分AL2O3"", ""P76渣成分MGO"", ""P77渣成分FEO"", ""P78渣成分S"", ""P79含SI偏差CAO"", ""P80含SI偏差制铁量"", ""P81含SI偏差铸造铁"", ""综合焦炭单耗"", ""煤粉单耗"", ""一级铁"", ""优质铁"", ""瓦斯灰"", ""收入含铁"", ""支出含铁"", ""富氧量"", ""高压操作时间"", ""有效工作时间"", ""理论渣量"", ""深料线"", ""全部料线"", ""高炉有效容积"", ""高炉实际容积"", ""入炉矿含铁"", ""备注"", ""P82工艺称焦比"" FROM LF.""技术月报""
where ""P年""=:YEAR AND ""P月""=:MONTH";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YEAR", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P年", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MONTH", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "P月", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(技术月报表.技术月报DataTable dataTable, decimal YEAR, decimal MONTH) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(YEAR));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(MONTH));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 技术月报表.技术月报DataTable GetData(decimal YEAR, decimal MONTH) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(YEAR));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(MONTH));
            技术月报表.技术月报DataTable dataTable = new 技术月报表.技术月报DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(技术月报表.技术月报DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(技术月报表 dataSet) {
            return this.Adapter.Update(dataSet, "技术月报");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_P年, decimal Original_P月, string Original_P01单位, string Original_P02项目) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_P年));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_P月));
            if ((Original_P01单位 == null)) {
                throw new global::System.ArgumentNullException("Original_P01单位");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_P01单位));
            }
            if ((Original_P02项目 == null)) {
                throw new global::System.ArgumentNullException("Original_P02项目");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_P02项目));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal P年, 
                    decimal P月, 
                    string P01单位, 
                    string P02项目, 
                    global::System.Nullable<decimal> P03全铁产量, 
                    global::System.Nullable<decimal> P04合格铁, 
                    global::System.Nullable<decimal> P05制钢铁, 
                    global::System.Nullable<decimal> P06铸造铁, 
                    global::System.Nullable<decimal> P07折合产量, 
                    global::System.Nullable<decimal> P08合格率, 
                    global::System.Nullable<decimal> P09一级品率, 
                    global::System.Nullable<decimal> P10送炼钢优质铁水率, 
                    global::System.Nullable<decimal> P11高炉利用系数, 
                    global::System.Nullable<decimal> P12入炉焦炭冶炼强度, 
                    global::System.Nullable<decimal> P13综合焦炭冶炼强度, 
                    global::System.Nullable<decimal> P14折算综合焦比, 
                    global::System.Nullable<decimal> P15折合入炉焦比, 
                    global::System.Nullable<decimal> P16入炉矿品位, 
                    global::System.Nullable<decimal> P17熟料比, 
                    global::System.Nullable<decimal> P18入炉焦炭负荷, 
                    global::System.Nullable<decimal> P19综合焦炭负荷, 
                    global::System.Nullable<decimal> P20休风时间, 
                    global::System.Nullable<decimal> P21休风率, 
                    global::System.Nullable<decimal> P22慢风时间, 
                    global::System.Nullable<decimal> P23慢风率, 
                    global::System.Nullable<decimal> P24煤气成分CO2, 
                    global::System.Nullable<decimal> P25煤气成分计算1, 
                    global::System.Nullable<decimal> P26生铁表面质量, 
                    global::System.Nullable<decimal> P27深料线作业率, 
                    global::System.Nullable<decimal> P28回收率, 
                    global::System.Nullable<decimal> P29冷风流量, 
                    global::System.Nullable<decimal> P30平均风温, 
                    global::System.Nullable<decimal> P31风速, 
                    global::System.Nullable<decimal> P32热风压力, 
                    global::System.Nullable<decimal> P33炉顶压力, 
                    global::System.Nullable<decimal> P34炉顶温度, 
                    global::System.Nullable<decimal> P35富氧率, 
                    global::System.Nullable<decimal> P36高压率, 
                    global::System.Nullable<decimal> P37悬料次数, 
                    global::System.Nullable<decimal> P38坐料次数, 
                    global::System.Nullable<decimal> P39崩料次数, 
                    global::System.Nullable<decimal> P40风口大套损坏数, 
                    global::System.Nullable<decimal> P41风口中套损坏数, 
                    global::System.Nullable<decimal> P42风口小套损坏数, 
                    global::System.Nullable<decimal> P43渣口大套损坏数, 
                    global::System.Nullable<decimal> P44渣口中套损坏数, 
                    global::System.Nullable<decimal> P45渣口小套损坏数, 
                    global::System.Nullable<decimal> P46渣铁比, 
                    global::System.Nullable<decimal> P47灰铁比, 
                    global::System.Nullable<decimal> P48原料总耗, 
                    global::System.Nullable<decimal> P49原料单耗, 
                    global::System.Nullable<decimal> P50机烧消耗, 
                    global::System.Nullable<decimal> P51竖炉球消耗, 
                    global::System.Nullable<decimal> P52印度球消耗, 
                    global::System.Nullable<decimal> P53其它熟料消耗, 
                    global::System.Nullable<decimal> P54本溪矿消耗, 
                    global::System.Nullable<decimal> P55其它生料消耗, 
                    global::System.Nullable<decimal> P56废铁总耗, 
                    global::System.Nullable<decimal> P57废铁单耗, 
                    global::System.Nullable<decimal> P58金属收得率, 
                    global::System.Nullable<decimal> P59综合焦炭总耗, 
                    global::System.Nullable<decimal> P60七号称, 
                    global::System.Nullable<decimal> P61干毛焦, 
                    global::System.Nullable<decimal> P62干焦粉, 
                    global::System.Nullable<decimal> P63入炉焦炭总耗, 
                    global::System.Nullable<decimal> P64入炉焦炭单耗, 
                    global::System.Nullable<decimal> P65煤粉总耗, 
                    global::System.Nullable<decimal> P66焦丁总耗, 
                    global::System.Nullable<decimal> P67焦丁单耗, 
                    global::System.Nullable<decimal> P68燃料比, 
                    global::System.Nullable<decimal> P69铁成分SI, 
                    global::System.Nullable<decimal> P70铁成分MN, 
                    global::System.Nullable<decimal> P71铁成分P, 
                    global::System.Nullable<decimal> P72铁成分S, 
                    global::System.Nullable<decimal> P73渣成分CAO, 
                    global::System.Nullable<decimal> P74渣成分SIO2, 
                    global::System.Nullable<decimal> P75渣成分AL2O3, 
                    global::System.Nullable<decimal> P76渣成分MGO, 
                    global::System.Nullable<decimal> P77渣成分FEO, 
                    global::System.Nullable<decimal> P78渣成分S, 
                    global::System.Nullable<decimal> P79含SI偏差CAO, 
                    global::System.Nullable<decimal> P80含SI偏差制铁量, 
                    global::System.Nullable<decimal> P81含SI偏差铸造铁, 
                    global::System.Nullable<decimal> 综合焦炭单耗, 
                    global::System.Nullable<decimal> 煤粉单耗, 
                    global::System.Nullable<decimal> 一级铁, 
                    global::System.Nullable<decimal> 优质铁, 
                    global::System.Nullable<decimal> 瓦斯灰, 
                    global::System.Nullable<decimal> 收入含铁, 
                    global::System.Nullable<decimal> 支出含铁, 
                    global::System.Nullable<decimal> 富氧量, 
                    global::System.Nullable<decimal> 高压操作时间, 
                    global::System.Nullable<decimal> 有效工作时间, 
                    global::System.Nullable<decimal> 理论渣量, 
                    global::System.Nullable<decimal> 深料线, 
                    global::System.Nullable<decimal> 全部料线, 
                    global::System.Nullable<decimal> 高炉有效容积, 
                    global::System.Nullable<decimal> 高炉实际容积, 
                    global::System.Nullable<decimal> 入炉矿含铁, 
                    string 备注, 
                    global::System.Nullable<decimal> P82工艺称焦比) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(P年));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(P月));
            if ((P01单位 == null)) {
                throw new global::System.ArgumentNullException("P01单位");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(P01单位));
            }
            if ((P02项目 == null)) {
                throw new global::System.ArgumentNullException("P02项目");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(P02项目));
            }
            if ((P03全铁产量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(P03全铁产量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((P04合格铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(P04合格铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((P05制钢铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(P05制钢铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((P06铸造铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(P06铸造铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((P07折合产量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(P07折合产量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((P08合格率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(P08合格率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((P09一级品率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(P09一级品率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((P10送炼钢优质铁水率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(P10送炼钢优质铁水率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((P11高炉利用系数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(P11高炉利用系数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((P12入炉焦炭冶炼强度.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(P12入炉焦炭冶炼强度.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((P13综合焦炭冶炼强度.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(P13综合焦炭冶炼强度.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((P14折算综合焦比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(P14折算综合焦比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((P15折合入炉焦比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(P15折合入炉焦比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((P16入炉矿品位.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(P16入炉矿品位.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((P17熟料比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(P17熟料比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((P18入炉焦炭负荷.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(P18入炉焦炭负荷.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((P19综合焦炭负荷.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(P19综合焦炭负荷.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((P20休风时间.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(P20休风时间.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((P21休风率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(P21休风率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((P22慢风时间.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(P22慢风时间.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((P23慢风率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(P23慢风率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((P24煤气成分CO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(P24煤气成分CO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((P25煤气成分计算1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(P25煤气成分计算1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((P26生铁表面质量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(P26生铁表面质量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((P27深料线作业率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(P27深料线作业率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((P28回收率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(P28回收率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((P29冷风流量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(P29冷风流量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((P30平均风温.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(P30平均风温.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((P31风速.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(P31风速.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((P32热风压力.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(P32热风压力.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((P33炉顶压力.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(P33炉顶压力.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((P34炉顶温度.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(P34炉顶温度.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((P35富氧率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(P35富氧率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((P36高压率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(P36高压率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((P37悬料次数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(P37悬料次数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((P38坐料次数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(P38坐料次数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((P39崩料次数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(P39崩料次数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((P40风口大套损坏数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(P40风口大套损坏数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((P41风口中套损坏数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(P41风口中套损坏数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((P42风口小套损坏数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(P42风口小套损坏数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((P43渣口大套损坏数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(P43渣口大套损坏数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((P44渣口中套损坏数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(P44渣口中套损坏数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((P45渣口小套损坏数.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(P45渣口小套损坏数.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((P46渣铁比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(P46渣铁比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((P47灰铁比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(P47灰铁比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((P48原料总耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(P48原料总耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((P49原料单耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(P49原料单耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((P50机烧消耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(P50机烧消耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((P51竖炉球消耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(P51竖炉球消耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((P52印度球消耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(P52印度球消耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((P53其它熟料消耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(P53其它熟料消耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((P54本溪矿消耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(P54本溪矿消耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((P55其它生料消耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[56].Value = ((decimal)(P55其它生料消耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((P56废铁总耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((decimal)(P56废铁总耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((P57废铁单耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(P57废铁单耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((P58金属收得率.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((decimal)(P58金属收得率.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((P59综合焦炭总耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[60].Value = ((decimal)(P59综合焦炭总耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((P60七号称.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((decimal)(P60七号称.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((P61干毛焦.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((decimal)(P61干毛焦.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((P62干焦粉.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((decimal)(P62干焦粉.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((P63入炉焦炭总耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[64].Value = ((decimal)(P63入炉焦炭总耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((P64入炉焦炭单耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[65].Value = ((decimal)(P64入炉焦炭单耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((P65煤粉总耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[66].Value = ((decimal)(P65煤粉总耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((P66焦丁总耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[67].Value = ((decimal)(P66焦丁总耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((P67焦丁单耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[68].Value = ((decimal)(P67焦丁单耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((P68燃料比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[69].Value = ((decimal)(P68燃料比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((P69铁成分SI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[70].Value = ((decimal)(P69铁成分SI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((P70铁成分MN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[71].Value = ((decimal)(P70铁成分MN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((P71铁成分P.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[72].Value = ((decimal)(P71铁成分P.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((P72铁成分S.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[73].Value = ((decimal)(P72铁成分S.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((P73渣成分CAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(P73渣成分CAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((P74渣成分SIO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[75].Value = ((decimal)(P74渣成分SIO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((P75渣成分AL2O3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((decimal)(P75渣成分AL2O3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((P76渣成分MGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((decimal)(P76渣成分MGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((P77渣成分FEO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[78].Value = ((decimal)(P77渣成分FEO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((P78渣成分S.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[79].Value = ((decimal)(P78渣成分S.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((P79含SI偏差CAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[80].Value = ((decimal)(P79含SI偏差CAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((P80含SI偏差制铁量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[81].Value = ((decimal)(P80含SI偏差制铁量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((P81含SI偏差铸造铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[82].Value = ((decimal)(P81含SI偏差铸造铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((综合焦炭单耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[83].Value = ((decimal)(综合焦炭单耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((煤粉单耗.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[84].Value = ((decimal)(煤粉单耗.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((一级铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[85].Value = ((decimal)(一级铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((优质铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[86].Value = ((decimal)(优质铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((瓦斯灰.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[87].Value = ((decimal)(瓦斯灰.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((收入含铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[88].Value = ((decimal)(收入含铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((支出含铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[89].Value = ((decimal)(支出含铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((富氧量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[90].Value = ((decimal)(富氧量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((高压操作时间.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[91].Value = ((decimal)(高压操作时间.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((有效工作时间.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[92].Value = ((decimal)(有效工作时间.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((理论渣量.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[93].Value = ((decimal)(理论渣量.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((深料线.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[94].Value = ((decimal)(深料线.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((全部料线.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[95].Value = ((decimal)(全部料线.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            if ((高炉有效容积.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[96].Value = ((decimal)(高炉有效容积.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            if ((高炉实际容积.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[97].Value = ((decimal)(高炉实际容积.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[97].Value = global::System.DBNull.Value;
            }
            if ((入炉矿含铁.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[98].Value = ((decimal)(入炉矿含铁.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((备注 == null)) {
                this.Adapter.InsertCommand.Parameters[99].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[99].Value = ((string)(备注));
            }
            if ((P82工艺称焦比.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[100].Value = ((decimal)(P82工艺称焦比.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> P03全铁产量, 
                    global::System.Nullable<decimal> P04合格铁, 
                    global::System.Nullable<decimal> P05制钢铁, 
                    global::System.Nullable<decimal> P06铸造铁, 
                    global::System.Nullable<decimal> P07折合产量, 
                    global::System.Nullable<decimal> P08合格率, 
                    global::System.Nullable<decimal> P09一级品率, 
                    global::System.Nullable<decimal> P10送炼钢优质铁水率, 
                    global::System.Nullable<decimal> P11高炉利用系数, 
                    global::System.Nullable<decimal> P12入炉焦炭冶炼强度, 
                    global::System.Nullable<decimal> P13综合焦炭冶炼强度, 
                    global::System.Nullable<decimal> P14折算综合焦比, 
                    global::System.Nullable<decimal> P15折合入炉焦比, 
                    global::System.Nullable<decimal> P16入炉矿品位, 
                    global::System.Nullable<decimal> P17熟料比, 
                    global::System.Nullable<decimal> P18入炉焦炭负荷, 
                    global::System.Nullable<decimal> P19综合焦炭负荷, 
                    global::System.Nullable<decimal> P20休风时间, 
                    global::System.Nullable<decimal> P21休风率, 
                    global::System.Nullable<decimal> P22慢风时间, 
                    global::System.Nullable<decimal> P23慢风率, 
                    global::System.Nullable<decimal> P24煤气成分CO2, 
                    global::System.Nullable<decimal> P25煤气成分计算1, 
                    global::System.Nullable<decimal> P26生铁表面质量, 
                    global::System.Nullable<decimal> P27深料线作业率, 
                    global::System.Nullable<decimal> P28回收率, 
                    global::System.Nullable<decimal> P29冷风流量, 
                    global::System.Nullable<decimal> P30平均风温, 
                    global::System.Nullable<decimal> P31风速, 
                    global::System.Nullable<decimal> P32热风压力, 
                    global::System.Nullable<decimal> P33炉顶压力, 
                    global::System.Nullable<decimal> P34炉顶温度, 
                    global::System.Nullable<decimal> P35富氧率, 
                    global::System.Nullable<decimal> P36高压率, 
                    global::System.Nullable<decimal> P37悬料次数, 
                    global::System.Nullable<decimal> P38坐料次数, 
                    global::System.Nullable<decimal> P39崩料次数, 
                    global::System.Nullable<decimal> P40风口大套损坏数, 
                    global::System.Nullable<decimal> P41风口中套损坏数, 
                    global::System.Nullable<decimal> P42风口小套损坏数, 
                    global::System.Nullable<decimal> P43渣口大套损坏数, 
                    global::System.Nullable<decimal> P44渣口中套损坏数, 
                    global::System.Nullable<decimal> P45渣口小套损坏数, 
                    global::System.Nullable<decimal> P46渣铁比, 
                    global::System.Nullable<decimal> P47灰铁比, 
                    global::System.Nullable<decimal> P48原料总耗, 
                    global::System.Nullable<decimal> P49原料单耗, 
                    global::System.Nullable<decimal> P50机烧消耗, 
                    global::System.Nullable<decimal> P51竖炉球消耗, 
                    global::System.Nullable<decimal> P52印度球消耗, 
                    global::System.Nullable<decimal> P53其它熟料消耗, 
                    global::System.Nullable<decimal> P54本溪矿消耗, 
                    global::System.Nullable<decimal> P55其它生料消耗, 
                    global::System.Nullable<decimal> P56废铁总耗, 
                    global::System.Nullable<decimal> P57废铁单耗, 
                    global::System.Nullable<decimal> P58金属收得率, 
                    global::System.Nullable<decimal> P59综合焦炭总耗, 
                    global::System.Nullable<decimal> P60七号称, 
                    global::System.Nullable<decimal> P61干毛焦, 
                    global::System.Nullable<decimal> P62干焦粉, 
                    global::System.Nullable<decimal> P63入炉焦炭总耗, 
                    global::System.Nullable<decimal> P64入炉焦炭单耗, 
                    global::System.Nullable<decimal> P65煤粉总耗, 
                    global::System.Nullable<decimal> P66焦丁总耗, 
                    global::System.Nullable<decimal> P67焦丁单耗, 
                    global::System.Nullable<decimal> P68燃料比, 
                    global::System.Nullable<decimal> P69铁成分SI, 
                    global::System.Nullable<decimal> P70铁成分MN, 
                    global::System.Nullable<decimal> P71铁成分P, 
                    global::System.Nullable<decimal> P72铁成分S, 
                    global::System.Nullable<decimal> P73渣成分CAO, 
                    global::System.Nullable<decimal> P74渣成分SIO2, 
                    global::System.Nullable<decimal> P75渣成分AL2O3, 
                    global::System.Nullable<decimal> P76渣成分MGO, 
                    global::System.Nullable<decimal> P77渣成分FEO, 
                    global::System.Nullable<decimal> P78渣成分S, 
                    global::System.Nullable<decimal> P79含SI偏差CAO, 
                    global::System.Nullable<decimal> P80含SI偏差制铁量, 
                    global::System.Nullable<decimal> P81含SI偏差铸造铁, 
                    global::System.Nullable<decimal> 综合焦炭单耗, 
                    global::System.Nullable<decimal> 煤粉单耗, 
                    global::System.Nullable<decimal> 一级铁, 
                    global::System.Nullable<decimal> 优质铁, 
                    global::System.Nullable<decimal> 瓦斯灰, 
                    global::System.Nullable<decimal> 收入含铁, 
                    global::System.Nullable<decimal> 支出含铁, 
                    global::System.Nullable<decimal> 富氧量, 
                    global::System.Nullable<decimal> 高压操作时间, 
                    global::System.Nullable<decimal> 有效工作时间, 
                    global::System.Nullable<decimal> 理论渣量, 
                    global::System.Nullable<decimal> 深料线, 
                    global::System.Nullable<decimal> 全部料线, 
                    global::System.Nullable<decimal> 高炉有效容积, 
                    global::System.Nullable<decimal> 高炉实际容积, 
                    global::System.Nullable<decimal> 入炉矿含铁, 
                    string 备注, 
                    global::System.Nullable<decimal> P82工艺称焦比, 
                    decimal Original_P年, 
                    decimal Original_P月, 
                    string Original_P01单位, 
                    string Original_P02项目) {
            if ((P03全铁产量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(P03全铁产量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((P04合格铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(P04合格铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((P05制钢铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(P05制钢铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((P06铸造铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(P06铸造铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((P07折合产量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(P07折合产量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((P08合格率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(P08合格率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((P09一级品率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(P09一级品率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((P10送炼钢优质铁水率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(P10送炼钢优质铁水率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((P11高炉利用系数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(P11高炉利用系数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((P12入炉焦炭冶炼强度.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(P12入炉焦炭冶炼强度.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((P13综合焦炭冶炼强度.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(P13综合焦炭冶炼强度.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((P14折算综合焦比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(P14折算综合焦比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((P15折合入炉焦比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(P15折合入炉焦比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((P16入炉矿品位.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(P16入炉矿品位.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((P17熟料比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(P17熟料比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((P18入炉焦炭负荷.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(P18入炉焦炭负荷.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((P19综合焦炭负荷.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(P19综合焦炭负荷.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((P20休风时间.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(P20休风时间.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((P21休风率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(P21休风率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((P22慢风时间.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(P22慢风时间.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((P23慢风率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(P23慢风率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((P24煤气成分CO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(P24煤气成分CO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((P25煤气成分计算1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(P25煤气成分计算1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((P26生铁表面质量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(P26生铁表面质量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((P27深料线作业率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(P27深料线作业率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((P28回收率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(P28回收率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((P29冷风流量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(P29冷风流量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((P30平均风温.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(P30平均风温.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((P31风速.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(P31风速.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((P32热风压力.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(P32热风压力.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((P33炉顶压力.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(P33炉顶压力.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((P34炉顶温度.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(P34炉顶温度.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((P35富氧率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(P35富氧率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((P36高压率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(P36高压率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((P37悬料次数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(P37悬料次数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((P38坐料次数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(P38坐料次数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((P39崩料次数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(P39崩料次数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((P40风口大套损坏数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(P40风口大套损坏数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((P41风口中套损坏数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(P41风口中套损坏数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((P42风口小套损坏数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(P42风口小套损坏数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((P43渣口大套损坏数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(P43渣口大套损坏数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((P44渣口中套损坏数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(P44渣口中套损坏数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((P45渣口小套损坏数.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(P45渣口小套损坏数.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((P46渣铁比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(P46渣铁比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((P47灰铁比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(P47灰铁比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((P48原料总耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(P48原料总耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((P49原料单耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(P49原料单耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((P50机烧消耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(P50机烧消耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((P51竖炉球消耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(P51竖炉球消耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((P52印度球消耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(P52印度球消耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((P53其它熟料消耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(P53其它熟料消耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((P54本溪矿消耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(P54本溪矿消耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((P55其它生料消耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(P55其它生料消耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((P56废铁总耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(P56废铁总耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((P57废铁单耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(P57废铁单耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((P58金属收得率.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(P58金属收得率.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((P59综合焦炭总耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((decimal)(P59综合焦炭总耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((P60七号称.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(P60七号称.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((P61干毛焦.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(P61干毛焦.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((P62干焦粉.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(P62干焦粉.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((P63入炉焦炭总耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((decimal)(P63入炉焦炭总耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((P64入炉焦炭单耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(P64入炉焦炭单耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((P65煤粉总耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((decimal)(P65煤粉总耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((P66焦丁总耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(P66焦丁总耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((P67焦丁单耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((decimal)(P67焦丁单耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((P68燃料比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(P68燃料比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((P69铁成分SI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((decimal)(P69铁成分SI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((P70铁成分MN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(P70铁成分MN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((P71铁成分P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((decimal)(P71铁成分P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((P72铁成分S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(P72铁成分S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((P73渣成分CAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((decimal)(P73渣成分CAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((P74渣成分SIO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(P74渣成分SIO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((P75渣成分AL2O3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((decimal)(P75渣成分AL2O3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((P76渣成分MGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(P76渣成分MGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((P77渣成分FEO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(P77渣成分FEO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((P78渣成分S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(P78渣成分S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((P79含SI偏差CAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((decimal)(P79含SI偏差CAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((P80含SI偏差制铁量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(P80含SI偏差制铁量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((P81含SI偏差铸造铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((decimal)(P81含SI偏差铸造铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((综合焦炭单耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((decimal)(综合焦炭单耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((煤粉单耗.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((decimal)(煤粉单耗.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((一级铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((decimal)(一级铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((优质铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((decimal)(优质铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((瓦斯灰.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((decimal)(瓦斯灰.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((收入含铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((decimal)(收入含铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            if ((支出含铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[85].Value = ((decimal)(支出含铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((富氧量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((decimal)(富氧量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = global::System.DBNull.Value;
            }
            if ((高压操作时间.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[87].Value = ((decimal)(高压操作时间.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((有效工作时间.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((decimal)(有效工作时间.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = global::System.DBNull.Value;
            }
            if ((理论渣量.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[89].Value = ((decimal)(理论渣量.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((深料线.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((decimal)(深料线.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = global::System.DBNull.Value;
            }
            if ((全部料线.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((decimal)(全部料线.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            if ((高炉有效容积.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((decimal)(高炉有效容积.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = global::System.DBNull.Value;
            }
            if ((高炉实际容积.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((decimal)(高炉实际容积.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            if ((入炉矿含铁.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((decimal)(入炉矿含铁.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = global::System.DBNull.Value;
            }
            if ((备注 == null)) {
                this.Adapter.UpdateCommand.Parameters[95].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(备注));
            }
            if ((P82工艺称焦比.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((decimal)(P82工艺称焦比.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[97].Value = ((decimal)(Original_P年));
            this.Adapter.UpdateCommand.Parameters[98].Value = ((decimal)(Original_P月));
            if ((Original_P01单位 == null)) {
                throw new global::System.ArgumentNullException("Original_P01单位");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((string)(Original_P01单位));
            }
            if ((Original_P02项目 == null)) {
                throw new global::System.ArgumentNullException("Original_P02项目");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[100].Value = ((string)(Original_P02项目));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591