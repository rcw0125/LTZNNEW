//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3634
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LTZN.原料消耗 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("原料消耗数据集")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 原料消耗数据集 : global::System.Data.DataSet {
        
        private 原料消耗DataTable table原料消耗;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 原料消耗数据集() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected 原料消耗数据集(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["原料消耗"] != null)) {
                    base.Tables.Add(new 原料消耗DataTable(ds.Tables["原料消耗"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public 原料消耗DataTable 原料消耗 {
            get {
                return this.table原料消耗;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            原料消耗数据集 cln = ((原料消耗数据集)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["原料消耗"] != null)) {
                    base.Tables.Add(new 原料消耗DataTable(ds.Tables["原料消耗"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.table原料消耗 = ((原料消耗DataTable)(base.Tables["原料消耗"]));
            if ((initTable == true)) {
                if ((this.table原料消耗 != null)) {
                    this.table原料消耗.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "原料消耗数据集";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/原料消耗数据集.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.table原料消耗 = new 原料消耗DataTable();
            base.Tables.Add(this.table原料消耗);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize原料消耗() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            原料消耗数据集 ds = new 原料消耗数据集();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void 原料消耗RowChangeEventHandler(object sender, 原料消耗RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class 原料消耗DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn column日期;
            
            private global::System.Data.DataColumn column高炉;
            
            private global::System.Data.DataColumn column机烧矿;
            
            private global::System.Data.DataColumn column竖球;
            
            private global::System.Data.DataColumn column本溪矿;
            
            private global::System.Data.DataColumn column工艺称;
            
            private global::System.Data.DataColumn column焦丁;
            
            private global::System.Data.DataColumn column煤粉;
            
            private global::System.Data.DataColumn column富氧量;
            
            private global::System.Data.DataColumn column自产湿焦;
            
            private global::System.Data.DataColumn column落地湿焦;
            
            private global::System.Data.DataColumn column熟料;
            
            private global::System.Data.DataColumn column熟料名称;
            
            private global::System.Data.DataColumn column生料;
            
            private global::System.Data.DataColumn column生料名称;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗DataTable() {
                this.TableName = "原料消耗";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 原料消耗DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected 原料消耗DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 日期Column {
                get {
                    return this.column日期;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 高炉Column {
                get {
                    return this.column高炉;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 机烧矿Column {
                get {
                    return this.column机烧矿;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 竖球Column {
                get {
                    return this.column竖球;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 本溪矿Column {
                get {
                    return this.column本溪矿;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 工艺称Column {
                get {
                    return this.column工艺称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 焦丁Column {
                get {
                    return this.column焦丁;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 煤粉Column {
                get {
                    return this.column煤粉;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 富氧量Column {
                get {
                    return this.column富氧量;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 自产湿焦Column {
                get {
                    return this.column自产湿焦;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 落地湿焦Column {
                get {
                    return this.column落地湿焦;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 熟料Column {
                get {
                    return this.column熟料;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 熟料名称Column {
                get {
                    return this.column熟料名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 生料Column {
                get {
                    return this.column生料;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn 生料名称Column {
                get {
                    return this.column生料名称;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗Row this[int index] {
                get {
                    return ((原料消耗Row)(this.Rows[index]));
                }
            }
            
            public event 原料消耗RowChangeEventHandler 原料消耗RowChanging;
            
            public event 原料消耗RowChangeEventHandler 原料消耗RowChanged;
            
            public event 原料消耗RowChangeEventHandler 原料消耗RowDeleting;
            
            public event 原料消耗RowChangeEventHandler 原料消耗RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Add原料消耗Row(原料消耗Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗Row Add原料消耗Row(System.DateTime 日期, decimal 高炉, decimal 机烧矿, decimal 竖球, decimal 本溪矿, decimal 工艺称, decimal 焦丁, decimal 煤粉, decimal 富氧量, decimal 自产湿焦, decimal 落地湿焦, decimal 熟料, string 熟料名称, decimal 生料, string 生料名称) {
                原料消耗Row row原料消耗Row = ((原料消耗Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        日期,
                        高炉,
                        机烧矿,
                        竖球,
                        本溪矿,
                        工艺称,
                        焦丁,
                        煤粉,
                        富氧量,
                        自产湿焦,
                        落地湿焦,
                        熟料,
                        熟料名称,
                        生料,
                        生料名称};
                row原料消耗Row.ItemArray = columnValuesArray;
                this.Rows.Add(row原料消耗Row);
                return row原料消耗Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗Row FindBy日期高炉(System.DateTime 日期, decimal 高炉) {
                return ((原料消耗Row)(this.Rows.Find(new object[] {
                            日期,
                            高炉})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                原料消耗DataTable cln = ((原料消耗DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new 原料消耗DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.column日期 = base.Columns["日期"];
                this.column高炉 = base.Columns["高炉"];
                this.column机烧矿 = base.Columns["机烧矿"];
                this.column竖球 = base.Columns["竖球"];
                this.column本溪矿 = base.Columns["本溪矿"];
                this.column工艺称 = base.Columns["工艺称"];
                this.column焦丁 = base.Columns["焦丁"];
                this.column煤粉 = base.Columns["煤粉"];
                this.column富氧量 = base.Columns["富氧量"];
                this.column自产湿焦 = base.Columns["自产湿焦"];
                this.column落地湿焦 = base.Columns["落地湿焦"];
                this.column熟料 = base.Columns["熟料"];
                this.column熟料名称 = base.Columns["熟料名称"];
                this.column生料 = base.Columns["生料"];
                this.column生料名称 = base.Columns["生料名称"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.column日期 = new global::System.Data.DataColumn("日期", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column日期);
                this.column高炉 = new global::System.Data.DataColumn("高炉", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column高炉);
                this.column机烧矿 = new global::System.Data.DataColumn("机烧矿", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column机烧矿);
                this.column竖球 = new global::System.Data.DataColumn("竖球", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column竖球);
                this.column本溪矿 = new global::System.Data.DataColumn("本溪矿", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column本溪矿);
                this.column工艺称 = new global::System.Data.DataColumn("工艺称", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column工艺称);
                this.column焦丁 = new global::System.Data.DataColumn("焦丁", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column焦丁);
                this.column煤粉 = new global::System.Data.DataColumn("煤粉", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column煤粉);
                this.column富氧量 = new global::System.Data.DataColumn("富氧量", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column富氧量);
                this.column自产湿焦 = new global::System.Data.DataColumn("自产湿焦", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column自产湿焦);
                this.column落地湿焦 = new global::System.Data.DataColumn("落地湿焦", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column落地湿焦);
                this.column熟料 = new global::System.Data.DataColumn("熟料", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column熟料);
                this.column熟料名称 = new global::System.Data.DataColumn("熟料名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column熟料名称);
                this.column生料 = new global::System.Data.DataColumn("生料", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column生料);
                this.column生料名称 = new global::System.Data.DataColumn("生料名称", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.column生料名称);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.column日期,
                                this.column高炉}, true));
                this.column日期.AllowDBNull = false;
                this.column高炉.AllowDBNull = false;
                this.column熟料名称.MaxLength = 20;
                this.column生料名称.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗Row New原料消耗Row() {
                return ((原料消耗Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new 原料消耗Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(原料消耗Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.原料消耗RowChanged != null)) {
                    this.原料消耗RowChanged(this, new 原料消耗RowChangeEvent(((原料消耗Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.原料消耗RowChanging != null)) {
                    this.原料消耗RowChanging(this, new 原料消耗RowChangeEvent(((原料消耗Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.原料消耗RowDeleted != null)) {
                    this.原料消耗RowDeleted(this, new 原料消耗RowChangeEvent(((原料消耗Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.原料消耗RowDeleting != null)) {
                    this.原料消耗RowDeleting(this, new 原料消耗RowChangeEvent(((原料消耗Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Remove原料消耗Row(原料消耗Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                原料消耗数据集 ds = new 原料消耗数据集();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "原料消耗DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class 原料消耗Row : global::System.Data.DataRow {
            
            private 原料消耗DataTable table原料消耗;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal 原料消耗Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.table原料消耗 = ((原料消耗DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime 日期 {
                get {
                    return ((global::System.DateTime)(this[this.table原料消耗.日期Column]));
                }
                set {
                    this[this.table原料消耗.日期Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 高炉 {
                get {
                    return ((decimal)(this[this.table原料消耗.高炉Column]));
                }
                set {
                    this[this.table原料消耗.高炉Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 机烧矿 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.机烧矿Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“机烧矿”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.机烧矿Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 竖球 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.竖球Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“竖球”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.竖球Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 本溪矿 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.本溪矿Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“本溪矿”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.本溪矿Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 工艺称 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.工艺称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“工艺称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.工艺称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 焦丁 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.焦丁Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“焦丁”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.焦丁Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 煤粉 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.煤粉Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“煤粉”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.煤粉Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 富氧量 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.富氧量Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“富氧量”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.富氧量Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 自产湿焦 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.自产湿焦Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“自产湿焦”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.自产湿焦Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 落地湿焦 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.落地湿焦Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“落地湿焦”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.落地湿焦Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 熟料 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.熟料Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“熟料”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.熟料Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 熟料名称 {
                get {
                    try {
                        return ((string)(this[this.table原料消耗.熟料名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“熟料名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.熟料名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal 生料 {
                get {
                    try {
                        return ((decimal)(this[this.table原料消耗.生料Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“生料”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.生料Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string 生料名称 {
                get {
                    try {
                        return ((string)(this[this.table原料消耗.生料名称Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“原料消耗”中列“生料名称”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.table原料消耗.生料名称Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is机烧矿Null() {
                return this.IsNull(this.table原料消耗.机烧矿Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set机烧矿Null() {
                this[this.table原料消耗.机烧矿Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is竖球Null() {
                return this.IsNull(this.table原料消耗.竖球Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set竖球Null() {
                this[this.table原料消耗.竖球Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is本溪矿Null() {
                return this.IsNull(this.table原料消耗.本溪矿Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set本溪矿Null() {
                this[this.table原料消耗.本溪矿Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is工艺称Null() {
                return this.IsNull(this.table原料消耗.工艺称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set工艺称Null() {
                this[this.table原料消耗.工艺称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is焦丁Null() {
                return this.IsNull(this.table原料消耗.焦丁Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set焦丁Null() {
                this[this.table原料消耗.焦丁Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is煤粉Null() {
                return this.IsNull(this.table原料消耗.煤粉Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set煤粉Null() {
                this[this.table原料消耗.煤粉Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is富氧量Null() {
                return this.IsNull(this.table原料消耗.富氧量Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set富氧量Null() {
                this[this.table原料消耗.富氧量Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is自产湿焦Null() {
                return this.IsNull(this.table原料消耗.自产湿焦Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set自产湿焦Null() {
                this[this.table原料消耗.自产湿焦Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is落地湿焦Null() {
                return this.IsNull(this.table原料消耗.落地湿焦Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set落地湿焦Null() {
                this[this.table原料消耗.落地湿焦Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is熟料Null() {
                return this.IsNull(this.table原料消耗.熟料Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set熟料Null() {
                this[this.table原料消耗.熟料Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is熟料名称Null() {
                return this.IsNull(this.table原料消耗.熟料名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set熟料名称Null() {
                this[this.table原料消耗.熟料名称Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is生料Null() {
                return this.IsNull(this.table原料消耗.生料Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set生料Null() {
                this[this.table原料消耗.生料Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is生料名称Null() {
                return this.IsNull(this.table原料消耗.生料名称Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Set生料名称Null() {
                this[this.table原料消耗.生料名称Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class 原料消耗RowChangeEvent : global::System.EventArgs {
            
            private 原料消耗Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗RowChangeEvent(原料消耗Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public 原料消耗Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LTZN.原料消耗.原料消耗数据集TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class 原料消耗TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 原料消耗TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "原料消耗";
            tableMapping.ColumnMappings.Add("日期", "日期");
            tableMapping.ColumnMappings.Add("高炉", "高炉");
            tableMapping.ColumnMappings.Add("机烧矿", "机烧矿");
            tableMapping.ColumnMappings.Add("竖球", "竖球");
            tableMapping.ColumnMappings.Add("本溪矿", "本溪矿");
            tableMapping.ColumnMappings.Add("工艺称", "工艺称");
            tableMapping.ColumnMappings.Add("焦丁", "焦丁");
            tableMapping.ColumnMappings.Add("煤粉", "煤粉");
            tableMapping.ColumnMappings.Add("富氧量", "富氧量");
            tableMapping.ColumnMappings.Add("自产湿焦", "自产湿焦");
            tableMapping.ColumnMappings.Add("落地湿焦", "落地湿焦");
            tableMapping.ColumnMappings.Add("熟料", "熟料");
            tableMapping.ColumnMappings.Add("熟料名称", "熟料名称");
            tableMapping.ColumnMappings.Add("生料", "生料");
            tableMapping.ColumnMappings.Add("生料名称", "生料名称");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""LF"".""原料消耗"" WHERE ((""日期"" = :Original_日期) AND (""高炉"" = :Original_高炉) AND ((:IsNull_机烧矿 = 1 AND ""机烧矿"" IS NULL) OR (""机烧矿"" = :Original_机烧矿)) AND ((:IsNull_竖球 = 1 AND ""竖球"" IS NULL) OR (""竖球"" = :Original_竖球)) AND ((:IsNull_本溪矿 = 1 AND ""本溪矿"" IS NULL) OR (""本溪矿"" = :Original_本溪矿)) AND ((:IsNull_工艺称 = 1 AND ""工艺称"" IS NULL) OR (""工艺称"" = :Original_工艺称)) AND ((:IsNull_焦丁 = 1 AND ""焦丁"" IS NULL) OR (""焦丁"" = :Original_焦丁)) AND ((:IsNull_煤粉 = 1 AND ""煤粉"" IS NULL) OR (""煤粉"" = :Original_煤粉)) AND ((:IsNull_富氧量 = 1 AND ""富氧量"" IS NULL) OR (""富氧量"" = :Original_富氧量)) AND ((:IsNull_自产湿焦 = 1 AND ""自产湿焦"" IS NULL) OR (""自产湿焦"" = :Original_自产湿焦)) AND ((:IsNull_落地湿焦 = 1 AND ""落地湿焦"" IS NULL) OR (""落地湿焦"" = :Original_落地湿焦)) AND ((:IsNull_熟料 = 1 AND ""熟料"" IS NULL) OR (""熟料"" = :Original_熟料)) AND ((:IsNull_熟料名称 = 1 AND ""熟料名称"" IS NULL) OR (""熟料名称"" = :Original_熟料名称)) AND ((:IsNull_生料 = 1 AND ""生料"" IS NULL) OR (""生料"" = :Original_生料)) AND ((:IsNull_生料名称 = 1 AND ""生料名称"" IS NULL) OR (""生料名称"" = :Original_生料名称)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_日期", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "日期", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_高炉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高炉", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_机烧矿", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "机烧矿", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_机烧矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "机烧矿", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_竖球", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "竖球", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_竖球", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "竖球", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_本溪矿", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "本溪矿", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_本溪矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "本溪矿", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_工艺称", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "工艺称", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_工艺称", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "工艺称", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_焦丁", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "焦丁", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_焦丁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "焦丁", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_煤粉", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "煤粉", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_煤粉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "煤粉", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_富氧量", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_富氧量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_自产湿焦", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "自产湿焦", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_自产湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "自产湿焦", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_落地湿焦", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "落地湿焦", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_落地湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "落地湿焦", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_熟料", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "熟料", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_熟料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "熟料", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_熟料名称", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "熟料名称", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_熟料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "熟料名称", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_生料", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "生料", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_生料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "生料", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_生料名称", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "生料名称", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_生料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "生料名称", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"LF\".\"原料消耗\" (\"日期\", \"高炉\", \"机烧矿\", \"竖球\", \"本溪矿\", \"工艺称\", \"焦丁\", \"煤粉\", \"富氧量\"" +
                ", \"自产湿焦\", \"落地湿焦\", \"熟料\", \"熟料名称\", \"生料\", \"生料名称\") VALUES (:日期, :高炉, :机烧矿, :竖球, :本溪矿," +
                " :工艺称, :焦丁, :煤粉, :富氧量, :自产湿焦, :落地湿焦, :熟料, :熟料名称, :生料, :生料名称)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("日期", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "日期", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高炉", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("机烧矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "机烧矿", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("竖球", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "竖球", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("本溪矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "本溪矿", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("工艺称", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "工艺称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("焦丁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "焦丁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("煤粉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "煤粉", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("富氧量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("自产湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "自产湿焦", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("落地湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "落地湿焦", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("熟料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "熟料", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("熟料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "熟料名称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("生料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "生料", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("生料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "生料名称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""LF"".""原料消耗"" SET ""日期"" = :日期, ""高炉"" = :高炉, ""机烧矿"" = :机烧矿, ""竖球"" = :竖球, ""本溪矿"" = :本溪矿, ""工艺称"" = :工艺称, ""焦丁"" = :焦丁, ""煤粉"" = :煤粉, ""富氧量"" = :富氧量, ""自产湿焦"" = :自产湿焦, ""落地湿焦"" = :落地湿焦, ""熟料"" = :熟料, ""熟料名称"" = :熟料名称, ""生料"" = :生料, ""生料名称"" = :生料名称 WHERE ((""日期"" = :Original_日期) AND (""高炉"" = :Original_高炉) AND ((:IsNull_机烧矿 = 1 AND ""机烧矿"" IS NULL) OR (""机烧矿"" = :Original_机烧矿)) AND ((:IsNull_竖球 = 1 AND ""竖球"" IS NULL) OR (""竖球"" = :Original_竖球)) AND ((:IsNull_本溪矿 = 1 AND ""本溪矿"" IS NULL) OR (""本溪矿"" = :Original_本溪矿)) AND ((:IsNull_工艺称 = 1 AND ""工艺称"" IS NULL) OR (""工艺称"" = :Original_工艺称)) AND ((:IsNull_焦丁 = 1 AND ""焦丁"" IS NULL) OR (""焦丁"" = :Original_焦丁)) AND ((:IsNull_煤粉 = 1 AND ""煤粉"" IS NULL) OR (""煤粉"" = :Original_煤粉)) AND ((:IsNull_富氧量 = 1 AND ""富氧量"" IS NULL) OR (""富氧量"" = :Original_富氧量)) AND ((:IsNull_自产湿焦 = 1 AND ""自产湿焦"" IS NULL) OR (""自产湿焦"" = :Original_自产湿焦)) AND ((:IsNull_落地湿焦 = 1 AND ""落地湿焦"" IS NULL) OR (""落地湿焦"" = :Original_落地湿焦)) AND ((:IsNull_熟料 = 1 AND ""熟料"" IS NULL) OR (""熟料"" = :Original_熟料)) AND ((:IsNull_熟料名称 = 1 AND ""熟料名称"" IS NULL) OR (""熟料名称"" = :Original_熟料名称)) AND ((:IsNull_生料 = 1 AND ""生料"" IS NULL) OR (""生料"" = :Original_生料)) AND ((:IsNull_生料名称 = 1 AND ""生料名称"" IS NULL) OR (""生料名称"" = :Original_生料名称)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("日期", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "日期", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高炉", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("机烧矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "机烧矿", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("竖球", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "竖球", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("本溪矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "本溪矿", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("工艺称", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "工艺称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("焦丁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "焦丁", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("煤粉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "煤粉", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("富氧量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("自产湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "自产湿焦", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("落地湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "落地湿焦", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("熟料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "熟料", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("熟料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "熟料名称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("生料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "生料", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("生料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "生料名称", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_日期", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "日期", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_高炉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "高炉", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_机烧矿", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "机烧矿", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_机烧矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "机烧矿", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_竖球", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "竖球", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_竖球", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "竖球", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_本溪矿", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "本溪矿", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_本溪矿", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "本溪矿", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_工艺称", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "工艺称", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_工艺称", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "工艺称", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_焦丁", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "焦丁", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_焦丁", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "焦丁", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_煤粉", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "煤粉", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_煤粉", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "煤粉", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_富氧量", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_富氧量", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "富氧量", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_自产湿焦", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "自产湿焦", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_自产湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "自产湿焦", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_落地湿焦", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "落地湿焦", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_落地湿焦", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "落地湿焦", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_熟料", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "熟料", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_熟料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "熟料", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_熟料名称", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "熟料名称", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_熟料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "熟料名称", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_生料", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "生料", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_生料", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "生料", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_生料名称", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "生料名称", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_生料名称", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "生料名称", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT 日期, 高炉, 机烧矿, 竖球, 本溪矿, 工艺称, 焦丁, 煤粉, 富氧量, 自产湿焦, 落地湿焦, 熟料, 熟料名称, 生料, 生料名称 FRO" +
                "M LF.原料消耗\r\nwhere 日期=:日期 and 高炉=:高炉";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("日期", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "日期", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("高炉", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "高炉", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int FillByPk(原料消耗数据集.原料消耗DataTable dataTable, System.DateTime 日期, decimal 高炉) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(日期));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(高炉));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 原料消耗数据集.原料消耗DataTable GetDataByPk(System.DateTime 日期, decimal 高炉) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(日期));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(高炉));
            原料消耗数据集.原料消耗DataTable dataTable = new 原料消耗数据集.原料消耗DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(原料消耗数据集.原料消耗DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(原料消耗数据集 dataSet) {
            return this.Adapter.Update(dataSet, "原料消耗");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
}

#pragma warning restore 1591