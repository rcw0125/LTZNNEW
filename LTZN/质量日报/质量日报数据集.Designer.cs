//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5420
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LTZN.质量日报 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("质量日报数据集")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 质量日报数据集 : global::System.Data.DataSet {
        
        private DDYLDataTable tableDDYL;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 质量日报数据集() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected 质量日报数据集(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DDYL"] != null)) {
                    base.Tables.Add(new DDYLDataTable(ds.Tables["DDYL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DDYLDataTable DDYL {
            get {
                return this.tableDDYL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            质量日报数据集 cln = ((质量日报数据集)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DDYL"] != null)) {
                    base.Tables.Add(new DDYLDataTable(ds.Tables["DDYL"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableDDYL = ((DDYLDataTable)(base.Tables["DDYL"]));
            if ((initTable == true)) {
                if ((this.tableDDYL != null)) {
                    this.tableDDYL.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "质量日报数据集";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/质量日报数据集.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDDYL = new DDYLDataTable();
            base.Tables.Add(this.tableDDYL);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDDYL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            质量日报数据集 ds = new 质量日报数据集();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void DDYLRowChangeEventHandler(object sender, DDYLRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DDYLDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMC;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnCANG;
            
            private global::System.Data.DataColumn columnTFE;
            
            private global::System.Data.DataColumn columnSIO;
            
            private global::System.Data.DataColumn columnCAO;
            
            private global::System.Data.DataColumn columnFEO;
            
            private global::System.Data.DataColumn columnMGO;
            
            private global::System.Data.DataColumn columnS;
            
            private global::System.Data.DataColumn columnALO;
            
            private global::System.Data.DataColumn columnJD;
            
            private global::System.Data.DataColumn columnQD;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnTIO2;
            
            private global::System.Data.DataColumn columnP;
            
            private global::System.Data.DataColumn columnMNO;
            
            private global::System.Data.DataColumn columnCR;
            
            private global::System.Data.DataColumn columnPB;
            
            private global::System.Data.DataColumn columnZN;
            
            private global::System.Data.DataColumn columnJJS;
            
            private global::System.Data.DataColumn columnV2O5;
            
            private global::System.Data.DataColumn columnCU;
            
            private global::System.Data.DataColumn columnMO;
            
            private global::System.Data.DataColumn columnNI;
            
            private global::System.Data.DataColumn columnSN;
            
            private global::System.Data.DataColumn columnSB;
            
            private global::System.Data.DataColumn columnAS1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLDataTable() {
                this.TableName = "DDYL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DDYLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DDYLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MCColumn {
                get {
                    return this.columnMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CANGColumn {
                get {
                    return this.columnCANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TFEColumn {
                get {
                    return this.columnTFE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIOColumn {
                get {
                    return this.columnSIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CAOColumn {
                get {
                    return this.columnCAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEOColumn {
                get {
                    return this.columnFEO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MGOColumn {
                get {
                    return this.columnMGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SColumn {
                get {
                    return this.columnS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALOColumn {
                get {
                    return this.columnALO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JDColumn {
                get {
                    return this.columnJD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QDColumn {
                get {
                    return this.columnQD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIO2Column {
                get {
                    return this.columnTIO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PColumn {
                get {
                    return this.columnP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNOColumn {
                get {
                    return this.columnMNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRColumn {
                get {
                    return this.columnCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBColumn {
                get {
                    return this.columnPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZNColumn {
                get {
                    return this.columnZN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JJSColumn {
                get {
                    return this.columnJJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn V2O5Column {
                get {
                    return this.columnV2O5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUColumn {
                get {
                    return this.columnCU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOColumn {
                get {
                    return this.columnMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NIColumn {
                get {
                    return this.columnNI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNColumn {
                get {
                    return this.columnSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBColumn {
                get {
                    return this.columnSB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AS1Column {
                get {
                    return this.columnAS1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLRow this[int index] {
                get {
                    return ((DDYLRow)(this.Rows[index]));
                }
            }
            
            public event DDYLRowChangeEventHandler DDYLRowChanging;
            
            public event DDYLRowChangeEventHandler DDYLRowChanged;
            
            public event DDYLRowChangeEventHandler DDYLRowDeleting;
            
            public event DDYLRowChangeEventHandler DDYLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDDYLRow(DDYLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLRow AddDDYLRow(
                        string MC, 
                        System.DateTime SJ, 
                        string CANG, 
                        decimal TFE, 
                        decimal SIO, 
                        decimal CAO, 
                        decimal FEO, 
                        decimal MGO, 
                        decimal S, 
                        decimal ALO, 
                        decimal JD, 
                        decimal QD, 
                        string BZ, 
                        decimal TIO2, 
                        decimal P, 
                        decimal MNO, 
                        decimal CR, 
                        decimal PB, 
                        decimal ZN, 
                        decimal JJS, 
                        decimal V2O5, 
                        decimal CU, 
                        decimal MO, 
                        decimal NI, 
                        decimal SN, 
                        decimal SB, 
                        decimal AS1) {
                DDYLRow rowDDYLRow = ((DDYLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MC,
                        SJ,
                        CANG,
                        TFE,
                        SIO,
                        CAO,
                        FEO,
                        MGO,
                        S,
                        ALO,
                        JD,
                        QD,
                        BZ,
                        TIO2,
                        P,
                        MNO,
                        CR,
                        PB,
                        ZN,
                        JJS,
                        V2O5,
                        CU,
                        MO,
                        NI,
                        SN,
                        SB,
                        AS1};
                rowDDYLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDDYLRow);
                return rowDDYLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLRow FindByMCSJCANG(string MC, System.DateTime SJ, string CANG) {
                return ((DDYLRow)(this.Rows.Find(new object[] {
                            MC,
                            SJ,
                            CANG})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DDYLDataTable cln = ((DDYLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DDYLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMC = base.Columns["MC"];
                this.columnSJ = base.Columns["SJ"];
                this.columnCANG = base.Columns["CANG"];
                this.columnTFE = base.Columns["TFE"];
                this.columnSIO = base.Columns["SIO"];
                this.columnCAO = base.Columns["CAO"];
                this.columnFEO = base.Columns["FEO"];
                this.columnMGO = base.Columns["MGO"];
                this.columnS = base.Columns["S"];
                this.columnALO = base.Columns["ALO"];
                this.columnJD = base.Columns["JD"];
                this.columnQD = base.Columns["QD"];
                this.columnBZ = base.Columns["BZ"];
                this.columnTIO2 = base.Columns["TIO2"];
                this.columnP = base.Columns["P"];
                this.columnMNO = base.Columns["MNO"];
                this.columnCR = base.Columns["CR"];
                this.columnPB = base.Columns["PB"];
                this.columnZN = base.Columns["ZN"];
                this.columnJJS = base.Columns["JJS"];
                this.columnV2O5 = base.Columns["V2O5"];
                this.columnCU = base.Columns["CU"];
                this.columnMO = base.Columns["MO"];
                this.columnNI = base.Columns["NI"];
                this.columnSN = base.Columns["SN"];
                this.columnSB = base.Columns["SB"];
                this.columnAS1 = base.Columns["AS1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMC = new global::System.Data.DataColumn("MC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnCANG = new global::System.Data.DataColumn("CANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANG);
                this.columnTFE = new global::System.Data.DataColumn("TFE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTFE);
                this.columnSIO = new global::System.Data.DataColumn("SIO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIO);
                this.columnCAO = new global::System.Data.DataColumn("CAO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAO);
                this.columnFEO = new global::System.Data.DataColumn("FEO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEO);
                this.columnMGO = new global::System.Data.DataColumn("MGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMGO);
                this.columnS = new global::System.Data.DataColumn("S", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS);
                this.columnALO = new global::System.Data.DataColumn("ALO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALO);
                this.columnJD = new global::System.Data.DataColumn("JD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJD);
                this.columnQD = new global::System.Data.DataColumn("QD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQD);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnTIO2 = new global::System.Data.DataColumn("TIO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIO2);
                this.columnP = new global::System.Data.DataColumn("P", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP);
                this.columnMNO = new global::System.Data.DataColumn("MNO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMNO);
                this.columnCR = new global::System.Data.DataColumn("CR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR);
                this.columnPB = new global::System.Data.DataColumn("PB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB);
                this.columnZN = new global::System.Data.DataColumn("ZN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZN);
                this.columnJJS = new global::System.Data.DataColumn("JJS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJJS);
                this.columnV2O5 = new global::System.Data.DataColumn("V2O5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV2O5);
                this.columnCU = new global::System.Data.DataColumn("CU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCU);
                this.columnMO = new global::System.Data.DataColumn("MO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMO);
                this.columnNI = new global::System.Data.DataColumn("NI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNI);
                this.columnSN = new global::System.Data.DataColumn("SN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSN);
                this.columnSB = new global::System.Data.DataColumn("SB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSB);
                this.columnAS1 = new global::System.Data.DataColumn("AS1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAS1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMC,
                                this.columnSJ,
                                this.columnCANG}, true));
                this.columnMC.AllowDBNull = false;
                this.columnMC.MaxLength = 20;
                this.columnSJ.AllowDBNull = false;
                this.columnCANG.AllowDBNull = false;
                this.columnCANG.MaxLength = 20;
                this.columnBZ.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLRow NewDDYLRow() {
                return ((DDYLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DDYLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DDYLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DDYLRowChanged != null)) {
                    this.DDYLRowChanged(this, new DDYLRowChangeEvent(((DDYLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DDYLRowChanging != null)) {
                    this.DDYLRowChanging(this, new DDYLRowChangeEvent(((DDYLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DDYLRowDeleted != null)) {
                    this.DDYLRowDeleted(this, new DDYLRowChangeEvent(((DDYLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DDYLRowDeleting != null)) {
                    this.DDYLRowDeleting(this, new DDYLRowChangeEvent(((DDYLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDDYLRow(DDYLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                质量日报数据集 ds = new 质量日报数据集();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DDYLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DDYLRow : global::System.Data.DataRow {
            
            private DDYLDataTable tableDDYL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DDYLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDDYL = ((DDYLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC {
                get {
                    return ((string)(this[this.tableDDYL.MCColumn]));
                }
                set {
                    this[this.tableDDYL.MCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    return ((global::System.DateTime)(this[this.tableDDYL.SJColumn]));
                }
                set {
                    this[this.tableDDYL.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CANG {
                get {
                    return ((string)(this[this.tableDDYL.CANGColumn]));
                }
                set {
                    this[this.tableDDYL.CANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TFE {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.TFEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“TFE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.TFEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SIO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.SIOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“SIO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.SIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CAO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.CAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“CAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.CAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.FEOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“FEO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.FEOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MGO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.MGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“MGO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.MGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal S {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“S”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ALO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.ALOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“ALO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.ALOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JD {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.JDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“JD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.JDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QD {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.QDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“QD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.QDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableDDYL.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“BZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TIO2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.TIO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“TIO2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.TIO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal P {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“P”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MNO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.MNOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“MNO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.MNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CR {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.CRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“CR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.CRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PB {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.PBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“PB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.PBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZN {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.ZNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“ZN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.ZNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JJS {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.JJSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“JJS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.JJSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal V2O5 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.V2O5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“V2O5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.V2O5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal CU {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.CUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“CU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.CUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.MOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“MO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.MOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal NI {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.NIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“NI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.NIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SN {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.SNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“SN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.SNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SB {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.SBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“SB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.SBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal AS1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDYL.AS1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDYL”中列“AS1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDYL.AS1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTFENull() {
                return this.IsNull(this.tableDDYL.TFEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTFENull() {
                this[this.tableDDYL.TFEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSIONull() {
                return this.IsNull(this.tableDDYL.SIOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSIONull() {
                this[this.tableDDYL.SIOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCAONull() {
                return this.IsNull(this.tableDDYL.CAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCAONull() {
                this[this.tableDDYL.CAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEONull() {
                return this.IsNull(this.tableDDYL.FEOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEONull() {
                this[this.tableDDYL.FEOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMGONull() {
                return this.IsNull(this.tableDDYL.MGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMGONull() {
                this[this.tableDDYL.MGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNull() {
                return this.IsNull(this.tableDDYL.SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNull() {
                this[this.tableDDYL.SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALONull() {
                return this.IsNull(this.tableDDYL.ALOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALONull() {
                this[this.tableDDYL.ALOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJDNull() {
                return this.IsNull(this.tableDDYL.JDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJDNull() {
                this[this.tableDDYL.JDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQDNull() {
                return this.IsNull(this.tableDDYL.QDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQDNull() {
                this[this.tableDDYL.QDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableDDYL.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableDDYL.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTIO2Null() {
                return this.IsNull(this.tableDDYL.TIO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTIO2Null() {
                this[this.tableDDYL.TIO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNull() {
                return this.IsNull(this.tableDDYL.PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNull() {
                this[this.tableDDYL.PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNONull() {
                return this.IsNull(this.tableDDYL.MNOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNONull() {
                this[this.tableDDYL.MNOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCRNull() {
                return this.IsNull(this.tableDDYL.CRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCRNull() {
                this[this.tableDDYL.CRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBNull() {
                return this.IsNull(this.tableDDYL.PBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBNull() {
                this[this.tableDDYL.PBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZNNull() {
                return this.IsNull(this.tableDDYL.ZNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZNNull() {
                this[this.tableDDYL.ZNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJJSNull() {
                return this.IsNull(this.tableDDYL.JJSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJJSNull() {
                this[this.tableDDYL.JJSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsV2O5Null() {
                return this.IsNull(this.tableDDYL.V2O5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetV2O5Null() {
                this[this.tableDDYL.V2O5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUNull() {
                return this.IsNull(this.tableDDYL.CUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUNull() {
                this[this.tableDDYL.CUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONull() {
                return this.IsNull(this.tableDDYL.MOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONull() {
                this[this.tableDDYL.MOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNINull() {
                return this.IsNull(this.tableDDYL.NIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNINull() {
                this[this.tableDDYL.NIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNNull() {
                return this.IsNull(this.tableDDYL.SNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNNull() {
                this[this.tableDDYL.SNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBNull() {
                return this.IsNull(this.tableDDYL.SBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBNull() {
                this[this.tableDDYL.SBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAS1Null() {
                return this.IsNull(this.tableDDYL.AS1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAS1Null() {
                this[this.tableDDYL.AS1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DDYLRowChangeEvent : global::System.EventArgs {
            
            private DDYLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLRowChangeEvent(DDYLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDYLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LTZN.质量日报.质量日报数据集TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DDYLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleTransaction _transaction;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DDYLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DDYL";
            tableMapping.ColumnMappings.Add("MC", "MC");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("CANG", "CANG");
            tableMapping.ColumnMappings.Add("TFE", "TFE");
            tableMapping.ColumnMappings.Add("SIO", "SIO");
            tableMapping.ColumnMappings.Add("CAO", "CAO");
            tableMapping.ColumnMappings.Add("FEO", "FEO");
            tableMapping.ColumnMappings.Add("MGO", "MGO");
            tableMapping.ColumnMappings.Add("S", "S");
            tableMapping.ColumnMappings.Add("ALO", "ALO");
            tableMapping.ColumnMappings.Add("JD", "JD");
            tableMapping.ColumnMappings.Add("QD", "QD");
            tableMapping.ColumnMappings.Add("BZ", "BZ");
            tableMapping.ColumnMappings.Add("TIO2", "TIO2");
            tableMapping.ColumnMappings.Add("P", "P");
            tableMapping.ColumnMappings.Add("MNO", "MNO");
            tableMapping.ColumnMappings.Add("CR", "CR");
            tableMapping.ColumnMappings.Add("PB", "PB");
            tableMapping.ColumnMappings.Add("ZN", "ZN");
            tableMapping.ColumnMappings.Add("JJS", "JJS");
            tableMapping.ColumnMappings.Add("V2O5", "V2O5");
            tableMapping.ColumnMappings.Add("CU", "CU");
            tableMapping.ColumnMappings.Add("MO", "MO");
            tableMapping.ColumnMappings.Add("NI", "NI");
            tableMapping.ColumnMappings.Add("SN", "SN");
            tableMapping.ColumnMappings.Add("SB", "SB");
            tableMapping.ColumnMappings.Add("AS1", "AS1");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"DDYL\" WHERE ((\"MC\" = :Original_MC) AND (\"SJ\" = :Original_SJ) AND (\"C" +
                "ANG\" = :Original_CANG) AND ((:IsNull_TFE = 1 AND \"TFE\" IS NULL) OR (\"TFE\" = :Ori" +
                "ginal_TFE)) AND ((:IsNull_SIO = 1 AND \"SIO\" IS NULL) OR (\"SIO\" = :Original_SIO))" +
                " AND ((:IsNull_CAO = 1 AND \"CAO\" IS NULL) OR (\"CAO\" = :Original_CAO)) AND ((:IsN" +
                "ull_FEO = 1 AND \"FEO\" IS NULL) OR (\"FEO\" = :Original_FEO)) AND ((:IsNull_MGO = 1" +
                " AND \"MGO\" IS NULL) OR (\"MGO\" = :Original_MGO)) AND ((:IsNull_S = 1 AND \"S\" IS N" +
                "ULL) OR (\"S\" = :Original_S)) AND ((:IsNull_ALO = 1 AND \"ALO\" IS NULL) OR (\"ALO\" " +
                "= :Original_ALO)) AND ((:IsNull_JD = 1 AND \"JD\" IS NULL) OR (\"JD\" = :Original_JD" +
                ")) AND ((:IsNull_QD = 1 AND \"QD\" IS NULL) OR (\"QD\" = :Original_QD)) AND ((:IsNul" +
                "l_BZ = 1 AND \"BZ\" IS NULL) OR (\"BZ\" = :Original_BZ)) AND ((:IsNull_TIO2 = 1 AND " +
                "\"TIO2\" IS NULL) OR (\"TIO2\" = :Original_TIO2)) AND ((:IsNull_P = 1 AND \"P\" IS NUL" +
                "L) OR (\"P\" = :Original_P)) AND ((:IsNull_MNO = 1 AND \"MNO\" IS NULL) OR (\"MNO\" = " +
                ":Original_MNO)) AND ((:IsNull_CR = 1 AND \"CR\" IS NULL) OR (\"CR\" = :Original_CR))" +
                " AND ((:IsNull_PB = 1 AND \"PB\" IS NULL) OR (\"PB\" = :Original_PB)) AND ((:IsNull_" +
                "ZN = 1 AND \"ZN\" IS NULL) OR (\"ZN\" = :Original_ZN)) AND ((:IsNull_JJS = 1 AND \"JJ" +
                "S\" IS NULL) OR (\"JJS\" = :Original_JJS)) AND ((:IsNull_V2O5 = 1 AND \"V2O5\" IS NUL" +
                "L) OR (\"V2O5\" = :Original_V2O5)) AND ((:IsNull_CU = 1 AND \"CU\" IS NULL) OR (\"CU\"" +
                " = :Original_CU)) AND ((:IsNull_MO = 1 AND \"MO\" IS NULL) OR (\"MO\" = :Original_MO" +
                ")) AND ((:IsNull_NI = 1 AND \"NI\" IS NULL) OR (\"NI\" = :Original_NI)) AND ((:IsNul" +
                "l_SN = 1 AND \"SN\" IS NULL) OR (\"SN\" = :Original_SN)) AND ((:IsNull_SB = 1 AND \"S" +
                "B\" IS NULL) OR (\"SB\" = :Original_SB)) AND ((:IsNull_AS1 = 1 AND \"AS1\" IS NULL) O" +
                "R (\"AS1\" = :Original_AS1)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TFE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TFE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TFE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TFE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SIO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SIO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SIO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SIO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CAO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CAO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CAO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MGO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MGO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MGO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_S", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "S", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_S", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "S", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ALO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ALO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ALO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JD", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_QD", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "QD", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_QD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "QD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BZ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BZ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TIO2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TIO2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TIO2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_P", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "P", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MNO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MNO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CR", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JJS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JJS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JJS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JJS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_V2O5", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "V2O5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_V2O5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "V2O5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_AS1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "AS1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_AS1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AS1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""DDYL"" (""MC"", ""SJ"", ""CANG"", ""TFE"", ""SIO"", ""CAO"", ""FEO"", ""MGO"", ""S"", ""ALO"", ""JD"", ""QD"", ""BZ"", ""TIO2"", ""P"", ""MNO"", ""CR"", ""PB"", ""ZN"", ""JJS"", ""V2O5"", ""CU"", ""MO"", ""NI"", ""SN"", ""SB"", ""AS1"") VALUES (:MC, :SJ, :CANG, :TFE, :SIO, :CAO, :FEO, :MGO, :S, :ALO, :JD, :QD, :BZ, :TIO2, :P, :MNO, :CR, :PB, :ZN, :JJS, :V2O5, :CU, :MO, :NI, :SN, :SB, :AS1)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TFE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TFE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SIO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SIO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MGO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("S", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ALO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "QD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MNO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JJS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JJS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("V2O5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "V2O5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AS1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AS1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"DDYL\" SET \"MC\" = :MC, \"SJ\" = :SJ, \"CANG\" = :CANG, \"TFE\" = :TFE, \"SIO\" = :" +
                "SIO, \"CAO\" = :CAO, \"FEO\" = :FEO, \"MGO\" = :MGO, \"S\" = :S, \"ALO\" = :ALO, \"JD\" = :J" +
                "D, \"QD\" = :QD, \"BZ\" = :BZ, \"TIO2\" = :TIO2, \"P\" = :P, \"MNO\" = :MNO, \"CR\" = :CR, \"" +
                "PB\" = :PB, \"ZN\" = :ZN, \"JJS\" = :JJS, \"V2O5\" = :V2O5, \"CU\" = :CU, \"MO\" = :MO, \"NI" +
                "\" = :NI, \"SN\" = :SN, \"SB\" = :SB, \"AS1\" = :AS1 WHERE ((\"MC\" = :Original_MC) AND (" +
                "\"SJ\" = :Original_SJ) AND (\"CANG\" = :Original_CANG) AND ((:IsNull_TFE = 1 AND \"TF" +
                "E\" IS NULL) OR (\"TFE\" = :Original_TFE)) AND ((:IsNull_SIO = 1 AND \"SIO\" IS NULL)" +
                " OR (\"SIO\" = :Original_SIO)) AND ((:IsNull_CAO = 1 AND \"CAO\" IS NULL) OR (\"CAO\" " +
                "= :Original_CAO)) AND ((:IsNull_FEO = 1 AND \"FEO\" IS NULL) OR (\"FEO\" = :Original" +
                "_FEO)) AND ((:IsNull_MGO = 1 AND \"MGO\" IS NULL) OR (\"MGO\" = :Original_MGO)) AND " +
                "((:IsNull_S = 1 AND \"S\" IS NULL) OR (\"S\" = :Original_S)) AND ((:IsNull_ALO = 1 A" +
                "ND \"ALO\" IS NULL) OR (\"ALO\" = :Original_ALO)) AND ((:IsNull_JD = 1 AND \"JD\" IS N" +
                "ULL) OR (\"JD\" = :Original_JD)) AND ((:IsNull_QD = 1 AND \"QD\" IS NULL) OR (\"QD\" =" +
                " :Original_QD)) AND ((:IsNull_BZ = 1 AND \"BZ\" IS NULL) OR (\"BZ\" = :Original_BZ))" +
                " AND ((:IsNull_TIO2 = 1 AND \"TIO2\" IS NULL) OR (\"TIO2\" = :Original_TIO2)) AND ((" +
                ":IsNull_P = 1 AND \"P\" IS NULL) OR (\"P\" = :Original_P)) AND ((:IsNull_MNO = 1 AND" +
                " \"MNO\" IS NULL) OR (\"MNO\" = :Original_MNO)) AND ((:IsNull_CR = 1 AND \"CR\" IS NUL" +
                "L) OR (\"CR\" = :Original_CR)) AND ((:IsNull_PB = 1 AND \"PB\" IS NULL) OR (\"PB\" = :" +
                "Original_PB)) AND ((:IsNull_ZN = 1 AND \"ZN\" IS NULL) OR (\"ZN\" = :Original_ZN)) A" +
                "ND ((:IsNull_JJS = 1 AND \"JJS\" IS NULL) OR (\"JJS\" = :Original_JJS)) AND ((:IsNul" +
                "l_V2O5 = 1 AND \"V2O5\" IS NULL) OR (\"V2O5\" = :Original_V2O5)) AND ((:IsNull_CU = " +
                "1 AND \"CU\" IS NULL) OR (\"CU\" = :Original_CU)) AND ((:IsNull_MO = 1 AND \"MO\" IS N" +
                "ULL) OR (\"MO\" = :Original_MO)) AND ((:IsNull_NI = 1 AND \"NI\" IS NULL) OR (\"NI\" =" +
                " :Original_NI)) AND ((:IsNull_SN = 1 AND \"SN\" IS NULL) OR (\"SN\" = :Original_SN))" +
                " AND ((:IsNull_SB = 1 AND \"SB\" IS NULL) OR (\"SB\" = :Original_SB)) AND ((:IsNull_" +
                "AS1 = 1 AND \"AS1\" IS NULL) OR (\"AS1\" = :Original_AS1)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TFE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TFE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SIO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SIO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MGO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("S", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "S", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ALO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "QD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("P", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MNO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MNO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JJS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JJS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("V2O5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "V2O5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("NI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("AS1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AS1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "CANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TFE", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TFE", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TFE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TFE", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SIO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SIO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SIO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SIO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CAO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CAO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CAO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MGO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MGO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MGO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_S", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "S", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_S", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "S", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ALO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ALO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ALO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JD", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_QD", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "QD", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_QD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "QD", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_BZ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BZ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TIO2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TIO2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TIO2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_P", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "P", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_P", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "P", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MNO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MNO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MNO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MNO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CR", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JJS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JJS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JJS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JJS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_V2O5", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "V2O5", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_V2O5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "V2O5", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "CU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_MO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "MO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_MO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_NI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "NI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_NI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "NI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_AS1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "AS1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_AS1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "AS1", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT   MC, SJ, CANG, TFE, SIO, CAO, FEO, MGO, S, ALO, JD, QD, BZ, TIO2, P, MNO," +
                " CR, PB, ZN, JJS, V2O5, CU, MO, NI, SN, SB, \r\n                AS1\r\nFROM      DDY" +
                "L\r\nWHERE   (trunc(SJ) = :RQ)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(质量日报数据集.DDYLDataTable dataTable, System.DateTime RQ) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 质量日报数据集.DDYLDataTable GetData(System.DateTime RQ) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            质量日报数据集.DDYLDataTable dataTable = new 质量日报数据集.DDYLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(质量日报数据集.DDYLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(质量日报数据集 dataSet) {
            return this.Adapter.Update(dataSet, "DDYL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_MC, 
                    System.DateTime Original_SJ, 
                    string Original_CANG, 
                    global::System.Nullable<decimal> Original_TFE, 
                    global::System.Nullable<decimal> Original_SIO, 
                    global::System.Nullable<decimal> Original_CAO, 
                    global::System.Nullable<decimal> Original_FEO, 
                    global::System.Nullable<decimal> Original_MGO, 
                    global::System.Nullable<decimal> Original_S, 
                    global::System.Nullable<decimal> Original_ALO, 
                    global::System.Nullable<decimal> Original_JD, 
                    global::System.Nullable<decimal> Original_QD, 
                    string Original_BZ, 
                    global::System.Nullable<decimal> Original_TIO2, 
                    global::System.Nullable<decimal> Original_P, 
                    global::System.Nullable<decimal> Original_MNO, 
                    global::System.Nullable<decimal> Original_CR, 
                    global::System.Nullable<decimal> Original_PB, 
                    global::System.Nullable<decimal> Original_ZN, 
                    global::System.Nullable<decimal> Original_JJS, 
                    global::System.Nullable<decimal> Original_V2O5, 
                    global::System.Nullable<decimal> Original_CU, 
                    global::System.Nullable<decimal> Original_MO, 
                    global::System.Nullable<decimal> Original_NI, 
                    global::System.Nullable<decimal> Original_SN, 
                    global::System.Nullable<decimal> Original_SB, 
                    global::System.Nullable<decimal> Original_AS1) {
            if ((Original_MC == null)) {
                throw new global::System.ArgumentNullException("Original_MC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_MC));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_SJ));
            if ((Original_CANG == null)) {
                throw new global::System.ArgumentNullException("Original_CANG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CANG));
            }
            if ((Original_TFE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_TFE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_SIO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_SIO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CAO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_CAO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_FEO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_FEO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_MGO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_MGO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_S.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_S.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ALO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_ALO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_JD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_JD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_QD.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_QD.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_BZ == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_BZ));
            }
            if ((Original_TIO2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_TIO2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_P.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_P.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MNO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_MNO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_CR.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((decimal)(Original_CR.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_PB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((decimal)(Original_PB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_ZN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((decimal)(Original_ZN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_JJS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((decimal)(Original_JJS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_V2O5.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_V2O5.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_CU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_CU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_MO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_MO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_NI.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_NI.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_SN.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_SN.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_SB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((decimal)(Original_SB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_AS1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_AS1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string MC, 
                    System.DateTime SJ, 
                    string CANG, 
                    global::System.Nullable<decimal> TFE, 
                    global::System.Nullable<decimal> SIO, 
                    global::System.Nullable<decimal> CAO, 
                    global::System.Nullable<decimal> FEO, 
                    global::System.Nullable<decimal> MGO, 
                    global::System.Nullable<decimal> S, 
                    global::System.Nullable<decimal> ALO, 
                    global::System.Nullable<decimal> JD, 
                    global::System.Nullable<decimal> QD, 
                    string BZ, 
                    global::System.Nullable<decimal> TIO2, 
                    global::System.Nullable<decimal> P, 
                    global::System.Nullable<decimal> MNO, 
                    global::System.Nullable<decimal> CR, 
                    global::System.Nullable<decimal> PB, 
                    global::System.Nullable<decimal> ZN, 
                    global::System.Nullable<decimal> JJS, 
                    global::System.Nullable<decimal> V2O5, 
                    global::System.Nullable<decimal> CU, 
                    global::System.Nullable<decimal> MO, 
                    global::System.Nullable<decimal> NI, 
                    global::System.Nullable<decimal> SN, 
                    global::System.Nullable<decimal> SB, 
                    global::System.Nullable<decimal> AS1) {
            if ((MC == null)) {
                throw new global::System.ArgumentNullException("MC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(MC));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SJ));
            if ((CANG == null)) {
                throw new global::System.ArgumentNullException("CANG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CANG));
            }
            if ((TFE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(TFE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SIO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SIO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CAO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CAO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((FEO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(FEO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MGO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(MGO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((S.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(S.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ALO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ALO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((JD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(JD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(QD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(BZ));
            }
            if ((TIO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(TIO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((P.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(P.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MNO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(MNO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((CR.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(CR.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(PB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ZN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(ZN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((JJS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(JJS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((V2O5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(V2O5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((CU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(CU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(MO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(NI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(SN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(SB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((AS1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(AS1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string MC, 
                    System.DateTime SJ, 
                    string CANG, 
                    global::System.Nullable<decimal> TFE, 
                    global::System.Nullable<decimal> SIO, 
                    global::System.Nullable<decimal> CAO, 
                    global::System.Nullable<decimal> FEO, 
                    global::System.Nullable<decimal> MGO, 
                    global::System.Nullable<decimal> S, 
                    global::System.Nullable<decimal> ALO, 
                    global::System.Nullable<decimal> JD, 
                    global::System.Nullable<decimal> QD, 
                    string BZ, 
                    global::System.Nullable<decimal> TIO2, 
                    global::System.Nullable<decimal> P, 
                    global::System.Nullable<decimal> MNO, 
                    global::System.Nullable<decimal> CR, 
                    global::System.Nullable<decimal> PB, 
                    global::System.Nullable<decimal> ZN, 
                    global::System.Nullable<decimal> JJS, 
                    global::System.Nullable<decimal> V2O5, 
                    global::System.Nullable<decimal> CU, 
                    global::System.Nullable<decimal> MO, 
                    global::System.Nullable<decimal> NI, 
                    global::System.Nullable<decimal> SN, 
                    global::System.Nullable<decimal> SB, 
                    global::System.Nullable<decimal> AS1, 
                    string Original_MC, 
                    System.DateTime Original_SJ, 
                    string Original_CANG, 
                    global::System.Nullable<decimal> Original_TFE, 
                    global::System.Nullable<decimal> Original_SIO, 
                    global::System.Nullable<decimal> Original_CAO, 
                    global::System.Nullable<decimal> Original_FEO, 
                    global::System.Nullable<decimal> Original_MGO, 
                    global::System.Nullable<decimal> Original_S, 
                    global::System.Nullable<decimal> Original_ALO, 
                    global::System.Nullable<decimal> Original_JD, 
                    global::System.Nullable<decimal> Original_QD, 
                    string Original_BZ, 
                    global::System.Nullable<decimal> Original_TIO2, 
                    global::System.Nullable<decimal> Original_P, 
                    global::System.Nullable<decimal> Original_MNO, 
                    global::System.Nullable<decimal> Original_CR, 
                    global::System.Nullable<decimal> Original_PB, 
                    global::System.Nullable<decimal> Original_ZN, 
                    global::System.Nullable<decimal> Original_JJS, 
                    global::System.Nullable<decimal> Original_V2O5, 
                    global::System.Nullable<decimal> Original_CU, 
                    global::System.Nullable<decimal> Original_MO, 
                    global::System.Nullable<decimal> Original_NI, 
                    global::System.Nullable<decimal> Original_SN, 
                    global::System.Nullable<decimal> Original_SB, 
                    global::System.Nullable<decimal> Original_AS1) {
            if ((MC == null)) {
                throw new global::System.ArgumentNullException("MC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(MC));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SJ));
            if ((CANG == null)) {
                throw new global::System.ArgumentNullException("CANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CANG));
            }
            if ((TFE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(TFE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((SIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((FEO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(FEO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((MGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(MGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ALO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(ALO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((JD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(JD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((QD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(QD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(BZ));
            }
            if ((TIO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(TIO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((MNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(MNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((CR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(CR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((PB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(PB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ZN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(ZN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((JJS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(JJS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((V2O5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(V2O5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((CU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(CU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((MO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(MO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((NI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(NI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((SN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(SN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((SB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(SB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((AS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(AS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MC == null)) {
                throw new global::System.ArgumentNullException("Original_MC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_MC));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_SJ));
            if ((Original_CANG == null)) {
                throw new global::System.ArgumentNullException("Original_CANG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_CANG));
            }
            if ((Original_TFE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_TFE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_SIO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_SIO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_CAO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_CAO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_FEO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_FEO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_MGO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_MGO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_S.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_S.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_ALO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_ALO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_JD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_JD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_QD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_QD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_BZ == null)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((string)(Original_BZ));
            }
            if ((Original_TIO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(Original_TIO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_P.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Original_P.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_MNO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_MNO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_CR.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((decimal)(Original_CR.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_PB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((decimal)(Original_PB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_ZN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((decimal)(Original_ZN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_JJS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_JJS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_V2O5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((decimal)(Original_V2O5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_CU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((decimal)(Original_CU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_MO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((decimal)(Original_MO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_NI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((decimal)(Original_NI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_SN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((decimal)(Original_SN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_SB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(Original_SB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_AS1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((decimal)(Original_AS1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> TFE, 
                    global::System.Nullable<decimal> SIO, 
                    global::System.Nullable<decimal> CAO, 
                    global::System.Nullable<decimal> FEO, 
                    global::System.Nullable<decimal> MGO, 
                    global::System.Nullable<decimal> S, 
                    global::System.Nullable<decimal> ALO, 
                    global::System.Nullable<decimal> JD, 
                    global::System.Nullable<decimal> QD, 
                    string BZ, 
                    global::System.Nullable<decimal> TIO2, 
                    global::System.Nullable<decimal> P, 
                    global::System.Nullable<decimal> MNO, 
                    global::System.Nullable<decimal> CR, 
                    global::System.Nullable<decimal> PB, 
                    global::System.Nullable<decimal> ZN, 
                    global::System.Nullable<decimal> JJS, 
                    global::System.Nullable<decimal> V2O5, 
                    global::System.Nullable<decimal> CU, 
                    global::System.Nullable<decimal> MO, 
                    global::System.Nullable<decimal> NI, 
                    global::System.Nullable<decimal> SN, 
                    global::System.Nullable<decimal> SB, 
                    global::System.Nullable<decimal> AS1, 
                    string Original_MC, 
                    System.DateTime Original_SJ, 
                    string Original_CANG, 
                    global::System.Nullable<decimal> Original_TFE, 
                    global::System.Nullable<decimal> Original_SIO, 
                    global::System.Nullable<decimal> Original_CAO, 
                    global::System.Nullable<decimal> Original_FEO, 
                    global::System.Nullable<decimal> Original_MGO, 
                    global::System.Nullable<decimal> Original_S, 
                    global::System.Nullable<decimal> Original_ALO, 
                    global::System.Nullable<decimal> Original_JD, 
                    global::System.Nullable<decimal> Original_QD, 
                    string Original_BZ, 
                    global::System.Nullable<decimal> Original_TIO2, 
                    global::System.Nullable<decimal> Original_P, 
                    global::System.Nullable<decimal> Original_MNO, 
                    global::System.Nullable<decimal> Original_CR, 
                    global::System.Nullable<decimal> Original_PB, 
                    global::System.Nullable<decimal> Original_ZN, 
                    global::System.Nullable<decimal> Original_JJS, 
                    global::System.Nullable<decimal> Original_V2O5, 
                    global::System.Nullable<decimal> Original_CU, 
                    global::System.Nullable<decimal> Original_MO, 
                    global::System.Nullable<decimal> Original_NI, 
                    global::System.Nullable<decimal> Original_SN, 
                    global::System.Nullable<decimal> Original_SB, 
                    global::System.Nullable<decimal> Original_AS1) {
            return this.Update(Original_MC, Original_SJ, Original_CANG, TFE, SIO, CAO, FEO, MGO, S, ALO, JD, QD, BZ, TIO2, P, MNO, CR, PB, ZN, JJS, V2O5, CU, MO, NI, SN, SB, AS1, Original_MC, Original_SJ, Original_CANG, Original_TFE, Original_SIO, Original_CAO, Original_FEO, Original_MGO, Original_S, Original_ALO, Original_JD, Original_QD, Original_BZ, Original_TIO2, Original_P, Original_MNO, Original_CR, Original_PB, Original_ZN, Original_JJS, Original_V2O5, Original_CU, Original_MO, Original_NI, Original_SN, Original_SB, Original_AS1);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DDYLTableAdapter _dDYLTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public DDYLTableAdapter DDYLTableAdapter {
            get {
                return this._dDYLTableAdapter;
            }
            set {
                this._dDYLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dDYLTableAdapter != null) 
                            && (this._dDYLTableAdapter.Connection != null))) {
                    return this._dDYLTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dDYLTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(质量日报数据集 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dDYLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DDYL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dDYLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(质量日报数据集 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dDYLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DDYL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dDYLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(质量日报数据集 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dDYLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DDYL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dDYLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(质量日报数据集 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dDYLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dDYLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dDYLTableAdapter != null)) {
                    revertConnections.Add(this._dDYLTableAdapter, this._dDYLTableAdapter.Connection);
                    this._dDYLTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(workConnection));
                    this._dDYLTableAdapter.Transaction = ((global::System.Data.OracleClient.OracleTransaction)(workTransaction));
                    if (this._dDYLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dDYLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dDYLTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dDYLTableAdapter != null)) {
                    this._dDYLTableAdapter.Connection = ((global::System.Data.OracleClient.OracleConnection)(revertConnections[this._dDYLTableAdapter]));
                    this._dDYLTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591