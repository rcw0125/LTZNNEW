//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5420
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace LTZN.生产日报 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("生产数据")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class 生产数据 : global::System.Data.DataSet {
        
        private RBBDDataTable tableRBBD;
        
        private RBFKDataTable tableRBFK;
        
        private RBLIAOXIANBBDataTable tableRBLIAOXIANBB;
        
        private RBLQDataTable tableRBLQ;
        
        private RBXFDataTable tableRBXF;
        
        private RBXIAOHAODataTable tableRBXIAOHAO;
        
        private RBZLBDDataTable tableRBZLBD;
        
        private RBLIAOXIANZBDataTable tableRBLIAOXIANZB;
        
        private RBLIAOXIANYBDataTable tableRBLIAOXIANYB;
        
        private DDLUCIDataTable tableDDLUCI;
        
        private RBJSDataTable tableRBJS;
        
        private LT_LIAODataTable tableLT_LIAO;
        
        private SHIJIGUIDataTable tableSHIJIGUI;
        
        private ALARMDataTable tableALARM;
        
        private RBGZDataTable tableRBGZ;
        
        private RBCAOZUO1DataTable tableRBCAOZUO1;
        
        private CQA_IRON_ELEMENT_TEXTDataTable tableCQA_IRON_ELEMENT_TEXT;
        
        private RBCAOZUODataTable tableRBCAOZUO;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public 生产数据() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected 生产数据(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["RBBD"] != null)) {
                    base.Tables.Add(new RBBDDataTable(ds.Tables["RBBD"]));
                }
                if ((ds.Tables["RBFK"] != null)) {
                    base.Tables.Add(new RBFKDataTable(ds.Tables["RBFK"]));
                }
                if ((ds.Tables["RBLIAOXIANBB"] != null)) {
                    base.Tables.Add(new RBLIAOXIANBBDataTable(ds.Tables["RBLIAOXIANBB"]));
                }
                if ((ds.Tables["RBLQ"] != null)) {
                    base.Tables.Add(new RBLQDataTable(ds.Tables["RBLQ"]));
                }
                if ((ds.Tables["RBXF"] != null)) {
                    base.Tables.Add(new RBXFDataTable(ds.Tables["RBXF"]));
                }
                if ((ds.Tables["RBXIAOHAO"] != null)) {
                    base.Tables.Add(new RBXIAOHAODataTable(ds.Tables["RBXIAOHAO"]));
                }
                if ((ds.Tables["RBZLBD"] != null)) {
                    base.Tables.Add(new RBZLBDDataTable(ds.Tables["RBZLBD"]));
                }
                if ((ds.Tables["RBLIAOXIANZB"] != null)) {
                    base.Tables.Add(new RBLIAOXIANZBDataTable(ds.Tables["RBLIAOXIANZB"]));
                }
                if ((ds.Tables["RBLIAOXIANYB"] != null)) {
                    base.Tables.Add(new RBLIAOXIANYBDataTable(ds.Tables["RBLIAOXIANYB"]));
                }
                if ((ds.Tables["DDLUCI"] != null)) {
                    base.Tables.Add(new DDLUCIDataTable(ds.Tables["DDLUCI"]));
                }
                if ((ds.Tables["RBJS"] != null)) {
                    base.Tables.Add(new RBJSDataTable(ds.Tables["RBJS"]));
                }
                if ((ds.Tables["LT_LIAO"] != null)) {
                    base.Tables.Add(new LT_LIAODataTable(ds.Tables["LT_LIAO"]));
                }
                if ((ds.Tables["SHIJIGUI"] != null)) {
                    base.Tables.Add(new SHIJIGUIDataTable(ds.Tables["SHIJIGUI"]));
                }
                if ((ds.Tables["ALARM"] != null)) {
                    base.Tables.Add(new ALARMDataTable(ds.Tables["ALARM"]));
                }
                if ((ds.Tables["RBGZ"] != null)) {
                    base.Tables.Add(new RBGZDataTable(ds.Tables["RBGZ"]));
                }
                if ((ds.Tables["RBCAOZUO1"] != null)) {
                    base.Tables.Add(new RBCAOZUO1DataTable(ds.Tables["RBCAOZUO1"]));
                }
                if ((ds.Tables["CQA_IRON_ELEMENT_TEXT"] != null)) {
                    base.Tables.Add(new CQA_IRON_ELEMENT_TEXTDataTable(ds.Tables["CQA_IRON_ELEMENT_TEXT"]));
                }
                if ((ds.Tables["RBCAOZUO"] != null)) {
                    base.Tables.Add(new RBCAOZUODataTable(ds.Tables["RBCAOZUO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBBDDataTable RBBD {
            get {
                return this.tableRBBD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBFKDataTable RBFK {
            get {
                return this.tableRBFK;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBLIAOXIANBBDataTable RBLIAOXIANBB {
            get {
                return this.tableRBLIAOXIANBB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBLQDataTable RBLQ {
            get {
                return this.tableRBLQ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBXFDataTable RBXF {
            get {
                return this.tableRBXF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBXIAOHAODataTable RBXIAOHAO {
            get {
                return this.tableRBXIAOHAO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBZLBDDataTable RBZLBD {
            get {
                return this.tableRBZLBD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBLIAOXIANZBDataTable RBLIAOXIANZB {
            get {
                return this.tableRBLIAOXIANZB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBLIAOXIANYBDataTable RBLIAOXIANYB {
            get {
                return this.tableRBLIAOXIANYB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DDLUCIDataTable DDLUCI {
            get {
                return this.tableDDLUCI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBJSDataTable RBJS {
            get {
                return this.tableRBJS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LT_LIAODataTable LT_LIAO {
            get {
                return this.tableLT_LIAO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SHIJIGUIDataTable SHIJIGUI {
            get {
                return this.tableSHIJIGUI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ALARMDataTable ALARM {
            get {
                return this.tableALARM;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBGZDataTable RBGZ {
            get {
                return this.tableRBGZ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBCAOZUO1DataTable RBCAOZUO1 {
            get {
                return this.tableRBCAOZUO1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CQA_IRON_ELEMENT_TEXTDataTable CQA_IRON_ELEMENT_TEXT {
            get {
                return this.tableCQA_IRON_ELEMENT_TEXT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public RBCAOZUODataTable RBCAOZUO {
            get {
                return this.tableRBCAOZUO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            生产数据 cln = ((生产数据)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["RBBD"] != null)) {
                    base.Tables.Add(new RBBDDataTable(ds.Tables["RBBD"]));
                }
                if ((ds.Tables["RBFK"] != null)) {
                    base.Tables.Add(new RBFKDataTable(ds.Tables["RBFK"]));
                }
                if ((ds.Tables["RBLIAOXIANBB"] != null)) {
                    base.Tables.Add(new RBLIAOXIANBBDataTable(ds.Tables["RBLIAOXIANBB"]));
                }
                if ((ds.Tables["RBLQ"] != null)) {
                    base.Tables.Add(new RBLQDataTable(ds.Tables["RBLQ"]));
                }
                if ((ds.Tables["RBXF"] != null)) {
                    base.Tables.Add(new RBXFDataTable(ds.Tables["RBXF"]));
                }
                if ((ds.Tables["RBXIAOHAO"] != null)) {
                    base.Tables.Add(new RBXIAOHAODataTable(ds.Tables["RBXIAOHAO"]));
                }
                if ((ds.Tables["RBZLBD"] != null)) {
                    base.Tables.Add(new RBZLBDDataTable(ds.Tables["RBZLBD"]));
                }
                if ((ds.Tables["RBLIAOXIANZB"] != null)) {
                    base.Tables.Add(new RBLIAOXIANZBDataTable(ds.Tables["RBLIAOXIANZB"]));
                }
                if ((ds.Tables["RBLIAOXIANYB"] != null)) {
                    base.Tables.Add(new RBLIAOXIANYBDataTable(ds.Tables["RBLIAOXIANYB"]));
                }
                if ((ds.Tables["DDLUCI"] != null)) {
                    base.Tables.Add(new DDLUCIDataTable(ds.Tables["DDLUCI"]));
                }
                if ((ds.Tables["RBJS"] != null)) {
                    base.Tables.Add(new RBJSDataTable(ds.Tables["RBJS"]));
                }
                if ((ds.Tables["LT_LIAO"] != null)) {
                    base.Tables.Add(new LT_LIAODataTable(ds.Tables["LT_LIAO"]));
                }
                if ((ds.Tables["SHIJIGUI"] != null)) {
                    base.Tables.Add(new SHIJIGUIDataTable(ds.Tables["SHIJIGUI"]));
                }
                if ((ds.Tables["ALARM"] != null)) {
                    base.Tables.Add(new ALARMDataTable(ds.Tables["ALARM"]));
                }
                if ((ds.Tables["RBGZ"] != null)) {
                    base.Tables.Add(new RBGZDataTable(ds.Tables["RBGZ"]));
                }
                if ((ds.Tables["RBCAOZUO1"] != null)) {
                    base.Tables.Add(new RBCAOZUO1DataTable(ds.Tables["RBCAOZUO1"]));
                }
                if ((ds.Tables["CQA_IRON_ELEMENT_TEXT"] != null)) {
                    base.Tables.Add(new CQA_IRON_ELEMENT_TEXTDataTable(ds.Tables["CQA_IRON_ELEMENT_TEXT"]));
                }
                if ((ds.Tables["RBCAOZUO"] != null)) {
                    base.Tables.Add(new RBCAOZUODataTable(ds.Tables["RBCAOZUO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableRBBD = ((RBBDDataTable)(base.Tables["RBBD"]));
            if ((initTable == true)) {
                if ((this.tableRBBD != null)) {
                    this.tableRBBD.InitVars();
                }
            }
            this.tableRBFK = ((RBFKDataTable)(base.Tables["RBFK"]));
            if ((initTable == true)) {
                if ((this.tableRBFK != null)) {
                    this.tableRBFK.InitVars();
                }
            }
            this.tableRBLIAOXIANBB = ((RBLIAOXIANBBDataTable)(base.Tables["RBLIAOXIANBB"]));
            if ((initTable == true)) {
                if ((this.tableRBLIAOXIANBB != null)) {
                    this.tableRBLIAOXIANBB.InitVars();
                }
            }
            this.tableRBLQ = ((RBLQDataTable)(base.Tables["RBLQ"]));
            if ((initTable == true)) {
                if ((this.tableRBLQ != null)) {
                    this.tableRBLQ.InitVars();
                }
            }
            this.tableRBXF = ((RBXFDataTable)(base.Tables["RBXF"]));
            if ((initTable == true)) {
                if ((this.tableRBXF != null)) {
                    this.tableRBXF.InitVars();
                }
            }
            this.tableRBXIAOHAO = ((RBXIAOHAODataTable)(base.Tables["RBXIAOHAO"]));
            if ((initTable == true)) {
                if ((this.tableRBXIAOHAO != null)) {
                    this.tableRBXIAOHAO.InitVars();
                }
            }
            this.tableRBZLBD = ((RBZLBDDataTable)(base.Tables["RBZLBD"]));
            if ((initTable == true)) {
                if ((this.tableRBZLBD != null)) {
                    this.tableRBZLBD.InitVars();
                }
            }
            this.tableRBLIAOXIANZB = ((RBLIAOXIANZBDataTable)(base.Tables["RBLIAOXIANZB"]));
            if ((initTable == true)) {
                if ((this.tableRBLIAOXIANZB != null)) {
                    this.tableRBLIAOXIANZB.InitVars();
                }
            }
            this.tableRBLIAOXIANYB = ((RBLIAOXIANYBDataTable)(base.Tables["RBLIAOXIANYB"]));
            if ((initTable == true)) {
                if ((this.tableRBLIAOXIANYB != null)) {
                    this.tableRBLIAOXIANYB.InitVars();
                }
            }
            this.tableDDLUCI = ((DDLUCIDataTable)(base.Tables["DDLUCI"]));
            if ((initTable == true)) {
                if ((this.tableDDLUCI != null)) {
                    this.tableDDLUCI.InitVars();
                }
            }
            this.tableRBJS = ((RBJSDataTable)(base.Tables["RBJS"]));
            if ((initTable == true)) {
                if ((this.tableRBJS != null)) {
                    this.tableRBJS.InitVars();
                }
            }
            this.tableLT_LIAO = ((LT_LIAODataTable)(base.Tables["LT_LIAO"]));
            if ((initTable == true)) {
                if ((this.tableLT_LIAO != null)) {
                    this.tableLT_LIAO.InitVars();
                }
            }
            this.tableSHIJIGUI = ((SHIJIGUIDataTable)(base.Tables["SHIJIGUI"]));
            if ((initTable == true)) {
                if ((this.tableSHIJIGUI != null)) {
                    this.tableSHIJIGUI.InitVars();
                }
            }
            this.tableALARM = ((ALARMDataTable)(base.Tables["ALARM"]));
            if ((initTable == true)) {
                if ((this.tableALARM != null)) {
                    this.tableALARM.InitVars();
                }
            }
            this.tableRBGZ = ((RBGZDataTable)(base.Tables["RBGZ"]));
            if ((initTable == true)) {
                if ((this.tableRBGZ != null)) {
                    this.tableRBGZ.InitVars();
                }
            }
            this.tableRBCAOZUO1 = ((RBCAOZUO1DataTable)(base.Tables["RBCAOZUO1"]));
            if ((initTable == true)) {
                if ((this.tableRBCAOZUO1 != null)) {
                    this.tableRBCAOZUO1.InitVars();
                }
            }
            this.tableCQA_IRON_ELEMENT_TEXT = ((CQA_IRON_ELEMENT_TEXTDataTable)(base.Tables["CQA_IRON_ELEMENT_TEXT"]));
            if ((initTable == true)) {
                if ((this.tableCQA_IRON_ELEMENT_TEXT != null)) {
                    this.tableCQA_IRON_ELEMENT_TEXT.InitVars();
                }
            }
            this.tableRBCAOZUO = ((RBCAOZUODataTable)(base.Tables["RBCAOZUO"]));
            if ((initTable == true)) {
                if ((this.tableRBCAOZUO != null)) {
                    this.tableRBCAOZUO.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "生产数据";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/生产数据.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableRBBD = new RBBDDataTable();
            base.Tables.Add(this.tableRBBD);
            this.tableRBFK = new RBFKDataTable();
            base.Tables.Add(this.tableRBFK);
            this.tableRBLIAOXIANBB = new RBLIAOXIANBBDataTable();
            base.Tables.Add(this.tableRBLIAOXIANBB);
            this.tableRBLQ = new RBLQDataTable();
            base.Tables.Add(this.tableRBLQ);
            this.tableRBXF = new RBXFDataTable();
            base.Tables.Add(this.tableRBXF);
            this.tableRBXIAOHAO = new RBXIAOHAODataTable();
            base.Tables.Add(this.tableRBXIAOHAO);
            this.tableRBZLBD = new RBZLBDDataTable();
            base.Tables.Add(this.tableRBZLBD);
            this.tableRBLIAOXIANZB = new RBLIAOXIANZBDataTable();
            base.Tables.Add(this.tableRBLIAOXIANZB);
            this.tableRBLIAOXIANYB = new RBLIAOXIANYBDataTable();
            base.Tables.Add(this.tableRBLIAOXIANYB);
            this.tableDDLUCI = new DDLUCIDataTable();
            base.Tables.Add(this.tableDDLUCI);
            this.tableRBJS = new RBJSDataTable();
            base.Tables.Add(this.tableRBJS);
            this.tableLT_LIAO = new LT_LIAODataTable();
            base.Tables.Add(this.tableLT_LIAO);
            this.tableSHIJIGUI = new SHIJIGUIDataTable();
            base.Tables.Add(this.tableSHIJIGUI);
            this.tableALARM = new ALARMDataTable();
            base.Tables.Add(this.tableALARM);
            this.tableRBGZ = new RBGZDataTable();
            base.Tables.Add(this.tableRBGZ);
            this.tableRBCAOZUO1 = new RBCAOZUO1DataTable();
            base.Tables.Add(this.tableRBCAOZUO1);
            this.tableCQA_IRON_ELEMENT_TEXT = new CQA_IRON_ELEMENT_TEXTDataTable();
            base.Tables.Add(this.tableCQA_IRON_ELEMENT_TEXT);
            this.tableRBCAOZUO = new RBCAOZUODataTable();
            base.Tables.Add(this.tableRBCAOZUO);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBBD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBFK() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBLIAOXIANBB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBLQ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBXF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBXIAOHAO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBZLBD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBLIAOXIANZB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBLIAOXIANYB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeDDLUCI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBJS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLT_LIAO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSHIJIGUI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeALARM() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBGZ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBCAOZUO1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCQA_IRON_ELEMENT_TEXT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeRBCAOZUO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            生产数据 ds = new 生产数据();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void RBBDRowChangeEventHandler(object sender, RBBDRowChangeEvent e);
        
        public delegate void RBFKRowChangeEventHandler(object sender, RBFKRowChangeEvent e);
        
        public delegate void RBLIAOXIANBBRowChangeEventHandler(object sender, RBLIAOXIANBBRowChangeEvent e);
        
        public delegate void RBLQRowChangeEventHandler(object sender, RBLQRowChangeEvent e);
        
        public delegate void RBXFRowChangeEventHandler(object sender, RBXFRowChangeEvent e);
        
        public delegate void RBXIAOHAORowChangeEventHandler(object sender, RBXIAOHAORowChangeEvent e);
        
        public delegate void RBZLBDRowChangeEventHandler(object sender, RBZLBDRowChangeEvent e);
        
        public delegate void RBLIAOXIANZBRowChangeEventHandler(object sender, RBLIAOXIANZBRowChangeEvent e);
        
        public delegate void RBLIAOXIANYBRowChangeEventHandler(object sender, RBLIAOXIANYBRowChangeEvent e);
        
        public delegate void DDLUCIRowChangeEventHandler(object sender, DDLUCIRowChangeEvent e);
        
        public delegate void RBJSRowChangeEventHandler(object sender, RBJSRowChangeEvent e);
        
        public delegate void LT_LIAORowChangeEventHandler(object sender, LT_LIAORowChangeEvent e);
        
        public delegate void SHIJIGUIRowChangeEventHandler(object sender, SHIJIGUIRowChangeEvent e);
        
        public delegate void ALARMRowChangeEventHandler(object sender, ALARMRowChangeEvent e);
        
        public delegate void RBGZRowChangeEventHandler(object sender, RBGZRowChangeEvent e);
        
        public delegate void RBCAOZUO1RowChangeEventHandler(object sender, RBCAOZUO1RowChangeEvent e);
        
        public delegate void CQA_IRON_ELEMENT_TEXTRowChangeEventHandler(object sender, CQA_IRON_ELEMENT_TEXTRowChangeEvent e);
        
        public delegate void RBCAOZUORowChangeEventHandler(object sender, RBCAOZUORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBBDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnBD;
            
            private global::System.Data.DataColumn columnSL;
            
            private global::System.Data.DataColumn columnDW;
            
            private global::System.Data.DataColumn columnFL;
            
            private global::System.Data.DataColumn columnSM;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnRID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBBDDataTable() {
                this.TableName = "RBBD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBBDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBBDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BDColumn {
                get {
                    return this.columnBD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SLColumn {
                get {
                    return this.columnSL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DWColumn {
                get {
                    return this.columnDW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLColumn {
                get {
                    return this.columnFL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SMColumn {
                get {
                    return this.columnSM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBBDRow this[int index] {
                get {
                    return ((RBBDRow)(this.Rows[index]));
                }
            }
            
            public event RBBDRowChangeEventHandler RBBDRowChanging;
            
            public event RBBDRowChangeEventHandler RBBDRowChanged;
            
            public event RBBDRowChangeEventHandler RBBDRowDeleting;
            
            public event RBBDRowChangeEventHandler RBBDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBBDRow(RBBDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBBDRow AddRBBDRow(string BD, decimal SL, string DW, string FL, string SM, decimal GAOLU, System.DateTime RQ, System.DateTime SJ, string RID) {
                RBBDRow rowRBBDRow = ((RBBDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        BD,
                        SL,
                        DW,
                        FL,
                        SM,
                        GAOLU,
                        RQ,
                        SJ,
                        RID};
                rowRBBDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBBDRow);
                return rowRBBDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBBDDataTable cln = ((RBBDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBBDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnBD = base.Columns["BD"];
                this.columnSL = base.Columns["SL"];
                this.columnDW = base.Columns["DW"];
                this.columnFL = base.Columns["FL"];
                this.columnSM = base.Columns["SM"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnRQ = base.Columns["RQ"];
                this.columnSJ = base.Columns["SJ"];
                this.columnRID = base.Columns["RID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnBD = new global::System.Data.DataColumn("BD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBD);
                this.columnSL = new global::System.Data.DataColumn("SL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL);
                this.columnDW = new global::System.Data.DataColumn("DW", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDW);
                this.columnFL = new global::System.Data.DataColumn("FL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFL);
                this.columnSM = new global::System.Data.DataColumn("SM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSM);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnBD.MaxLength = 20;
                this.columnDW.MaxLength = 20;
                this.columnFL.MaxLength = 200;
                this.columnSM.MaxLength = 2000;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBBDRow NewRBBDRow() {
                return ((RBBDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBBDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBBDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBBDRowChanged != null)) {
                    this.RBBDRowChanged(this, new RBBDRowChangeEvent(((RBBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBBDRowChanging != null)) {
                    this.RBBDRowChanging(this, new RBBDRowChangeEvent(((RBBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBBDRowDeleted != null)) {
                    this.RBBDRowDeleted(this, new RBBDRowChangeEvent(((RBBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBBDRowDeleting != null)) {
                    this.RBBDRowDeleting(this, new RBBDRowChangeEvent(((RBBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBBDRow(RBBDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBBDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBFKDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnYX;
            
            private global::System.Data.DataColumn columnGCY;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnRQ;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnFK1;
            
            private global::System.Data.DataColumn columnFK2;
            
            private global::System.Data.DataColumn columnFK3;
            
            private global::System.Data.DataColumn columnFK4;
            
            private global::System.Data.DataColumn columnFK5;
            
            private global::System.Data.DataColumn columnFK6;
            
            private global::System.Data.DataColumn columnFK7;
            
            private global::System.Data.DataColumn columnFK8;
            
            private global::System.Data.DataColumn columnFK9;
            
            private global::System.Data.DataColumn columnFK10;
            
            private global::System.Data.DataColumn columnFK11;
            
            private global::System.Data.DataColumn columnFK12;
            
            private global::System.Data.DataColumn columnFK13;
            
            private global::System.Data.DataColumn columnFK14;
            
            private global::System.Data.DataColumn columnFK15;
            
            private global::System.Data.DataColumn columnFK16;
            
            private global::System.Data.DataColumn columnFK17;
            
            private global::System.Data.DataColumn columnFK18;
            
            private global::System.Data.DataColumn columnFK19;
            
            private global::System.Data.DataColumn columnFK20;
            
            private global::System.Data.DataColumn columnRID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBFKDataTable() {
                this.TableName = "RBFK";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBFKDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBFKDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YXColumn {
                get {
                    return this.columnYX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GCYColumn {
                get {
                    return this.columnGCY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RQColumn {
                get {
                    return this.columnRQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK1Column {
                get {
                    return this.columnFK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK2Column {
                get {
                    return this.columnFK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK3Column {
                get {
                    return this.columnFK3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK4Column {
                get {
                    return this.columnFK4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK5Column {
                get {
                    return this.columnFK5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK6Column {
                get {
                    return this.columnFK6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK7Column {
                get {
                    return this.columnFK7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK8Column {
                get {
                    return this.columnFK8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK9Column {
                get {
                    return this.columnFK9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK10Column {
                get {
                    return this.columnFK10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK11Column {
                get {
                    return this.columnFK11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK12Column {
                get {
                    return this.columnFK12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK13Column {
                get {
                    return this.columnFK13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK14Column {
                get {
                    return this.columnFK14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK15Column {
                get {
                    return this.columnFK15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK16Column {
                get {
                    return this.columnFK16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK17Column {
                get {
                    return this.columnFK17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK18Column {
                get {
                    return this.columnFK18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK19Column {
                get {
                    return this.columnFK19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FK20Column {
                get {
                    return this.columnFK20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBFKRow this[int index] {
                get {
                    return ((RBFKRow)(this.Rows[index]));
                }
            }
            
            public event RBFKRowChangeEventHandler RBFKRowChanging;
            
            public event RBFKRowChangeEventHandler RBFKRowChanged;
            
            public event RBFKRowChangeEventHandler RBFKRowDeleting;
            
            public event RBFKRowChangeEventHandler RBFKRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBFKRow(RBFKRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBFKRow AddRBFKRow(
                        decimal GAOLU, 
                        string YX, 
                        string GCY, 
                        string BZ, 
                        System.DateTime RQ, 
                        System.DateTime SJ, 
                        string FK1, 
                        string FK2, 
                        string FK3, 
                        string FK4, 
                        string FK5, 
                        string FK6, 
                        string FK7, 
                        string FK8, 
                        string FK9, 
                        string FK10, 
                        string FK11, 
                        string FK12, 
                        string FK13, 
                        string FK14, 
                        string FK15, 
                        string FK16, 
                        string FK17, 
                        string FK18, 
                        string FK19, 
                        string FK20, 
                        string RID) {
                RBFKRow rowRBFKRow = ((RBFKRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GAOLU,
                        YX,
                        GCY,
                        BZ,
                        RQ,
                        SJ,
                        FK1,
                        FK2,
                        FK3,
                        FK4,
                        FK5,
                        FK6,
                        FK7,
                        FK8,
                        FK9,
                        FK10,
                        FK11,
                        FK12,
                        FK13,
                        FK14,
                        FK15,
                        FK16,
                        FK17,
                        FK18,
                        FK19,
                        FK20,
                        RID};
                rowRBFKRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBFKRow);
                return rowRBFKRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBFKDataTable cln = ((RBFKDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBFKDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnYX = base.Columns["YX"];
                this.columnGCY = base.Columns["GCY"];
                this.columnBZ = base.Columns["BZ"];
                this.columnRQ = base.Columns["RQ"];
                this.columnSJ = base.Columns["SJ"];
                this.columnFK1 = base.Columns["FK1"];
                this.columnFK2 = base.Columns["FK2"];
                this.columnFK3 = base.Columns["FK3"];
                this.columnFK4 = base.Columns["FK4"];
                this.columnFK5 = base.Columns["FK5"];
                this.columnFK6 = base.Columns["FK6"];
                this.columnFK7 = base.Columns["FK7"];
                this.columnFK8 = base.Columns["FK8"];
                this.columnFK9 = base.Columns["FK9"];
                this.columnFK10 = base.Columns["FK10"];
                this.columnFK11 = base.Columns["FK11"];
                this.columnFK12 = base.Columns["FK12"];
                this.columnFK13 = base.Columns["FK13"];
                this.columnFK14 = base.Columns["FK14"];
                this.columnFK15 = base.Columns["FK15"];
                this.columnFK16 = base.Columns["FK16"];
                this.columnFK17 = base.Columns["FK17"];
                this.columnFK18 = base.Columns["FK18"];
                this.columnFK19 = base.Columns["FK19"];
                this.columnFK20 = base.Columns["FK20"];
                this.columnRID = base.Columns["RID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnYX = new global::System.Data.DataColumn("YX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYX);
                this.columnGCY = new global::System.Data.DataColumn("GCY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGCY);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnRQ = new global::System.Data.DataColumn("RQ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRQ);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnFK1 = new global::System.Data.DataColumn("FK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK1);
                this.columnFK2 = new global::System.Data.DataColumn("FK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK2);
                this.columnFK3 = new global::System.Data.DataColumn("FK3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK3);
                this.columnFK4 = new global::System.Data.DataColumn("FK4", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK4);
                this.columnFK5 = new global::System.Data.DataColumn("FK5", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK5);
                this.columnFK6 = new global::System.Data.DataColumn("FK6", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK6);
                this.columnFK7 = new global::System.Data.DataColumn("FK7", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK7);
                this.columnFK8 = new global::System.Data.DataColumn("FK8", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK8);
                this.columnFK9 = new global::System.Data.DataColumn("FK9", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK9);
                this.columnFK10 = new global::System.Data.DataColumn("FK10", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK10);
                this.columnFK11 = new global::System.Data.DataColumn("FK11", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK11);
                this.columnFK12 = new global::System.Data.DataColumn("FK12", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK12);
                this.columnFK13 = new global::System.Data.DataColumn("FK13", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK13);
                this.columnFK14 = new global::System.Data.DataColumn("FK14", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK14);
                this.columnFK15 = new global::System.Data.DataColumn("FK15", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK15);
                this.columnFK16 = new global::System.Data.DataColumn("FK16", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK16);
                this.columnFK17 = new global::System.Data.DataColumn("FK17", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK17);
                this.columnFK18 = new global::System.Data.DataColumn("FK18", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK18);
                this.columnFK19 = new global::System.Data.DataColumn("FK19", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK19);
                this.columnFK20 = new global::System.Data.DataColumn("FK20", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK20);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnYX.MaxLength = 10;
                this.columnGCY.MaxLength = 10;
                this.columnBZ.MaxLength = 100;
                this.columnFK1.MaxLength = 4;
                this.columnFK2.MaxLength = 4;
                this.columnFK3.MaxLength = 4;
                this.columnFK4.MaxLength = 4;
                this.columnFK5.MaxLength = 4;
                this.columnFK6.MaxLength = 4;
                this.columnFK7.MaxLength = 4;
                this.columnFK8.MaxLength = 4;
                this.columnFK9.MaxLength = 4;
                this.columnFK10.MaxLength = 4;
                this.columnFK11.MaxLength = 4;
                this.columnFK12.MaxLength = 4;
                this.columnFK13.MaxLength = 4;
                this.columnFK14.MaxLength = 4;
                this.columnFK15.MaxLength = 4;
                this.columnFK16.MaxLength = 4;
                this.columnFK17.MaxLength = 4;
                this.columnFK18.MaxLength = 4;
                this.columnFK19.MaxLength = 4;
                this.columnFK20.MaxLength = 4;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBFKRow NewRBFKRow() {
                return ((RBFKRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBFKRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBFKRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBFKRowChanged != null)) {
                    this.RBFKRowChanged(this, new RBFKRowChangeEvent(((RBFKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBFKRowChanging != null)) {
                    this.RBFKRowChanging(this, new RBFKRowChangeEvent(((RBFKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBFKRowDeleted != null)) {
                    this.RBFKRowDeleted(this, new RBFKRowChangeEvent(((RBFKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBFKRowDeleting != null)) {
                    this.RBFKRowDeleting(this, new RBFKRowChangeEvent(((RBFKRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBFKRow(RBFKRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBFKDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBLIAOXIANBBDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLIAOQIAN;
            
            private global::System.Data.DataColumn columnLIAOHOU;
            
            private global::System.Data.DataColumn columnPISHU;
            
            private global::System.Data.DataColumn columnT;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnJIANGE;
            
            private global::System.Data.DataColumn columnJIAJIAO;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnXIUGAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANBBDataTable() {
                this.TableName = "RBLIAOXIANBB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLIAOXIANBBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBLIAOXIANBBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOQIANColumn {
                get {
                    return this.columnLIAOQIAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOHOUColumn {
                get {
                    return this.columnLIAOHOU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISHUColumn {
                get {
                    return this.columnPISHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TColumn {
                get {
                    return this.columnT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIANGEColumn {
                get {
                    return this.columnJIANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIAJIAOColumn {
                get {
                    return this.columnJIAJIAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIUGAIColumn {
                get {
                    return this.columnXIUGAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANBBRow this[int index] {
                get {
                    return ((RBLIAOXIANBBRow)(this.Rows[index]));
                }
            }
            
            public event RBLIAOXIANBBRowChangeEventHandler RBLIAOXIANBBRowChanging;
            
            public event RBLIAOXIANBBRowChangeEventHandler RBLIAOXIANBBRowChanged;
            
            public event RBLIAOXIANBBRowChangeEventHandler RBLIAOXIANBBRowDeleting;
            
            public event RBLIAOXIANBBRowChangeEventHandler RBLIAOXIANBBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBLIAOXIANBBRow(RBLIAOXIANBBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANBBRow AddRBLIAOXIANBBRow(decimal LIAOQIAN, decimal LIAOHOU, decimal PISHU, System.DateTime T, decimal GAOLU, decimal JIANGE, string JIAJIAO, string BC, decimal XIUGAI) {
                RBLIAOXIANBBRow rowRBLIAOXIANBBRow = ((RBLIAOXIANBBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LIAOQIAN,
                        LIAOHOU,
                        PISHU,
                        T,
                        GAOLU,
                        JIANGE,
                        JIAJIAO,
                        BC,
                        XIUGAI};
                rowRBLIAOXIANBBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBLIAOXIANBBRow);
                return rowRBLIAOXIANBBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBLIAOXIANBBDataTable cln = ((RBLIAOXIANBBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBLIAOXIANBBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLIAOQIAN = base.Columns["LIAOQIAN"];
                this.columnLIAOHOU = base.Columns["LIAOHOU"];
                this.columnPISHU = base.Columns["PISHU"];
                this.columnT = base.Columns["T"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnJIANGE = base.Columns["JIANGE"];
                this.columnJIAJIAO = base.Columns["JIAJIAO"];
                this.columnBC = base.Columns["BC"];
                this.columnXIUGAI = base.Columns["XIUGAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLIAOQIAN = new global::System.Data.DataColumn("LIAOQIAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOQIAN);
                this.columnLIAOHOU = new global::System.Data.DataColumn("LIAOHOU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOHOU);
                this.columnPISHU = new global::System.Data.DataColumn("PISHU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPISHU);
                this.columnT = new global::System.Data.DataColumn("T", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnJIANGE = new global::System.Data.DataColumn("JIANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIANGE);
                this.columnJIAJIAO = new global::System.Data.DataColumn("JIAJIAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIAJIAO);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnXIUGAI = new global::System.Data.DataColumn("XIUGAI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIUGAI);
                this.columnT.AllowDBNull = false;
                this.columnJIAJIAO.MaxLength = 20;
                this.columnBC.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANBBRow NewRBLIAOXIANBBRow() {
                return ((RBLIAOXIANBBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBLIAOXIANBBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBLIAOXIANBBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBLIAOXIANBBRowChanged != null)) {
                    this.RBLIAOXIANBBRowChanged(this, new RBLIAOXIANBBRowChangeEvent(((RBLIAOXIANBBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBLIAOXIANBBRowChanging != null)) {
                    this.RBLIAOXIANBBRowChanging(this, new RBLIAOXIANBBRowChangeEvent(((RBLIAOXIANBBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBLIAOXIANBBRowDeleted != null)) {
                    this.RBLIAOXIANBBRowDeleted(this, new RBLIAOXIANBBRowChangeEvent(((RBLIAOXIANBBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBLIAOXIANBBRowDeleting != null)) {
                    this.RBLIAOXIANBBRowDeleting(this, new RBLIAOXIANBBRowChangeEvent(((RBLIAOXIANBBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBLIAOXIANBBRow(RBLIAOXIANBBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBLIAOXIANBBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBLQDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnCC;
            
            private global::System.Data.DataColumn columnHAO1;
            
            private global::System.Data.DataColumn columnHAO2;
            
            private global::System.Data.DataColumn columnHAO3;
            
            private global::System.Data.DataColumn columnHAO4;
            
            private global::System.Data.DataColumn columnHAO5;
            
            private global::System.Data.DataColumn columnHAO6;
            
            private global::System.Data.DataColumn columnHAO7;
            
            private global::System.Data.DataColumn columnHAO8;
            
            private global::System.Data.DataColumn columnHAO9;
            
            private global::System.Data.DataColumn columnHAO10;
            
            private global::System.Data.DataColumn columnHAO11;
            
            private global::System.Data.DataColumn columnHAO12;
            
            private global::System.Data.DataColumn columnHAO13;
            
            private global::System.Data.DataColumn columnHAO14;
            
            private global::System.Data.DataColumn columnHAO15;
            
            private global::System.Data.DataColumn columnHAO16;
            
            private global::System.Data.DataColumn columnHAO17;
            
            private global::System.Data.DataColumn columnHAO18;
            
            private global::System.Data.DataColumn columnHAO19;
            
            private global::System.Data.DataColumn columnHAO20;
            
            private global::System.Data.DataColumn columnHAO21;
            
            private global::System.Data.DataColumn columnHAO22;
            
            private global::System.Data.DataColumn columnHAO23;
            
            private global::System.Data.DataColumn columnHAO24;
            
            private global::System.Data.DataColumn columnHAO25;
            
            private global::System.Data.DataColumn columnHAO26;
            
            private global::System.Data.DataColumn columnHAO27;
            
            private global::System.Data.DataColumn columnHAO28;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnPJZ;
            
            private global::System.Data.DataColumn columnHAO29;
            
            private global::System.Data.DataColumn columnHAO30;
            
            private global::System.Data.DataColumn columnHAO31;
            
            private global::System.Data.DataColumn columnHAO32;
            
            private global::System.Data.DataColumn columnHAO33;
            
            private global::System.Data.DataColumn columnHAO34;
            
            private global::System.Data.DataColumn columnHAO35;
            
            private global::System.Data.DataColumn columnHAO36;
            
            private global::System.Data.DataColumn columnHAO37;
            
            private global::System.Data.DataColumn columnHAO38;
            
            private global::System.Data.DataColumn columnHAO39;
            
            private global::System.Data.DataColumn columnHAO40;
            
            private global::System.Data.DataColumn columnHAO41;
            
            private global::System.Data.DataColumn columnHAO42;
            
            private global::System.Data.DataColumn columnHAO43;
            
            private global::System.Data.DataColumn columnHAO44;
            
            private global::System.Data.DataColumn columnHAO45;
            
            private global::System.Data.DataColumn columnHAO46;
            
            private global::System.Data.DataColumn columnHAO47;
            
            private global::System.Data.DataColumn columnHAO48;
            
            private global::System.Data.DataColumn columnHAO49;
            
            private global::System.Data.DataColumn columnHAO50;
            
            private global::System.Data.DataColumn columnRID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLQDataTable() {
                this.TableName = "RBLQ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLQDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBLQDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CCColumn {
                get {
                    return this.columnCC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO1Column {
                get {
                    return this.columnHAO1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO2Column {
                get {
                    return this.columnHAO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO3Column {
                get {
                    return this.columnHAO3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO4Column {
                get {
                    return this.columnHAO4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO5Column {
                get {
                    return this.columnHAO5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO6Column {
                get {
                    return this.columnHAO6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO7Column {
                get {
                    return this.columnHAO7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO8Column {
                get {
                    return this.columnHAO8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO9Column {
                get {
                    return this.columnHAO9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO10Column {
                get {
                    return this.columnHAO10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO11Column {
                get {
                    return this.columnHAO11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO12Column {
                get {
                    return this.columnHAO12;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO13Column {
                get {
                    return this.columnHAO13;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO14Column {
                get {
                    return this.columnHAO14;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO15Column {
                get {
                    return this.columnHAO15;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO16Column {
                get {
                    return this.columnHAO16;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO17Column {
                get {
                    return this.columnHAO17;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO18Column {
                get {
                    return this.columnHAO18;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO19Column {
                get {
                    return this.columnHAO19;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO20Column {
                get {
                    return this.columnHAO20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO21Column {
                get {
                    return this.columnHAO21;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO22Column {
                get {
                    return this.columnHAO22;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO23Column {
                get {
                    return this.columnHAO23;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO24Column {
                get {
                    return this.columnHAO24;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO25Column {
                get {
                    return this.columnHAO25;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO26Column {
                get {
                    return this.columnHAO26;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO27Column {
                get {
                    return this.columnHAO27;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO28Column {
                get {
                    return this.columnHAO28;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PJZColumn {
                get {
                    return this.columnPJZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO29Column {
                get {
                    return this.columnHAO29;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO30Column {
                get {
                    return this.columnHAO30;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO31Column {
                get {
                    return this.columnHAO31;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO32Column {
                get {
                    return this.columnHAO32;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO33Column {
                get {
                    return this.columnHAO33;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO34Column {
                get {
                    return this.columnHAO34;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO35Column {
                get {
                    return this.columnHAO35;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO36Column {
                get {
                    return this.columnHAO36;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO37Column {
                get {
                    return this.columnHAO37;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO38Column {
                get {
                    return this.columnHAO38;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO39Column {
                get {
                    return this.columnHAO39;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO40Column {
                get {
                    return this.columnHAO40;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO41Column {
                get {
                    return this.columnHAO41;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO42Column {
                get {
                    return this.columnHAO42;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO43Column {
                get {
                    return this.columnHAO43;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO44Column {
                get {
                    return this.columnHAO44;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO45Column {
                get {
                    return this.columnHAO45;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO46Column {
                get {
                    return this.columnHAO46;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO47Column {
                get {
                    return this.columnHAO47;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO48Column {
                get {
                    return this.columnHAO48;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO49Column {
                get {
                    return this.columnHAO49;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HAO50Column {
                get {
                    return this.columnHAO50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLQRow this[int index] {
                get {
                    return ((RBLQRow)(this.Rows[index]));
                }
            }
            
            public event RBLQRowChangeEventHandler RBLQRowChanging;
            
            public event RBLQRowChangeEventHandler RBLQRowChanged;
            
            public event RBLQRowChangeEventHandler RBLQRowDeleting;
            
            public event RBLQRowChangeEventHandler RBLQRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBLQRow(RBLQRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLQRow AddRBLQRow(
                        decimal GAOLU, 
                        string BC, 
                        string CC, 
                        decimal HAO1, 
                        decimal HAO2, 
                        decimal HAO3, 
                        decimal HAO4, 
                        decimal HAO5, 
                        decimal HAO6, 
                        decimal HAO7, 
                        decimal HAO8, 
                        decimal HAO9, 
                        decimal HAO10, 
                        decimal HAO11, 
                        decimal HAO12, 
                        decimal HAO13, 
                        decimal HAO14, 
                        decimal HAO15, 
                        decimal HAO16, 
                        decimal HAO17, 
                        decimal HAO18, 
                        decimal HAO19, 
                        decimal HAO20, 
                        decimal HAO21, 
                        decimal HAO22, 
                        decimal HAO23, 
                        decimal HAO24, 
                        decimal HAO25, 
                        decimal HAO26, 
                        decimal HAO27, 
                        decimal HAO28, 
                        string BZ, 
                        System.DateTime SJ, 
                        decimal PJZ, 
                        decimal HAO29, 
                        decimal HAO30, 
                        decimal HAO31, 
                        decimal HAO32, 
                        decimal HAO33, 
                        decimal HAO34, 
                        decimal HAO35, 
                        decimal HAO36, 
                        decimal HAO37, 
                        decimal HAO38, 
                        decimal HAO39, 
                        decimal HAO40, 
                        decimal HAO41, 
                        decimal HAO42, 
                        decimal HAO43, 
                        decimal HAO44, 
                        decimal HAO45, 
                        decimal HAO46, 
                        decimal HAO47, 
                        decimal HAO48, 
                        decimal HAO49, 
                        decimal HAO50, 
                        string RID) {
                RBLQRow rowRBLQRow = ((RBLQRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GAOLU,
                        BC,
                        CC,
                        HAO1,
                        HAO2,
                        HAO3,
                        HAO4,
                        HAO5,
                        HAO6,
                        HAO7,
                        HAO8,
                        HAO9,
                        HAO10,
                        HAO11,
                        HAO12,
                        HAO13,
                        HAO14,
                        HAO15,
                        HAO16,
                        HAO17,
                        HAO18,
                        HAO19,
                        HAO20,
                        HAO21,
                        HAO22,
                        HAO23,
                        HAO24,
                        HAO25,
                        HAO26,
                        HAO27,
                        HAO28,
                        BZ,
                        SJ,
                        PJZ,
                        HAO29,
                        HAO30,
                        HAO31,
                        HAO32,
                        HAO33,
                        HAO34,
                        HAO35,
                        HAO36,
                        HAO37,
                        HAO38,
                        HAO39,
                        HAO40,
                        HAO41,
                        HAO42,
                        HAO43,
                        HAO44,
                        HAO45,
                        HAO46,
                        HAO47,
                        HAO48,
                        HAO49,
                        HAO50,
                        RID};
                rowRBLQRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBLQRow);
                return rowRBLQRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBLQDataTable cln = ((RBLQDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBLQDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnBC = base.Columns["BC"];
                this.columnCC = base.Columns["CC"];
                this.columnHAO1 = base.Columns["HAO1"];
                this.columnHAO2 = base.Columns["HAO2"];
                this.columnHAO3 = base.Columns["HAO3"];
                this.columnHAO4 = base.Columns["HAO4"];
                this.columnHAO5 = base.Columns["HAO5"];
                this.columnHAO6 = base.Columns["HAO6"];
                this.columnHAO7 = base.Columns["HAO7"];
                this.columnHAO8 = base.Columns["HAO8"];
                this.columnHAO9 = base.Columns["HAO9"];
                this.columnHAO10 = base.Columns["HAO10"];
                this.columnHAO11 = base.Columns["HAO11"];
                this.columnHAO12 = base.Columns["HAO12"];
                this.columnHAO13 = base.Columns["HAO13"];
                this.columnHAO14 = base.Columns["HAO14"];
                this.columnHAO15 = base.Columns["HAO15"];
                this.columnHAO16 = base.Columns["HAO16"];
                this.columnHAO17 = base.Columns["HAO17"];
                this.columnHAO18 = base.Columns["HAO18"];
                this.columnHAO19 = base.Columns["HAO19"];
                this.columnHAO20 = base.Columns["HAO20"];
                this.columnHAO21 = base.Columns["HAO21"];
                this.columnHAO22 = base.Columns["HAO22"];
                this.columnHAO23 = base.Columns["HAO23"];
                this.columnHAO24 = base.Columns["HAO24"];
                this.columnHAO25 = base.Columns["HAO25"];
                this.columnHAO26 = base.Columns["HAO26"];
                this.columnHAO27 = base.Columns["HAO27"];
                this.columnHAO28 = base.Columns["HAO28"];
                this.columnBZ = base.Columns["BZ"];
                this.columnSJ = base.Columns["SJ"];
                this.columnPJZ = base.Columns["PJZ"];
                this.columnHAO29 = base.Columns["HAO29"];
                this.columnHAO30 = base.Columns["HAO30"];
                this.columnHAO31 = base.Columns["HAO31"];
                this.columnHAO32 = base.Columns["HAO32"];
                this.columnHAO33 = base.Columns["HAO33"];
                this.columnHAO34 = base.Columns["HAO34"];
                this.columnHAO35 = base.Columns["HAO35"];
                this.columnHAO36 = base.Columns["HAO36"];
                this.columnHAO37 = base.Columns["HAO37"];
                this.columnHAO38 = base.Columns["HAO38"];
                this.columnHAO39 = base.Columns["HAO39"];
                this.columnHAO40 = base.Columns["HAO40"];
                this.columnHAO41 = base.Columns["HAO41"];
                this.columnHAO42 = base.Columns["HAO42"];
                this.columnHAO43 = base.Columns["HAO43"];
                this.columnHAO44 = base.Columns["HAO44"];
                this.columnHAO45 = base.Columns["HAO45"];
                this.columnHAO46 = base.Columns["HAO46"];
                this.columnHAO47 = base.Columns["HAO47"];
                this.columnHAO48 = base.Columns["HAO48"];
                this.columnHAO49 = base.Columns["HAO49"];
                this.columnHAO50 = base.Columns["HAO50"];
                this.columnRID = base.Columns["RID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnCC = new global::System.Data.DataColumn("CC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCC);
                this.columnHAO1 = new global::System.Data.DataColumn("HAO1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO1);
                this.columnHAO2 = new global::System.Data.DataColumn("HAO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO2);
                this.columnHAO3 = new global::System.Data.DataColumn("HAO3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO3);
                this.columnHAO4 = new global::System.Data.DataColumn("HAO4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO4);
                this.columnHAO5 = new global::System.Data.DataColumn("HAO5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO5);
                this.columnHAO6 = new global::System.Data.DataColumn("HAO6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO6);
                this.columnHAO7 = new global::System.Data.DataColumn("HAO7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO7);
                this.columnHAO8 = new global::System.Data.DataColumn("HAO8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO8);
                this.columnHAO9 = new global::System.Data.DataColumn("HAO9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO9);
                this.columnHAO10 = new global::System.Data.DataColumn("HAO10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO10);
                this.columnHAO11 = new global::System.Data.DataColumn("HAO11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO11);
                this.columnHAO12 = new global::System.Data.DataColumn("HAO12", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO12);
                this.columnHAO13 = new global::System.Data.DataColumn("HAO13", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO13);
                this.columnHAO14 = new global::System.Data.DataColumn("HAO14", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO14);
                this.columnHAO15 = new global::System.Data.DataColumn("HAO15", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO15);
                this.columnHAO16 = new global::System.Data.DataColumn("HAO16", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO16);
                this.columnHAO17 = new global::System.Data.DataColumn("HAO17", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO17);
                this.columnHAO18 = new global::System.Data.DataColumn("HAO18", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO18);
                this.columnHAO19 = new global::System.Data.DataColumn("HAO19", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO19);
                this.columnHAO20 = new global::System.Data.DataColumn("HAO20", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO20);
                this.columnHAO21 = new global::System.Data.DataColumn("HAO21", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO21);
                this.columnHAO22 = new global::System.Data.DataColumn("HAO22", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO22);
                this.columnHAO23 = new global::System.Data.DataColumn("HAO23", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO23);
                this.columnHAO24 = new global::System.Data.DataColumn("HAO24", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO24);
                this.columnHAO25 = new global::System.Data.DataColumn("HAO25", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO25);
                this.columnHAO26 = new global::System.Data.DataColumn("HAO26", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO26);
                this.columnHAO27 = new global::System.Data.DataColumn("HAO27", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO27);
                this.columnHAO28 = new global::System.Data.DataColumn("HAO28", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO28);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnPJZ = new global::System.Data.DataColumn("PJZ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPJZ);
                this.columnHAO29 = new global::System.Data.DataColumn("HAO29", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO29);
                this.columnHAO30 = new global::System.Data.DataColumn("HAO30", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO30);
                this.columnHAO31 = new global::System.Data.DataColumn("HAO31", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO31);
                this.columnHAO32 = new global::System.Data.DataColumn("HAO32", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO32);
                this.columnHAO33 = new global::System.Data.DataColumn("HAO33", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO33);
                this.columnHAO34 = new global::System.Data.DataColumn("HAO34", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO34);
                this.columnHAO35 = new global::System.Data.DataColumn("HAO35", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO35);
                this.columnHAO36 = new global::System.Data.DataColumn("HAO36", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO36);
                this.columnHAO37 = new global::System.Data.DataColumn("HAO37", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO37);
                this.columnHAO38 = new global::System.Data.DataColumn("HAO38", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO38);
                this.columnHAO39 = new global::System.Data.DataColumn("HAO39", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO39);
                this.columnHAO40 = new global::System.Data.DataColumn("HAO40", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO40);
                this.columnHAO41 = new global::System.Data.DataColumn("HAO41", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO41);
                this.columnHAO42 = new global::System.Data.DataColumn("HAO42", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO42);
                this.columnHAO43 = new global::System.Data.DataColumn("HAO43", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO43);
                this.columnHAO44 = new global::System.Data.DataColumn("HAO44", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO44);
                this.columnHAO45 = new global::System.Data.DataColumn("HAO45", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO45);
                this.columnHAO46 = new global::System.Data.DataColumn("HAO46", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO46);
                this.columnHAO47 = new global::System.Data.DataColumn("HAO47", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO47);
                this.columnHAO48 = new global::System.Data.DataColumn("HAO48", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO48);
                this.columnHAO49 = new global::System.Data.DataColumn("HAO49", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO49);
                this.columnHAO50 = new global::System.Data.DataColumn("HAO50", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHAO50);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnBC.MaxLength = 10;
                this.columnCC.MaxLength = 8;
                this.columnBZ.MaxLength = 20;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLQRow NewRBLQRow() {
                return ((RBLQRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBLQRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBLQRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBLQRowChanged != null)) {
                    this.RBLQRowChanged(this, new RBLQRowChangeEvent(((RBLQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBLQRowChanging != null)) {
                    this.RBLQRowChanging(this, new RBLQRowChangeEvent(((RBLQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBLQRowDeleted != null)) {
                    this.RBLQRowDeleted(this, new RBLQRowChangeEvent(((RBLQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBLQRowDeleting != null)) {
                    this.RBLQRowDeleting(this, new RBLQRowChangeEvent(((RBLQRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBLQRow(RBLQRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBLQDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBXFDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnMC;
            
            private global::System.Data.DataColumn columnKS;
            
            private global::System.Data.DataColumn columnZZ;
            
            private global::System.Data.DataColumn columnFL;
            
            private global::System.Data.DataColumn columnYY;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnJG;
            
            private global::System.Data.DataColumn columnRID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXFDataTable() {
                this.TableName = "RBXF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBXFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBXFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MCColumn {
                get {
                    return this.columnMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KSColumn {
                get {
                    return this.columnKS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZZColumn {
                get {
                    return this.columnZZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FLColumn {
                get {
                    return this.columnFL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YYColumn {
                get {
                    return this.columnYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JGColumn {
                get {
                    return this.columnJG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXFRow this[int index] {
                get {
                    return ((RBXFRow)(this.Rows[index]));
                }
            }
            
            public event RBXFRowChangeEventHandler RBXFRowChanging;
            
            public event RBXFRowChangeEventHandler RBXFRowChanged;
            
            public event RBXFRowChangeEventHandler RBXFRowDeleting;
            
            public event RBXFRowChangeEventHandler RBXFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBXFRow(RBXFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXFRow AddRBXFRow(decimal GAOLU, string MC, System.DateTime KS, System.DateTime ZZ, string FL, string YY, System.DateTime SJ, decimal JG, string RID) {
                RBXFRow rowRBXFRow = ((RBXFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GAOLU,
                        MC,
                        KS,
                        ZZ,
                        FL,
                        YY,
                        SJ,
                        JG,
                        RID};
                rowRBXFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBXFRow);
                return rowRBXFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBXFDataTable cln = ((RBXFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBXFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnMC = base.Columns["MC"];
                this.columnKS = base.Columns["KS"];
                this.columnZZ = base.Columns["ZZ"];
                this.columnFL = base.Columns["FL"];
                this.columnYY = base.Columns["YY"];
                this.columnSJ = base.Columns["SJ"];
                this.columnJG = base.Columns["JG"];
                this.columnRID = base.Columns["RID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnMC = new global::System.Data.DataColumn("MC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC);
                this.columnKS = new global::System.Data.DataColumn("KS", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKS);
                this.columnZZ = new global::System.Data.DataColumn("ZZ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZZ);
                this.columnFL = new global::System.Data.DataColumn("FL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFL);
                this.columnYY = new global::System.Data.DataColumn("YY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYY);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnJG = new global::System.Data.DataColumn("JG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJG);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnMC.MaxLength = 20;
                this.columnFL.MaxLength = 2000;
                this.columnYY.MaxLength = 2000;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXFRow NewRBXFRow() {
                return ((RBXFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBXFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBXFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBXFRowChanged != null)) {
                    this.RBXFRowChanged(this, new RBXFRowChangeEvent(((RBXFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBXFRowChanging != null)) {
                    this.RBXFRowChanging(this, new RBXFRowChangeEvent(((RBXFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBXFRowDeleted != null)) {
                    this.RBXFRowDeleted(this, new RBXFRowChangeEvent(((RBXFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBXFRowDeleting != null)) {
                    this.RBXFRowDeleting(this, new RBXFRowChangeEvent(((RBXFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBXFRow(RBXFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBXFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBXIAOHAODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMC;
            
            private global::System.Data.DataColumn columnBAIBAN;
            
            private global::System.Data.DataColumn columnZHONGBAN;
            
            private global::System.Data.DataColumn columnYEBAN;
            
            private global::System.Data.DataColumn columnLEIJI;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnBEIZHU;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnRID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXIAOHAODataTable() {
                this.TableName = "RBXIAOHAO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBXIAOHAODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBXIAOHAODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MCColumn {
                get {
                    return this.columnMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BAIBANColumn {
                get {
                    return this.columnBAIBAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHONGBANColumn {
                get {
                    return this.columnZHONGBAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YEBANColumn {
                get {
                    return this.columnYEBAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LEIJIColumn {
                get {
                    return this.columnLEIJI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BEIZHUColumn {
                get {
                    return this.columnBEIZHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXIAOHAORow this[int index] {
                get {
                    return ((RBXIAOHAORow)(this.Rows[index]));
                }
            }
            
            public event RBXIAOHAORowChangeEventHandler RBXIAOHAORowChanging;
            
            public event RBXIAOHAORowChangeEventHandler RBXIAOHAORowChanged;
            
            public event RBXIAOHAORowChangeEventHandler RBXIAOHAORowDeleting;
            
            public event RBXIAOHAORowChangeEventHandler RBXIAOHAORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBXIAOHAORow(RBXIAOHAORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXIAOHAORow AddRBXIAOHAORow(string MC, decimal BAIBAN, decimal ZHONGBAN, decimal YEBAN, decimal LEIJI, decimal GAOLU, string BEIZHU, System.DateTime SJ, string RID) {
                RBXIAOHAORow rowRBXIAOHAORow = ((RBXIAOHAORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        MC,
                        BAIBAN,
                        ZHONGBAN,
                        YEBAN,
                        LEIJI,
                        GAOLU,
                        BEIZHU,
                        SJ,
                        RID};
                rowRBXIAOHAORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBXIAOHAORow);
                return rowRBXIAOHAORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBXIAOHAODataTable cln = ((RBXIAOHAODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBXIAOHAODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMC = base.Columns["MC"];
                this.columnBAIBAN = base.Columns["BAIBAN"];
                this.columnZHONGBAN = base.Columns["ZHONGBAN"];
                this.columnYEBAN = base.Columns["YEBAN"];
                this.columnLEIJI = base.Columns["LEIJI"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnBEIZHU = base.Columns["BEIZHU"];
                this.columnSJ = base.Columns["SJ"];
                this.columnRID = base.Columns["RID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMC = new global::System.Data.DataColumn("MC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMC);
                this.columnBAIBAN = new global::System.Data.DataColumn("BAIBAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBAIBAN);
                this.columnZHONGBAN = new global::System.Data.DataColumn("ZHONGBAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHONGBAN);
                this.columnYEBAN = new global::System.Data.DataColumn("YEBAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEBAN);
                this.columnLEIJI = new global::System.Data.DataColumn("LEIJI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLEIJI);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnBEIZHU = new global::System.Data.DataColumn("BEIZHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEIZHU);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnMC.MaxLength = 10;
                this.columnBEIZHU.MaxLength = 40;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXIAOHAORow NewRBXIAOHAORow() {
                return ((RBXIAOHAORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBXIAOHAORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBXIAOHAORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBXIAOHAORowChanged != null)) {
                    this.RBXIAOHAORowChanged(this, new RBXIAOHAORowChangeEvent(((RBXIAOHAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBXIAOHAORowChanging != null)) {
                    this.RBXIAOHAORowChanging(this, new RBXIAOHAORowChangeEvent(((RBXIAOHAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBXIAOHAORowDeleted != null)) {
                    this.RBXIAOHAORowDeleted(this, new RBXIAOHAORowChangeEvent(((RBXIAOHAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBXIAOHAORowDeleting != null)) {
                    this.RBXIAOHAORowDeleting(this, new RBXIAOHAORowChangeEvent(((RBXIAOHAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBXIAOHAORow(RBXIAOHAORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBXIAOHAODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBZLBDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnPICI;
            
            private global::System.Data.DataColumn columnJS;
            
            private global::System.Data.DataColumn columnSQ;
            
            private global::System.Data.DataColumn columnQT;
            
            private global::System.Data.DataColumn columnJT;
            
            private global::System.Data.DataColumn columnJD;
            
            private global::System.Data.DataColumn columnKP;
            
            private global::System.Data.DataColumn columnJP;
            
            private global::System.Data.DataColumn columnJTFH;
            
            private global::System.Data.DataColumn columnPML;
            
            private global::System.Data.DataColumn columnZHFH;
            
            private global::System.Data.DataColumn columnZL;
            
            private global::System.Data.DataColumn columnR2;
            
            private global::System.Data.DataColumn columnLLJD;
            
            private global::System.Data.DataColumn columnZLSX;
            
            private global::System.Data.DataColumn columnLX;
            
            private global::System.Data.DataColumn columnBLSJ;
            
            private global::System.Data.DataColumn columnBLYY;
            
            private global::System.Data.DataColumn columnCLCH;
            
            private global::System.Data.DataColumn columnLLTL;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnYQ;
            
            private global::System.Data.DataColumn columnLLBC;
            
            private global::System.Data.DataColumn columnBLJD;
            
            private global::System.Data.DataColumn columnLLJB;
            
            private global::System.Data.DataColumn columnRID;
            
            private global::System.Data.DataColumn columnPBK;
            
            private global::System.Data.DataColumn columnFMGK;
            
            private global::System.Data.DataColumn columnGZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBZLBDDataTable() {
                this.TableName = "RBZLBD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBZLBDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBZLBDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PICIColumn {
                get {
                    return this.columnPICI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JSColumn {
                get {
                    return this.columnJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SQColumn {
                get {
                    return this.columnSQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QTColumn {
                get {
                    return this.columnQT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JTColumn {
                get {
                    return this.columnJT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JDColumn {
                get {
                    return this.columnJD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KPColumn {
                get {
                    return this.columnKP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JPColumn {
                get {
                    return this.columnJP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JTFHColumn {
                get {
                    return this.columnJTFH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMLColumn {
                get {
                    return this.columnPML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHFHColumn {
                get {
                    return this.columnZHFH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZLColumn {
                get {
                    return this.columnZL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn R2Column {
                get {
                    return this.columnR2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LLJDColumn {
                get {
                    return this.columnLLJD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZLSXColumn {
                get {
                    return this.columnZLSX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LXColumn {
                get {
                    return this.columnLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLSJColumn {
                get {
                    return this.columnBLSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLYYColumn {
                get {
                    return this.columnBLYY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLCHColumn {
                get {
                    return this.columnCLCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LLTLColumn {
                get {
                    return this.columnLLTL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn YQColumn {
                get {
                    return this.columnYQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LLBCColumn {
                get {
                    return this.columnLLBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BLJDColumn {
                get {
                    return this.columnBLJD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LLJBColumn {
                get {
                    return this.columnLLJB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBKColumn {
                get {
                    return this.columnPBK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FMGKColumn {
                get {
                    return this.columnFMGK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GZColumn {
                get {
                    return this.columnGZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBZLBDRow this[int index] {
                get {
                    return ((RBZLBDRow)(this.Rows[index]));
                }
            }
            
            public event RBZLBDRowChangeEventHandler RBZLBDRowChanging;
            
            public event RBZLBDRowChangeEventHandler RBZLBDRowChanged;
            
            public event RBZLBDRowChangeEventHandler RBZLBDRowDeleting;
            
            public event RBZLBDRowChangeEventHandler RBZLBDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBZLBDRow(RBZLBDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBZLBDRow AddRBZLBDRow(
                        decimal GAOLU, 
                        System.DateTime SJ, 
                        string BC, 
                        decimal PICI, 
                        decimal JS, 
                        decimal SQ, 
                        decimal QT, 
                        decimal JT, 
                        decimal JD, 
                        decimal KP, 
                        decimal JP, 
                        decimal JTFH, 
                        decimal PML, 
                        decimal ZHFH, 
                        decimal ZL, 
                        decimal R2, 
                        decimal LLJD, 
                        string ZLSX, 
                        decimal LX, 
                        System.DateTime BLSJ, 
                        string BLYY, 
                        string CLCH, 
                        decimal LLTL, 
                        string BZ, 
                        decimal YQ, 
                        decimal LLBC, 
                        string BLJD, 
                        decimal LLJB, 
                        string RID, 
                        decimal PBK, 
                        decimal FMGK, 
                        decimal GZ) {
                RBZLBDRow rowRBZLBDRow = ((RBZLBDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GAOLU,
                        SJ,
                        BC,
                        PICI,
                        JS,
                        SQ,
                        QT,
                        JT,
                        JD,
                        KP,
                        JP,
                        JTFH,
                        PML,
                        ZHFH,
                        ZL,
                        R2,
                        LLJD,
                        ZLSX,
                        LX,
                        BLSJ,
                        BLYY,
                        CLCH,
                        LLTL,
                        BZ,
                        YQ,
                        LLBC,
                        BLJD,
                        LLJB,
                        RID,
                        PBK,
                        FMGK,
                        GZ};
                rowRBZLBDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBZLBDRow);
                return rowRBZLBDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBZLBDDataTable cln = ((RBZLBDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBZLBDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnSJ = base.Columns["SJ"];
                this.columnBC = base.Columns["BC"];
                this.columnPICI = base.Columns["PICI"];
                this.columnJS = base.Columns["JS"];
                this.columnSQ = base.Columns["SQ"];
                this.columnQT = base.Columns["QT"];
                this.columnJT = base.Columns["JT"];
                this.columnJD = base.Columns["JD"];
                this.columnKP = base.Columns["KP"];
                this.columnJP = base.Columns["JP"];
                this.columnJTFH = base.Columns["JTFH"];
                this.columnPML = base.Columns["PML"];
                this.columnZHFH = base.Columns["ZHFH"];
                this.columnZL = base.Columns["ZL"];
                this.columnR2 = base.Columns["R2"];
                this.columnLLJD = base.Columns["LLJD"];
                this.columnZLSX = base.Columns["ZLSX"];
                this.columnLX = base.Columns["LX"];
                this.columnBLSJ = base.Columns["BLSJ"];
                this.columnBLYY = base.Columns["BLYY"];
                this.columnCLCH = base.Columns["CLCH"];
                this.columnLLTL = base.Columns["LLTL"];
                this.columnBZ = base.Columns["BZ"];
                this.columnYQ = base.Columns["YQ"];
                this.columnLLBC = base.Columns["LLBC"];
                this.columnBLJD = base.Columns["BLJD"];
                this.columnLLJB = base.Columns["LLJB"];
                this.columnRID = base.Columns["RID"];
                this.columnPBK = base.Columns["PBK"];
                this.columnFMGK = base.Columns["FMGK"];
                this.columnGZ = base.Columns["GZ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnPICI = new global::System.Data.DataColumn("PICI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPICI);
                this.columnJS = new global::System.Data.DataColumn("JS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJS);
                this.columnSQ = new global::System.Data.DataColumn("SQ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQ);
                this.columnQT = new global::System.Data.DataColumn("QT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQT);
                this.columnJT = new global::System.Data.DataColumn("JT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJT);
                this.columnJD = new global::System.Data.DataColumn("JD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJD);
                this.columnKP = new global::System.Data.DataColumn("KP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKP);
                this.columnJP = new global::System.Data.DataColumn("JP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJP);
                this.columnJTFH = new global::System.Data.DataColumn("JTFH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJTFH);
                this.columnPML = new global::System.Data.DataColumn("PML", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPML);
                this.columnZHFH = new global::System.Data.DataColumn("ZHFH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHFH);
                this.columnZL = new global::System.Data.DataColumn("ZL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZL);
                this.columnR2 = new global::System.Data.DataColumn("R2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR2);
                this.columnLLJD = new global::System.Data.DataColumn("LLJD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLJD);
                this.columnZLSX = new global::System.Data.DataColumn("ZLSX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZLSX);
                this.columnLX = new global::System.Data.DataColumn("LX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLX);
                this.columnBLSJ = new global::System.Data.DataColumn("BLSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLSJ);
                this.columnBLYY = new global::System.Data.DataColumn("BLYY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLYY);
                this.columnCLCH = new global::System.Data.DataColumn("CLCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLCH);
                this.columnLLTL = new global::System.Data.DataColumn("LLTL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLTL);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnYQ = new global::System.Data.DataColumn("YQ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYQ);
                this.columnLLBC = new global::System.Data.DataColumn("LLBC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLBC);
                this.columnBLJD = new global::System.Data.DataColumn("BLJD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBLJD);
                this.columnLLJB = new global::System.Data.DataColumn("LLJB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLLJB);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnPBK = new global::System.Data.DataColumn("PBK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPBK);
                this.columnFMGK = new global::System.Data.DataColumn("FMGK", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMGK);
                this.columnGZ = new global::System.Data.DataColumn("GZ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGZ);
                this.columnBC.MaxLength = 10;
                this.columnZLSX.MaxLength = 200;
                this.columnBLYY.MaxLength = 200;
                this.columnCLCH.MaxLength = 200;
                this.columnBZ.MaxLength = 200;
                this.columnBLJD.MaxLength = 300;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBZLBDRow NewRBZLBDRow() {
                return ((RBZLBDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBZLBDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBZLBDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBZLBDRowChanged != null)) {
                    this.RBZLBDRowChanged(this, new RBZLBDRowChangeEvent(((RBZLBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBZLBDRowChanging != null)) {
                    this.RBZLBDRowChanging(this, new RBZLBDRowChangeEvent(((RBZLBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBZLBDRowDeleted != null)) {
                    this.RBZLBDRowDeleted(this, new RBZLBDRowChangeEvent(((RBZLBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBZLBDRowDeleting != null)) {
                    this.RBZLBDRowDeleting(this, new RBZLBDRowChangeEvent(((RBZLBDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBZLBDRow(RBZLBDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBZLBDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBLIAOXIANZBDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLIAOQIAN;
            
            private global::System.Data.DataColumn columnLIAOHOU;
            
            private global::System.Data.DataColumn columnPISHU;
            
            private global::System.Data.DataColumn columnT;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnJIANGE;
            
            private global::System.Data.DataColumn columnJIAJIAO;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnXIUGAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANZBDataTable() {
                this.TableName = "RBLIAOXIANZB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLIAOXIANZBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBLIAOXIANZBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOQIANColumn {
                get {
                    return this.columnLIAOQIAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOHOUColumn {
                get {
                    return this.columnLIAOHOU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISHUColumn {
                get {
                    return this.columnPISHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TColumn {
                get {
                    return this.columnT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIANGEColumn {
                get {
                    return this.columnJIANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIAJIAOColumn {
                get {
                    return this.columnJIAJIAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIUGAIColumn {
                get {
                    return this.columnXIUGAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANZBRow this[int index] {
                get {
                    return ((RBLIAOXIANZBRow)(this.Rows[index]));
                }
            }
            
            public event RBLIAOXIANZBRowChangeEventHandler RBLIAOXIANZBRowChanging;
            
            public event RBLIAOXIANZBRowChangeEventHandler RBLIAOXIANZBRowChanged;
            
            public event RBLIAOXIANZBRowChangeEventHandler RBLIAOXIANZBRowDeleting;
            
            public event RBLIAOXIANZBRowChangeEventHandler RBLIAOXIANZBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBLIAOXIANZBRow(RBLIAOXIANZBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANZBRow AddRBLIAOXIANZBRow(decimal LIAOQIAN, decimal LIAOHOU, decimal PISHU, System.DateTime T, decimal GAOLU, decimal JIANGE, string JIAJIAO, string BC, decimal XIUGAI) {
                RBLIAOXIANZBRow rowRBLIAOXIANZBRow = ((RBLIAOXIANZBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LIAOQIAN,
                        LIAOHOU,
                        PISHU,
                        T,
                        GAOLU,
                        JIANGE,
                        JIAJIAO,
                        BC,
                        XIUGAI};
                rowRBLIAOXIANZBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBLIAOXIANZBRow);
                return rowRBLIAOXIANZBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBLIAOXIANZBDataTable cln = ((RBLIAOXIANZBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBLIAOXIANZBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLIAOQIAN = base.Columns["LIAOQIAN"];
                this.columnLIAOHOU = base.Columns["LIAOHOU"];
                this.columnPISHU = base.Columns["PISHU"];
                this.columnT = base.Columns["T"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnJIANGE = base.Columns["JIANGE"];
                this.columnJIAJIAO = base.Columns["JIAJIAO"];
                this.columnBC = base.Columns["BC"];
                this.columnXIUGAI = base.Columns["XIUGAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLIAOQIAN = new global::System.Data.DataColumn("LIAOQIAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOQIAN);
                this.columnLIAOHOU = new global::System.Data.DataColumn("LIAOHOU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOHOU);
                this.columnPISHU = new global::System.Data.DataColumn("PISHU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPISHU);
                this.columnT = new global::System.Data.DataColumn("T", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnJIANGE = new global::System.Data.DataColumn("JIANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIANGE);
                this.columnJIAJIAO = new global::System.Data.DataColumn("JIAJIAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIAJIAO);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnXIUGAI = new global::System.Data.DataColumn("XIUGAI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIUGAI);
                this.columnT.AllowDBNull = false;
                this.columnJIAJIAO.MaxLength = 20;
                this.columnBC.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANZBRow NewRBLIAOXIANZBRow() {
                return ((RBLIAOXIANZBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBLIAOXIANZBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBLIAOXIANZBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBLIAOXIANZBRowChanged != null)) {
                    this.RBLIAOXIANZBRowChanged(this, new RBLIAOXIANZBRowChangeEvent(((RBLIAOXIANZBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBLIAOXIANZBRowChanging != null)) {
                    this.RBLIAOXIANZBRowChanging(this, new RBLIAOXIANZBRowChangeEvent(((RBLIAOXIANZBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBLIAOXIANZBRowDeleted != null)) {
                    this.RBLIAOXIANZBRowDeleted(this, new RBLIAOXIANZBRowChangeEvent(((RBLIAOXIANZBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBLIAOXIANZBRowDeleting != null)) {
                    this.RBLIAOXIANZBRowDeleting(this, new RBLIAOXIANZBRowChangeEvent(((RBLIAOXIANZBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBLIAOXIANZBRow(RBLIAOXIANZBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBLIAOXIANZBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBLIAOXIANYBDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLIAOQIAN;
            
            private global::System.Data.DataColumn columnLIAOHOU;
            
            private global::System.Data.DataColumn columnPISHU;
            
            private global::System.Data.DataColumn columnT;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnJIANGE;
            
            private global::System.Data.DataColumn columnJIAJIAO;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnXIUGAI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANYBDataTable() {
                this.TableName = "RBLIAOXIANYB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLIAOXIANYBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBLIAOXIANYBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOQIANColumn {
                get {
                    return this.columnLIAOQIAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOHOUColumn {
                get {
                    return this.columnLIAOHOU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISHUColumn {
                get {
                    return this.columnPISHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TColumn {
                get {
                    return this.columnT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIANGEColumn {
                get {
                    return this.columnJIANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIAJIAOColumn {
                get {
                    return this.columnJIAJIAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XIUGAIColumn {
                get {
                    return this.columnXIUGAI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANYBRow this[int index] {
                get {
                    return ((RBLIAOXIANYBRow)(this.Rows[index]));
                }
            }
            
            public event RBLIAOXIANYBRowChangeEventHandler RBLIAOXIANYBRowChanging;
            
            public event RBLIAOXIANYBRowChangeEventHandler RBLIAOXIANYBRowChanged;
            
            public event RBLIAOXIANYBRowChangeEventHandler RBLIAOXIANYBRowDeleting;
            
            public event RBLIAOXIANYBRowChangeEventHandler RBLIAOXIANYBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBLIAOXIANYBRow(RBLIAOXIANYBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANYBRow AddRBLIAOXIANYBRow(decimal LIAOQIAN, decimal LIAOHOU, decimal PISHU, System.DateTime T, decimal GAOLU, decimal JIANGE, string JIAJIAO, string BC, decimal XIUGAI) {
                RBLIAOXIANYBRow rowRBLIAOXIANYBRow = ((RBLIAOXIANYBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LIAOQIAN,
                        LIAOHOU,
                        PISHU,
                        T,
                        GAOLU,
                        JIANGE,
                        JIAJIAO,
                        BC,
                        XIUGAI};
                rowRBLIAOXIANYBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBLIAOXIANYBRow);
                return rowRBLIAOXIANYBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBLIAOXIANYBDataTable cln = ((RBLIAOXIANYBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBLIAOXIANYBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLIAOQIAN = base.Columns["LIAOQIAN"];
                this.columnLIAOHOU = base.Columns["LIAOHOU"];
                this.columnPISHU = base.Columns["PISHU"];
                this.columnT = base.Columns["T"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnJIANGE = base.Columns["JIANGE"];
                this.columnJIAJIAO = base.Columns["JIAJIAO"];
                this.columnBC = base.Columns["BC"];
                this.columnXIUGAI = base.Columns["XIUGAI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLIAOQIAN = new global::System.Data.DataColumn("LIAOQIAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOQIAN);
                this.columnLIAOHOU = new global::System.Data.DataColumn("LIAOHOU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOHOU);
                this.columnPISHU = new global::System.Data.DataColumn("PISHU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPISHU);
                this.columnT = new global::System.Data.DataColumn("T", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnJIANGE = new global::System.Data.DataColumn("JIANGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIANGE);
                this.columnJIAJIAO = new global::System.Data.DataColumn("JIAJIAO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIAJIAO);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnXIUGAI = new global::System.Data.DataColumn("XIUGAI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXIUGAI);
                this.columnT.AllowDBNull = false;
                this.columnJIAJIAO.MaxLength = 20;
                this.columnBC.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANYBRow NewRBLIAOXIANYBRow() {
                return ((RBLIAOXIANYBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBLIAOXIANYBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBLIAOXIANYBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBLIAOXIANYBRowChanged != null)) {
                    this.RBLIAOXIANYBRowChanged(this, new RBLIAOXIANYBRowChangeEvent(((RBLIAOXIANYBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBLIAOXIANYBRowChanging != null)) {
                    this.RBLIAOXIANYBRowChanging(this, new RBLIAOXIANYBRowChangeEvent(((RBLIAOXIANYBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBLIAOXIANYBRowDeleted != null)) {
                    this.RBLIAOXIANYBRowDeleted(this, new RBLIAOXIANYBRowChangeEvent(((RBLIAOXIANYBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBLIAOXIANYBRowDeleting != null)) {
                    this.RBLIAOXIANYBRowDeleting(this, new RBLIAOXIANYBRowChangeEvent(((RBLIAOXIANYBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBLIAOXIANYBRow(RBLIAOXIANYBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBLIAOXIANYBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DDLUCIDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnLUCI;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnZDSJ;
            
            private global::System.Data.DataColumn columnDGSJ;
            
            private global::System.Data.DataColumn columnKKSJ;
            
            private global::System.Data.DataColumn columnDKSJ;
            
            private global::System.Data.DataColumn columnWDSJ;
            
            private global::System.Data.DataColumn columnQUCHU;
            
            private global::System.Data.DataColumn columnGFELIANG;
            
            private global::System.Data.DataColumn columnLFELIANG;
            
            private global::System.Data.DataColumn columnFELIANG;
            
            private global::System.Data.DataColumn columnLIAOPI;
            
            private global::System.Data.DataColumn columnGGUANSHU;
            
            private global::System.Data.DataColumn columnFEWENDU;
            
            private global::System.Data.DataColumn columnFEC;
            
            private global::System.Data.DataColumn columnFESI;
            
            private global::System.Data.DataColumn columnFEMN;
            
            private global::System.Data.DataColumn columnFEP;
            
            private global::System.Data.DataColumn columnFES;
            
            private global::System.Data.DataColumn columnFETI;
            
            private global::System.Data.DataColumn columnGFESI;
            
            private global::System.Data.DataColumn columnGFES;
            
            private global::System.Data.DataColumn columnSHENDU;
            
            private global::System.Data.DataColumn columnJIAODU;
            
            private global::System.Data.DataColumn columnDANILIANG;
            
            private global::System.Data.DataColumn columnZHAYANG;
            
            private global::System.Data.DataColumn columnSHUIWEN1;
            
            private global::System.Data.DataColumn columnSHUIWEN2;
            
            private global::System.Data.DataColumn columnZHASIO2;
            
            private global::System.Data.DataColumn columnZHACAO;
            
            private global::System.Data.DataColumn columnZHAMGO;
            
            private global::System.Data.DataColumn columnZHAAL2O3;
            
            private global::System.Data.DataColumn columnZHAS;
            
            private global::System.Data.DataColumn columnZHATIO2;
            
            private global::System.Data.DataColumn columnZHAR2;
            
            private global::System.Data.DataColumn columnBANCI;
            
            private global::System.Data.DataColumn columnBANLUCI;
            
            private global::System.Data.DataColumn columnFENLEI;
            
            private global::System.Data.DataColumn columnJIAOYAN;
            
            private global::System.Data.DataColumn columnTZSJ;
            
            private global::System.Data.DataColumn columnPNQK1;
            
            private global::System.Data.DataColumn columnPNQK2;
            
            private global::System.Data.DataColumn columnZHAR3;
            
            private global::System.Data.DataColumn columnZHAR4;
            
            private global::System.Data.DataColumn columnZHAMGOALO;
            
            private global::System.Data.DataColumn columnLZQK;
            
            private global::System.Data.DataColumn columnCTC;
            
            private global::System.Data.DataColumn columnFECR;
            
            private global::System.Data.DataColumn columnFENI;
            
            private global::System.Data.DataColumn columnFESB;
            
            private global::System.Data.DataColumn columnFEAS;
            
            private global::System.Data.DataColumn columnFEPB;
            
            private global::System.Data.DataColumn columnFEMO;
            
            private global::System.Data.DataColumn columnFECU;
            
            private global::System.Data.DataColumn columnFEB;
            
            private global::System.Data.DataColumn columnFEV;
            
            private global::System.Data.DataColumn columnFEAL;
            
            private global::System.Data.DataColumn columnFENB;
            
            private global::System.Data.DataColumn columnFEW;
            
            private global::System.Data.DataColumn columnFEZN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIDataTable() {
                this.TableName = "DDLUCI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DDLUCIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected DDLUCIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LUCIColumn {
                get {
                    return this.columnLUCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZDSJColumn {
                get {
                    return this.columnZDSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DGSJColumn {
                get {
                    return this.columnDGSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn KKSJColumn {
                get {
                    return this.columnKKSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DKSJColumn {
                get {
                    return this.columnDKSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WDSJColumn {
                get {
                    return this.columnWDSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QUCHUColumn {
                get {
                    return this.columnQUCHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFELIANGColumn {
                get {
                    return this.columnGFELIANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFELIANGColumn {
                get {
                    return this.columnLFELIANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FELIANGColumn {
                get {
                    return this.columnFELIANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOPIColumn {
                get {
                    return this.columnLIAOPI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GGUANSHUColumn {
                get {
                    return this.columnGGUANSHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEWENDUColumn {
                get {
                    return this.columnFEWENDU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FECColumn {
                get {
                    return this.columnFEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FESIColumn {
                get {
                    return this.columnFESI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEMNColumn {
                get {
                    return this.columnFEMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEPColumn {
                get {
                    return this.columnFEP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FESColumn {
                get {
                    return this.columnFES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FETIColumn {
                get {
                    return this.columnFETI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFESIColumn {
                get {
                    return this.columnGFESI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFESColumn {
                get {
                    return this.columnGFES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHENDUColumn {
                get {
                    return this.columnSHENDU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIAODUColumn {
                get {
                    return this.columnJIAODU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DANILIANGColumn {
                get {
                    return this.columnDANILIANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAYANGColumn {
                get {
                    return this.columnZHAYANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHUIWEN1Column {
                get {
                    return this.columnSHUIWEN1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHUIWEN2Column {
                get {
                    return this.columnSHUIWEN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHASIO2Column {
                get {
                    return this.columnZHASIO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHACAOColumn {
                get {
                    return this.columnZHACAO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAMGOColumn {
                get {
                    return this.columnZHAMGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAAL2O3Column {
                get {
                    return this.columnZHAAL2O3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHASColumn {
                get {
                    return this.columnZHAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHATIO2Column {
                get {
                    return this.columnZHATIO2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAR2Column {
                get {
                    return this.columnZHAR2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANCIColumn {
                get {
                    return this.columnBANCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BANLUCIColumn {
                get {
                    return this.columnBANLUCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FENLEIColumn {
                get {
                    return this.columnFENLEI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JIAOYANColumn {
                get {
                    return this.columnJIAOYAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TZSJColumn {
                get {
                    return this.columnTZSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNQK1Column {
                get {
                    return this.columnPNQK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PNQK2Column {
                get {
                    return this.columnPNQK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAR3Column {
                get {
                    return this.columnZHAR3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAR4Column {
                get {
                    return this.columnZHAR4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHAMGOALOColumn {
                get {
                    return this.columnZHAMGOALO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LZQKColumn {
                get {
                    return this.columnLZQK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CTCColumn {
                get {
                    return this.columnCTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FECRColumn {
                get {
                    return this.columnFECR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FENIColumn {
                get {
                    return this.columnFENI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FESBColumn {
                get {
                    return this.columnFESB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEASColumn {
                get {
                    return this.columnFEAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEPBColumn {
                get {
                    return this.columnFEPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEMOColumn {
                get {
                    return this.columnFEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FECUColumn {
                get {
                    return this.columnFECU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEBColumn {
                get {
                    return this.columnFEB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEVColumn {
                get {
                    return this.columnFEV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEALColumn {
                get {
                    return this.columnFEAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FENBColumn {
                get {
                    return this.columnFENB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEWColumn {
                get {
                    return this.columnFEW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FEZNColumn {
                get {
                    return this.columnFEZN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIRow this[int index] {
                get {
                    return ((DDLUCIRow)(this.Rows[index]));
                }
            }
            
            public event DDLUCIRowChangeEventHandler DDLUCIRowChanging;
            
            public event DDLUCIRowChangeEventHandler DDLUCIRowChanged;
            
            public event DDLUCIRowChangeEventHandler DDLUCIRowDeleting;
            
            public event DDLUCIRowChangeEventHandler DDLUCIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddDDLUCIRow(DDLUCIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIRow AddDDLUCIRow(
                        string LUCI, 
                        decimal GAOLU, 
                        System.DateTime ZDSJ, 
                        System.DateTime DGSJ, 
                        System.DateTime KKSJ, 
                        System.DateTime DKSJ, 
                        decimal WDSJ, 
                        string QUCHU, 
                        decimal GFELIANG, 
                        decimal LFELIANG, 
                        decimal FELIANG, 
                        decimal LIAOPI, 
                        decimal GGUANSHU, 
                        decimal FEWENDU, 
                        decimal FEC, 
                        decimal FESI, 
                        decimal FEMN, 
                        decimal FEP, 
                        decimal FES, 
                        decimal FETI, 
                        decimal GFESI, 
                        decimal GFES, 
                        decimal SHENDU, 
                        decimal JIAODU, 
                        decimal DANILIANG, 
                        string ZHAYANG, 
                        decimal SHUIWEN1, 
                        decimal SHUIWEN2, 
                        decimal ZHASIO2, 
                        decimal ZHACAO, 
                        decimal ZHAMGO, 
                        decimal ZHAAL2O3, 
                        decimal ZHAS, 
                        decimal ZHATIO2, 
                        decimal ZHAR2, 
                        string BANCI, 
                        decimal BANLUCI, 
                        string FENLEI, 
                        decimal JIAOYAN, 
                        System.DateTime TZSJ, 
                        string PNQK1, 
                        string PNQK2, 
                        decimal ZHAR3, 
                        decimal ZHAR4, 
                        decimal ZHAMGOALO, 
                        System.DateTime LZQK, 
                        string CTC, 
                        decimal FECR, 
                        decimal FENI, 
                        decimal FESB, 
                        decimal FEAS, 
                        decimal FEPB, 
                        decimal FEMO, 
                        decimal FECU, 
                        decimal FEB, 
                        decimal FEV, 
                        decimal FEAL, 
                        decimal FENB, 
                        decimal FEW, 
                        decimal FEZN) {
                DDLUCIRow rowDDLUCIRow = ((DDLUCIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LUCI,
                        GAOLU,
                        ZDSJ,
                        DGSJ,
                        KKSJ,
                        DKSJ,
                        WDSJ,
                        QUCHU,
                        GFELIANG,
                        LFELIANG,
                        FELIANG,
                        LIAOPI,
                        GGUANSHU,
                        FEWENDU,
                        FEC,
                        FESI,
                        FEMN,
                        FEP,
                        FES,
                        FETI,
                        GFESI,
                        GFES,
                        SHENDU,
                        JIAODU,
                        DANILIANG,
                        ZHAYANG,
                        SHUIWEN1,
                        SHUIWEN2,
                        ZHASIO2,
                        ZHACAO,
                        ZHAMGO,
                        ZHAAL2O3,
                        ZHAS,
                        ZHATIO2,
                        ZHAR2,
                        BANCI,
                        BANLUCI,
                        FENLEI,
                        JIAOYAN,
                        TZSJ,
                        PNQK1,
                        PNQK2,
                        ZHAR3,
                        ZHAR4,
                        ZHAMGOALO,
                        LZQK,
                        CTC,
                        FECR,
                        FENI,
                        FESB,
                        FEAS,
                        FEPB,
                        FEMO,
                        FECU,
                        FEB,
                        FEV,
                        FEAL,
                        FENB,
                        FEW,
                        FEZN};
                rowDDLUCIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDDLUCIRow);
                return rowDDLUCIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIRow FindByGAOLUZDSJBANCIBANLUCI(decimal GAOLU, System.DateTime ZDSJ, string BANCI, decimal BANLUCI) {
                return ((DDLUCIRow)(this.Rows.Find(new object[] {
                            GAOLU,
                            ZDSJ,
                            BANCI,
                            BANLUCI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                DDLUCIDataTable cln = ((DDLUCIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DDLUCIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnLUCI = base.Columns["LUCI"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnZDSJ = base.Columns["ZDSJ"];
                this.columnDGSJ = base.Columns["DGSJ"];
                this.columnKKSJ = base.Columns["KKSJ"];
                this.columnDKSJ = base.Columns["DKSJ"];
                this.columnWDSJ = base.Columns["WDSJ"];
                this.columnQUCHU = base.Columns["QUCHU"];
                this.columnGFELIANG = base.Columns["GFELIANG"];
                this.columnLFELIANG = base.Columns["LFELIANG"];
                this.columnFELIANG = base.Columns["FELIANG"];
                this.columnLIAOPI = base.Columns["LIAOPI"];
                this.columnGGUANSHU = base.Columns["GGUANSHU"];
                this.columnFEWENDU = base.Columns["FEWENDU"];
                this.columnFEC = base.Columns["FEC"];
                this.columnFESI = base.Columns["FESI"];
                this.columnFEMN = base.Columns["FEMN"];
                this.columnFEP = base.Columns["FEP"];
                this.columnFES = base.Columns["FES"];
                this.columnFETI = base.Columns["FETI"];
                this.columnGFESI = base.Columns["GFESI"];
                this.columnGFES = base.Columns["GFES"];
                this.columnSHENDU = base.Columns["SHENDU"];
                this.columnJIAODU = base.Columns["JIAODU"];
                this.columnDANILIANG = base.Columns["DANILIANG"];
                this.columnZHAYANG = base.Columns["ZHAYANG"];
                this.columnSHUIWEN1 = base.Columns["SHUIWEN1"];
                this.columnSHUIWEN2 = base.Columns["SHUIWEN2"];
                this.columnZHASIO2 = base.Columns["ZHASIO2"];
                this.columnZHACAO = base.Columns["ZHACAO"];
                this.columnZHAMGO = base.Columns["ZHAMGO"];
                this.columnZHAAL2O3 = base.Columns["ZHAAL2O3"];
                this.columnZHAS = base.Columns["ZHAS"];
                this.columnZHATIO2 = base.Columns["ZHATIO2"];
                this.columnZHAR2 = base.Columns["ZHAR2"];
                this.columnBANCI = base.Columns["BANCI"];
                this.columnBANLUCI = base.Columns["BANLUCI"];
                this.columnFENLEI = base.Columns["FENLEI"];
                this.columnJIAOYAN = base.Columns["JIAOYAN"];
                this.columnTZSJ = base.Columns["TZSJ"];
                this.columnPNQK1 = base.Columns["PNQK1"];
                this.columnPNQK2 = base.Columns["PNQK2"];
                this.columnZHAR3 = base.Columns["ZHAR3"];
                this.columnZHAR4 = base.Columns["ZHAR4"];
                this.columnZHAMGOALO = base.Columns["ZHAMGOALO"];
                this.columnLZQK = base.Columns["LZQK"];
                this.columnCTC = base.Columns["CTC"];
                this.columnFECR = base.Columns["FECR"];
                this.columnFENI = base.Columns["FENI"];
                this.columnFESB = base.Columns["FESB"];
                this.columnFEAS = base.Columns["FEAS"];
                this.columnFEPB = base.Columns["FEPB"];
                this.columnFEMO = base.Columns["FEMO"];
                this.columnFECU = base.Columns["FECU"];
                this.columnFEB = base.Columns["FEB"];
                this.columnFEV = base.Columns["FEV"];
                this.columnFEAL = base.Columns["FEAL"];
                this.columnFENB = base.Columns["FENB"];
                this.columnFEW = base.Columns["FEW"];
                this.columnFEZN = base.Columns["FEZN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnLUCI = new global::System.Data.DataColumn("LUCI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUCI);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnZDSJ = new global::System.Data.DataColumn("ZDSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZDSJ);
                this.columnDGSJ = new global::System.Data.DataColumn("DGSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDGSJ);
                this.columnKKSJ = new global::System.Data.DataColumn("KKSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKKSJ);
                this.columnDKSJ = new global::System.Data.DataColumn("DKSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDKSJ);
                this.columnWDSJ = new global::System.Data.DataColumn("WDSJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWDSJ);
                this.columnQUCHU = new global::System.Data.DataColumn("QUCHU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQUCHU);
                this.columnGFELIANG = new global::System.Data.DataColumn("GFELIANG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFELIANG);
                this.columnLFELIANG = new global::System.Data.DataColumn("LFELIANG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFELIANG);
                this.columnFELIANG = new global::System.Data.DataColumn("FELIANG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFELIANG);
                this.columnLIAOPI = new global::System.Data.DataColumn("LIAOPI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOPI);
                this.columnGGUANSHU = new global::System.Data.DataColumn("GGUANSHU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGGUANSHU);
                this.columnFEWENDU = new global::System.Data.DataColumn("FEWENDU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEWENDU);
                this.columnFEC = new global::System.Data.DataColumn("FEC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEC);
                this.columnFESI = new global::System.Data.DataColumn("FESI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFESI);
                this.columnFEMN = new global::System.Data.DataColumn("FEMN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEMN);
                this.columnFEP = new global::System.Data.DataColumn("FEP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEP);
                this.columnFES = new global::System.Data.DataColumn("FES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFES);
                this.columnFETI = new global::System.Data.DataColumn("FETI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFETI);
                this.columnGFESI = new global::System.Data.DataColumn("GFESI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFESI);
                this.columnGFES = new global::System.Data.DataColumn("GFES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFES);
                this.columnSHENDU = new global::System.Data.DataColumn("SHENDU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHENDU);
                this.columnJIAODU = new global::System.Data.DataColumn("JIAODU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIAODU);
                this.columnDANILIANG = new global::System.Data.DataColumn("DANILIANG", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDANILIANG);
                this.columnZHAYANG = new global::System.Data.DataColumn("ZHAYANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAYANG);
                this.columnSHUIWEN1 = new global::System.Data.DataColumn("SHUIWEN1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHUIWEN1);
                this.columnSHUIWEN2 = new global::System.Data.DataColumn("SHUIWEN2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHUIWEN2);
                this.columnZHASIO2 = new global::System.Data.DataColumn("ZHASIO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHASIO2);
                this.columnZHACAO = new global::System.Data.DataColumn("ZHACAO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHACAO);
                this.columnZHAMGO = new global::System.Data.DataColumn("ZHAMGO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAMGO);
                this.columnZHAAL2O3 = new global::System.Data.DataColumn("ZHAAL2O3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAAL2O3);
                this.columnZHAS = new global::System.Data.DataColumn("ZHAS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAS);
                this.columnZHATIO2 = new global::System.Data.DataColumn("ZHATIO2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHATIO2);
                this.columnZHAR2 = new global::System.Data.DataColumn("ZHAR2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAR2);
                this.columnBANCI = new global::System.Data.DataColumn("BANCI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANCI);
                this.columnBANLUCI = new global::System.Data.DataColumn("BANLUCI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANLUCI);
                this.columnFENLEI = new global::System.Data.DataColumn("FENLEI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFENLEI);
                this.columnJIAOYAN = new global::System.Data.DataColumn("JIAOYAN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJIAOYAN);
                this.columnTZSJ = new global::System.Data.DataColumn("TZSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTZSJ);
                this.columnPNQK1 = new global::System.Data.DataColumn("PNQK1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNQK1);
                this.columnPNQK2 = new global::System.Data.DataColumn("PNQK2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNQK2);
                this.columnZHAR3 = new global::System.Data.DataColumn("ZHAR3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAR3);
                this.columnZHAR4 = new global::System.Data.DataColumn("ZHAR4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAR4);
                this.columnZHAMGOALO = new global::System.Data.DataColumn("ZHAMGOALO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHAMGOALO);
                this.columnLZQK = new global::System.Data.DataColumn("LZQK", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLZQK);
                this.columnCTC = new global::System.Data.DataColumn("CTC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTC);
                this.columnFECR = new global::System.Data.DataColumn("FECR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECR);
                this.columnFENI = new global::System.Data.DataColumn("FENI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFENI);
                this.columnFESB = new global::System.Data.DataColumn("FESB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFESB);
                this.columnFEAS = new global::System.Data.DataColumn("FEAS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEAS);
                this.columnFEPB = new global::System.Data.DataColumn("FEPB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEPB);
                this.columnFEMO = new global::System.Data.DataColumn("FEMO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEMO);
                this.columnFECU = new global::System.Data.DataColumn("FECU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECU);
                this.columnFEB = new global::System.Data.DataColumn("FEB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEB);
                this.columnFEV = new global::System.Data.DataColumn("FEV", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEV);
                this.columnFEAL = new global::System.Data.DataColumn("FEAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEAL);
                this.columnFENB = new global::System.Data.DataColumn("FENB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFENB);
                this.columnFEW = new global::System.Data.DataColumn("FEW", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEW);
                this.columnFEZN = new global::System.Data.DataColumn("FEZN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFEZN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGAOLU,
                                this.columnZDSJ,
                                this.columnBANCI,
                                this.columnBANLUCI}, true));
                this.columnLUCI.MaxLength = 20;
                this.columnGAOLU.AllowDBNull = false;
                this.columnZDSJ.AllowDBNull = false;
                this.columnQUCHU.MaxLength = 20;
                this.columnZHAYANG.MaxLength = 20;
                this.columnBANCI.AllowDBNull = false;
                this.columnBANCI.MaxLength = 20;
                this.columnBANLUCI.AllowDBNull = false;
                this.columnFENLEI.MaxLength = 20;
                this.columnPNQK1.MaxLength = 50;
                this.columnPNQK2.MaxLength = 50;
                this.columnCTC.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIRow NewDDLUCIRow() {
                return ((DDLUCIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DDLUCIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(DDLUCIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DDLUCIRowChanged != null)) {
                    this.DDLUCIRowChanged(this, new DDLUCIRowChangeEvent(((DDLUCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DDLUCIRowChanging != null)) {
                    this.DDLUCIRowChanging(this, new DDLUCIRowChangeEvent(((DDLUCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DDLUCIRowDeleted != null)) {
                    this.DDLUCIRowDeleted(this, new DDLUCIRowChangeEvent(((DDLUCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DDLUCIRowDeleting != null)) {
                    this.DDLUCIRowDeleting(this, new DDLUCIRowChangeEvent(((DDLUCIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveDDLUCIRow(DDLUCIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DDLUCIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBJSDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnJS;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBJSDataTable() {
                this.TableName = "RBJS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBJSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBJSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JSColumn {
                get {
                    return this.columnJS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBJSRow this[int index] {
                get {
                    return ((RBJSRow)(this.Rows[index]));
                }
            }
            
            public event RBJSRowChangeEventHandler RBJSRowChanging;
            
            public event RBJSRowChangeEventHandler RBJSRowChanged;
            
            public event RBJSRowChangeEventHandler RBJSRowDeleting;
            
            public event RBJSRowChangeEventHandler RBJSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBJSRow(RBJSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBJSRow AddRBJSRow(System.DateTime SJ, string JS, decimal GAOLU) {
                RBJSRow rowRBJSRow = ((RBJSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SJ,
                        JS,
                        GAOLU};
                rowRBJSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBJSRow);
                return rowRBJSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBJSDataTable cln = ((RBJSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBJSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSJ = base.Columns["SJ"];
                this.columnJS = base.Columns["JS"];
                this.columnGAOLU = base.Columns["GAOLU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnJS = new global::System.Data.DataColumn("JS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJS);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnJS.MaxLength = 4000;
                this.columnGAOLU.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBJSRow NewRBJSRow() {
                return ((RBJSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBJSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBJSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBJSRowChanged != null)) {
                    this.RBJSRowChanged(this, new RBJSRowChangeEvent(((RBJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBJSRowChanging != null)) {
                    this.RBJSRowChanging(this, new RBJSRowChangeEvent(((RBJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBJSRowDeleted != null)) {
                    this.RBJSRowDeleted(this, new RBJSRowChangeEvent(((RBJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBJSRowDeleting != null)) {
                    this.RBJSRowDeleting(this, new RBJSRowChangeEvent(((RBJSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBJSRow(RBJSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBJSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LT_LIAODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnT;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnPISHU;
            
            private global::System.Data.DataColumn columnSYR;
            
            private global::System.Data.DataColumn columnSYRBL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LT_LIAODataTable() {
                this.TableName = "LT_LIAO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LT_LIAODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LT_LIAODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TColumn {
                get {
                    return this.columnT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PISHUColumn {
                get {
                    return this.columnPISHU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYRColumn {
                get {
                    return this.columnSYR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SYRBLColumn {
                get {
                    return this.columnSYRBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LT_LIAORow this[int index] {
                get {
                    return ((LT_LIAORow)(this.Rows[index]));
                }
            }
            
            public event LT_LIAORowChangeEventHandler LT_LIAORowChanging;
            
            public event LT_LIAORowChangeEventHandler LT_LIAORowChanged;
            
            public event LT_LIAORowChangeEventHandler LT_LIAORowDeleting;
            
            public event LT_LIAORowChangeEventHandler LT_LIAORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLT_LIAORow(LT_LIAORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LT_LIAORow AddLT_LIAORow(System.DateTime T, decimal GAOLU, decimal PISHU, decimal SYR, decimal SYRBL) {
                LT_LIAORow rowLT_LIAORow = ((LT_LIAORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        T,
                        GAOLU,
                        PISHU,
                        SYR,
                        SYRBL};
                rowLT_LIAORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLT_LIAORow);
                return rowLT_LIAORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LT_LIAODataTable cln = ((LT_LIAODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LT_LIAODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnT = base.Columns["T"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnPISHU = base.Columns["PISHU"];
                this.columnSYR = base.Columns["SYR"];
                this.columnSYRBL = base.Columns["SYRBL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnT = new global::System.Data.DataColumn("T", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnPISHU = new global::System.Data.DataColumn("PISHU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPISHU);
                this.columnSYR = new global::System.Data.DataColumn("SYR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYR);
                this.columnSYRBL = new global::System.Data.DataColumn("SYRBL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYRBL);
                this.columnT.AllowDBNull = false;
                this.columnGAOLU.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LT_LIAORow NewLT_LIAORow() {
                return ((LT_LIAORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LT_LIAORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LT_LIAORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LT_LIAORowChanged != null)) {
                    this.LT_LIAORowChanged(this, new LT_LIAORowChangeEvent(((LT_LIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LT_LIAORowChanging != null)) {
                    this.LT_LIAORowChanging(this, new LT_LIAORowChangeEvent(((LT_LIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LT_LIAORowDeleted != null)) {
                    this.LT_LIAORowDeleted(this, new LT_LIAORowChangeEvent(((LT_LIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LT_LIAORowDeleting != null)) {
                    this.LT_LIAORowDeleting(this, new LT_LIAORowChangeEvent(((LT_LIAORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLT_LIAORow(LT_LIAORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LT_LIAODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SHIJIGUIDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDKSJ;
            
            private global::System.Data.DataColumn columnFESI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIJIGUIDataTable() {
                this.TableName = "SHIJIGUI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHIJIGUIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected SHIJIGUIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DKSJColumn {
                get {
                    return this.columnDKSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FESIColumn {
                get {
                    return this.columnFESI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIJIGUIRow this[int index] {
                get {
                    return ((SHIJIGUIRow)(this.Rows[index]));
                }
            }
            
            public event SHIJIGUIRowChangeEventHandler SHIJIGUIRowChanging;
            
            public event SHIJIGUIRowChangeEventHandler SHIJIGUIRowChanged;
            
            public event SHIJIGUIRowChangeEventHandler SHIJIGUIRowDeleting;
            
            public event SHIJIGUIRowChangeEventHandler SHIJIGUIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSHIJIGUIRow(SHIJIGUIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIJIGUIRow AddSHIJIGUIRow(System.DateTime DKSJ, decimal FESI) {
                SHIJIGUIRow rowSHIJIGUIRow = ((SHIJIGUIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DKSJ,
                        FESI};
                rowSHIJIGUIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSHIJIGUIRow);
                return rowSHIJIGUIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                SHIJIGUIDataTable cln = ((SHIJIGUIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SHIJIGUIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnDKSJ = base.Columns["DKSJ"];
                this.columnFESI = base.Columns["FESI"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnDKSJ = new global::System.Data.DataColumn("DKSJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDKSJ);
                this.columnFESI = new global::System.Data.DataColumn("FESI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFESI);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIJIGUIRow NewSHIJIGUIRow() {
                return ((SHIJIGUIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SHIJIGUIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(SHIJIGUIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SHIJIGUIRowChanged != null)) {
                    this.SHIJIGUIRowChanged(this, new SHIJIGUIRowChangeEvent(((SHIJIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SHIJIGUIRowChanging != null)) {
                    this.SHIJIGUIRowChanging(this, new SHIJIGUIRowChangeEvent(((SHIJIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SHIJIGUIRowDeleted != null)) {
                    this.SHIJIGUIRowDeleted(this, new SHIJIGUIRowChangeEvent(((SHIJIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SHIJIGUIRowDeleting != null)) {
                    this.SHIJIGUIRowDeleting(this, new SHIJIGUIRowChangeEvent(((SHIJIGUIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSHIJIGUIRow(SHIJIGUIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SHIJIGUIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ALARMDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnCLOCK;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnLUKUANG;
            
            private global::System.Data.DataColumn columnREFENGYL1;
            
            private global::System.Data.DataColumn columnREFENGYL2;
            
            private global::System.Data.DataColumn columnLENGFENGLL1;
            
            private global::System.Data.DataColumn columnLENGFENGLL2;
            
            private global::System.Data.DataColumn columnLIAOXIAN1;
            
            private global::System.Data.DataColumn columnLIAOXIAN2;
            
            private global::System.Data.DataColumn columnLIAOXIAN3;
            
            private global::System.Data.DataColumn columnLIAOXIAN4;
            
            private global::System.Data.DataColumn columnLUDINGWD1;
            
            private global::System.Data.DataColumn columnLUDINGWD2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALARMDataTable() {
                this.TableName = "ALARM";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ALARMDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ALARMDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CLOCKColumn {
                get {
                    return this.columnCLOCK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LUKUANGColumn {
                get {
                    return this.columnLUKUANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFENGYL1Column {
                get {
                    return this.columnREFENGYL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REFENGYL2Column {
                get {
                    return this.columnREFENGYL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LENGFENGLL1Column {
                get {
                    return this.columnLENGFENGLL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LENGFENGLL2Column {
                get {
                    return this.columnLENGFENGLL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOXIAN1Column {
                get {
                    return this.columnLIAOXIAN1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOXIAN2Column {
                get {
                    return this.columnLIAOXIAN2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOXIAN3Column {
                get {
                    return this.columnLIAOXIAN3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LIAOXIAN4Column {
                get {
                    return this.columnLIAOXIAN4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LUDINGWD1Column {
                get {
                    return this.columnLUDINGWD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LUDINGWD2Column {
                get {
                    return this.columnLUDINGWD2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALARMRow this[int index] {
                get {
                    return ((ALARMRow)(this.Rows[index]));
                }
            }
            
            public event ALARMRowChangeEventHandler ALARMRowChanging;
            
            public event ALARMRowChangeEventHandler ALARMRowChanged;
            
            public event ALARMRowChangeEventHandler ALARMRowDeleting;
            
            public event ALARMRowChangeEventHandler ALARMRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddALARMRow(ALARMRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALARMRow AddALARMRow(System.DateTime CLOCK, decimal GAOLU, string LUKUANG, decimal REFENGYL1, decimal REFENGYL2, decimal LENGFENGLL1, decimal LENGFENGLL2, decimal LIAOXIAN1, decimal LIAOXIAN2, decimal LIAOXIAN3, decimal LIAOXIAN4, decimal LUDINGWD1, decimal LUDINGWD2) {
                ALARMRow rowALARMRow = ((ALARMRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CLOCK,
                        GAOLU,
                        LUKUANG,
                        REFENGYL1,
                        REFENGYL2,
                        LENGFENGLL1,
                        LENGFENGLL2,
                        LIAOXIAN1,
                        LIAOXIAN2,
                        LIAOXIAN3,
                        LIAOXIAN4,
                        LUDINGWD1,
                        LUDINGWD2};
                rowALARMRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowALARMRow);
                return rowALARMRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ALARMDataTable cln = ((ALARMDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ALARMDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCLOCK = base.Columns["CLOCK"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnLUKUANG = base.Columns["LUKUANG"];
                this.columnREFENGYL1 = base.Columns["REFENGYL1"];
                this.columnREFENGYL2 = base.Columns["REFENGYL2"];
                this.columnLENGFENGLL1 = base.Columns["LENGFENGLL1"];
                this.columnLENGFENGLL2 = base.Columns["LENGFENGLL2"];
                this.columnLIAOXIAN1 = base.Columns["LIAOXIAN1"];
                this.columnLIAOXIAN2 = base.Columns["LIAOXIAN2"];
                this.columnLIAOXIAN3 = base.Columns["LIAOXIAN3"];
                this.columnLIAOXIAN4 = base.Columns["LIAOXIAN4"];
                this.columnLUDINGWD1 = base.Columns["LUDINGWD1"];
                this.columnLUDINGWD2 = base.Columns["LUDINGWD2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCLOCK = new global::System.Data.DataColumn("CLOCK", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLOCK);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnLUKUANG = new global::System.Data.DataColumn("LUKUANG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUKUANG);
                this.columnREFENGYL1 = new global::System.Data.DataColumn("REFENGYL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFENGYL1);
                this.columnREFENGYL2 = new global::System.Data.DataColumn("REFENGYL2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFENGYL2);
                this.columnLENGFENGLL1 = new global::System.Data.DataColumn("LENGFENGLL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLENGFENGLL1);
                this.columnLENGFENGLL2 = new global::System.Data.DataColumn("LENGFENGLL2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLENGFENGLL2);
                this.columnLIAOXIAN1 = new global::System.Data.DataColumn("LIAOXIAN1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOXIAN1);
                this.columnLIAOXIAN2 = new global::System.Data.DataColumn("LIAOXIAN2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOXIAN2);
                this.columnLIAOXIAN3 = new global::System.Data.DataColumn("LIAOXIAN3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOXIAN3);
                this.columnLIAOXIAN4 = new global::System.Data.DataColumn("LIAOXIAN4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIAOXIAN4);
                this.columnLUDINGWD1 = new global::System.Data.DataColumn("LUDINGWD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUDINGWD1);
                this.columnLUDINGWD2 = new global::System.Data.DataColumn("LUDINGWD2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLUDINGWD2);
                this.columnCLOCK.AllowDBNull = false;
                this.columnGAOLU.AllowDBNull = false;
                this.columnLUKUANG.AllowDBNull = false;
                this.columnLUKUANG.MaxLength = 10;
                this.columnREFENGYL1.AllowDBNull = false;
                this.columnREFENGYL2.AllowDBNull = false;
                this.columnLENGFENGLL1.AllowDBNull = false;
                this.columnLENGFENGLL2.AllowDBNull = false;
                this.columnLIAOXIAN1.AllowDBNull = false;
                this.columnLIAOXIAN2.AllowDBNull = false;
                this.columnLIAOXIAN3.AllowDBNull = false;
                this.columnLIAOXIAN4.AllowDBNull = false;
                this.columnLUDINGWD1.AllowDBNull = false;
                this.columnLUDINGWD2.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALARMRow NewALARMRow() {
                return ((ALARMRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ALARMRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ALARMRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ALARMRowChanged != null)) {
                    this.ALARMRowChanged(this, new ALARMRowChangeEvent(((ALARMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ALARMRowChanging != null)) {
                    this.ALARMRowChanging(this, new ALARMRowChangeEvent(((ALARMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ALARMRowDeleted != null)) {
                    this.ALARMRowDeleted(this, new ALARMRowChangeEvent(((ALARMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ALARMRowDeleting != null)) {
                    this.ALARMRowDeleting(this, new ALARMRowChangeEvent(((ALARMRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveALARMRow(ALARMRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ALARMDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBGZDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnBC;
            
            private global::System.Data.DataColumn columnJL;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBGZDataTable() {
                this.TableName = "RBGZ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBGZDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBGZDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BCColumn {
                get {
                    return this.columnBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JLColumn {
                get {
                    return this.columnJL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBGZRow this[int index] {
                get {
                    return ((RBGZRow)(this.Rows[index]));
                }
            }
            
            public event RBGZRowChangeEventHandler RBGZRowChanging;
            
            public event RBGZRowChangeEventHandler RBGZRowChanged;
            
            public event RBGZRowChangeEventHandler RBGZRowDeleting;
            
            public event RBGZRowChangeEventHandler RBGZRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBGZRow(RBGZRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBGZRow AddRBGZRow(System.DateTime SJ, string BC, string JL, decimal GAOLU) {
                RBGZRow rowRBGZRow = ((RBGZRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SJ,
                        BC,
                        JL,
                        GAOLU};
                rowRBGZRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBGZRow);
                return rowRBGZRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBGZDataTable cln = ((RBGZDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBGZDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSJ = base.Columns["SJ"];
                this.columnBC = base.Columns["BC"];
                this.columnJL = base.Columns["JL"];
                this.columnGAOLU = base.Columns["GAOLU"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnBC = new global::System.Data.DataColumn("BC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBC);
                this.columnJL = new global::System.Data.DataColumn("JL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJL);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnBC.MaxLength = 6;
                this.columnJL.MaxLength = 4000;
                this.columnGAOLU.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBGZRow NewRBGZRow() {
                return ((RBGZRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBGZRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBGZRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBGZRowChanged != null)) {
                    this.RBGZRowChanged(this, new RBGZRowChangeEvent(((RBGZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBGZRowChanging != null)) {
                    this.RBGZRowChanging(this, new RBGZRowChangeEvent(((RBGZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBGZRowDeleted != null)) {
                    this.RBGZRowDeleted(this, new RBGZRowChangeEvent(((RBGZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBGZRowDeleting != null)) {
                    this.RBGZRowDeleting(this, new RBGZRowChangeEvent(((RBGZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBGZRow(RBGZRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBGZDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBCAOZUO1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnFJ;
            
            private global::System.Data.DataColumn columnLFLL;
            
            private global::System.Data.DataColumn columnFYLL;
            
            private global::System.Data.DataColumn columnRFYL;
            
            private global::System.Data.DataColumn columnRFWD;
            
            private global::System.Data.DataColumn columnPML;
            
            private global::System.Data.DataColumn columnTQX;
            
            private global::System.Data.DataColumn columnLDWD;
            
            private global::System.Data.DataColumn columnRSWD;
            
            private global::System.Data.DataColumn columnSJFS;
            
            private global::System.Data.DataColumn columnGFDN;
            
            private global::System.Data.DataColumn columnLDYL;
            
            private global::System.Data.DataColumn columnLX;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnZHFH;
            
            private global::System.Data.DataColumn columnLFYL;
            
            private global::System.Data.DataColumn columnMQLYL;
            
            private global::System.Data.DataColumn columnRLB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUO1DataTable() {
                this.TableName = "RBCAOZUO1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBCAOZUO1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBCAOZUO1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FJColumn {
                get {
                    return this.columnFJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFLLColumn {
                get {
                    return this.columnLFLL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYLLColumn {
                get {
                    return this.columnFYLL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFYLColumn {
                get {
                    return this.columnRFYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFWDColumn {
                get {
                    return this.columnRFWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMLColumn {
                get {
                    return this.columnPML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TQXColumn {
                get {
                    return this.columnTQX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDWDColumn {
                get {
                    return this.columnLDWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RSWDColumn {
                get {
                    return this.columnRSWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJFSColumn {
                get {
                    return this.columnSJFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFDNColumn {
                get {
                    return this.columnGFDN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDYLColumn {
                get {
                    return this.columnLDYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LXColumn {
                get {
                    return this.columnLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHFHColumn {
                get {
                    return this.columnZHFH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFYLColumn {
                get {
                    return this.columnLFYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MQLYLColumn {
                get {
                    return this.columnMQLYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RLBColumn {
                get {
                    return this.columnRLB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUO1Row this[int index] {
                get {
                    return ((RBCAOZUO1Row)(this.Rows[index]));
                }
            }
            
            public event RBCAOZUO1RowChangeEventHandler RBCAOZUO1RowChanging;
            
            public event RBCAOZUO1RowChangeEventHandler RBCAOZUO1RowChanged;
            
            public event RBCAOZUO1RowChangeEventHandler RBCAOZUO1RowDeleting;
            
            public event RBCAOZUO1RowChangeEventHandler RBCAOZUO1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBCAOZUO1Row(RBCAOZUO1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUO1Row AddRBCAOZUO1Row(
                        decimal GAOLU, 
                        decimal FJ, 
                        decimal LFLL, 
                        decimal FYLL, 
                        decimal RFYL, 
                        decimal RFWD, 
                        decimal PML, 
                        decimal TQX, 
                        decimal LDWD, 
                        decimal RSWD, 
                        decimal SJFS, 
                        decimal GFDN, 
                        decimal LDYL, 
                        decimal LX, 
                        System.DateTime SJ, 
                        decimal ZHFH, 
                        decimal LFYL, 
                        decimal MQLYL, 
                        decimal RLB) {
                RBCAOZUO1Row rowRBCAOZUO1Row = ((RBCAOZUO1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GAOLU,
                        FJ,
                        LFLL,
                        FYLL,
                        RFYL,
                        RFWD,
                        PML,
                        TQX,
                        LDWD,
                        RSWD,
                        SJFS,
                        GFDN,
                        LDYL,
                        LX,
                        SJ,
                        ZHFH,
                        LFYL,
                        MQLYL,
                        RLB};
                rowRBCAOZUO1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBCAOZUO1Row);
                return rowRBCAOZUO1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBCAOZUO1DataTable cln = ((RBCAOZUO1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBCAOZUO1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnFJ = base.Columns["FJ"];
                this.columnLFLL = base.Columns["LFLL"];
                this.columnFYLL = base.Columns["FYLL"];
                this.columnRFYL = base.Columns["RFYL"];
                this.columnRFWD = base.Columns["RFWD"];
                this.columnPML = base.Columns["PML"];
                this.columnTQX = base.Columns["TQX"];
                this.columnLDWD = base.Columns["LDWD"];
                this.columnRSWD = base.Columns["RSWD"];
                this.columnSJFS = base.Columns["SJFS"];
                this.columnGFDN = base.Columns["GFDN"];
                this.columnLDYL = base.Columns["LDYL"];
                this.columnLX = base.Columns["LX"];
                this.columnSJ = base.Columns["SJ"];
                this.columnZHFH = base.Columns["ZHFH"];
                this.columnLFYL = base.Columns["LFYL"];
                this.columnMQLYL = base.Columns["MQLYL"];
                this.columnRLB = base.Columns["RLB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnFJ = new global::System.Data.DataColumn("FJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFJ);
                this.columnLFLL = new global::System.Data.DataColumn("LFLL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFLL);
                this.columnFYLL = new global::System.Data.DataColumn("FYLL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYLL);
                this.columnRFYL = new global::System.Data.DataColumn("RFYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFYL);
                this.columnRFWD = new global::System.Data.DataColumn("RFWD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFWD);
                this.columnPML = new global::System.Data.DataColumn("PML", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPML);
                this.columnTQX = new global::System.Data.DataColumn("TQX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTQX);
                this.columnLDWD = new global::System.Data.DataColumn("LDWD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDWD);
                this.columnRSWD = new global::System.Data.DataColumn("RSWD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSWD);
                this.columnSJFS = new global::System.Data.DataColumn("SJFS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJFS);
                this.columnGFDN = new global::System.Data.DataColumn("GFDN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFDN);
                this.columnLDYL = new global::System.Data.DataColumn("LDYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDYL);
                this.columnLX = new global::System.Data.DataColumn("LX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLX);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnZHFH = new global::System.Data.DataColumn("ZHFH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHFH);
                this.columnLFYL = new global::System.Data.DataColumn("LFYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFYL);
                this.columnMQLYL = new global::System.Data.DataColumn("MQLYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMQLYL);
                this.columnRLB = new global::System.Data.DataColumn("RLB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLB);
                this.columnGAOLU.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUO1Row NewRBCAOZUO1Row() {
                return ((RBCAOZUO1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBCAOZUO1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBCAOZUO1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBCAOZUO1RowChanged != null)) {
                    this.RBCAOZUO1RowChanged(this, new RBCAOZUO1RowChangeEvent(((RBCAOZUO1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBCAOZUO1RowChanging != null)) {
                    this.RBCAOZUO1RowChanging(this, new RBCAOZUO1RowChangeEvent(((RBCAOZUO1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBCAOZUO1RowDeleted != null)) {
                    this.RBCAOZUO1RowDeleted(this, new RBCAOZUO1RowChangeEvent(((RBCAOZUO1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBCAOZUO1RowDeleting != null)) {
                    this.RBCAOZUO1RowDeleting(this, new RBCAOZUO1RowChangeEvent(((RBCAOZUO1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBCAOZUO1Row(RBCAOZUO1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBCAOZUO1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CQA_IRON_ELEMENT_TEXTDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnSAMPLE_CODE;
            
            private global::System.Data.DataColumn columnSAMPLE_ADDRESS;
            
            private global::System.Data.DataColumn columnLOGTIME;
            
            private global::System.Data.DataColumn columnREPORT_DATE;
            
            private global::System.Data.DataColumn columnC;
            
            private global::System.Data.DataColumn columnSI;
            
            private global::System.Data.DataColumn columnMN;
            
            private global::System.Data.DataColumn columnP;
            
            private global::System.Data.DataColumn columnS;
            
            private global::System.Data.DataColumn columnTI;
            
            private global::System.Data.DataColumn columnSN;
            
            private global::System.Data.DataColumn columnSB;
            
            private global::System.Data.DataColumn columnAS;
            
            private global::System.Data.DataColumn columnPB;
            
            private global::System.Data.DataColumn columnNI;
            
            private global::System.Data.DataColumn columnMO;
            
            private global::System.Data.DataColumn columnCU;
            
            private global::System.Data.DataColumn columnCR;
            
            private global::System.Data.DataColumn columnB;
            
            private global::System.Data.DataColumn columnV;
            
            private global::System.Data.DataColumn columnAL;
            
            private global::System.Data.DataColumn columnNB;
            
            private global::System.Data.DataColumn columnZN;
            
            private global::System.Data.DataColumn columnW;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CQA_IRON_ELEMENT_TEXTDataTable() {
                this.TableName = "CQA_IRON_ELEMENT_TEXT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CQA_IRON_ELEMENT_TEXTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CQA_IRON_ELEMENT_TEXTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMPLE_CODEColumn {
                get {
                    return this.columnSAMPLE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SAMPLE_ADDRESSColumn {
                get {
                    return this.columnSAMPLE_ADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOGTIMEColumn {
                get {
                    return this.columnLOGTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn REPORT_DATEColumn {
                get {
                    return this.columnREPORT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CColumn {
                get {
                    return this.columnC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SIColumn {
                get {
                    return this.columnSI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MNColumn {
                get {
                    return this.columnMN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PColumn {
                get {
                    return this.columnP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SColumn {
                get {
                    return this.columnS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIColumn {
                get {
                    return this.columnTI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SNColumn {
                get {
                    return this.columnSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SBColumn {
                get {
                    return this.columnSB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ASColumn {
                get {
                    return this.columnAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PBColumn {
                get {
                    return this.columnPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NIColumn {
                get {
                    return this.columnNI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOColumn {
                get {
                    return this.columnMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUColumn {
                get {
                    return this.columnCU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CRColumn {
                get {
                    return this.columnCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BColumn {
                get {
                    return this.columnB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VColumn {
                get {
                    return this.columnV;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ALColumn {
                get {
                    return this.columnAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NBColumn {
                get {
                    return this.columnNB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZNColumn {
                get {
                    return this.columnZN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WColumn {
                get {
                    return this.columnW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CQA_IRON_ELEMENT_TEXTRow this[int index] {
                get {
                    return ((CQA_IRON_ELEMENT_TEXTRow)(this.Rows[index]));
                }
            }
            
            public event CQA_IRON_ELEMENT_TEXTRowChangeEventHandler CQA_IRON_ELEMENT_TEXTRowChanging;
            
            public event CQA_IRON_ELEMENT_TEXTRowChangeEventHandler CQA_IRON_ELEMENT_TEXTRowChanged;
            
            public event CQA_IRON_ELEMENT_TEXTRowChangeEventHandler CQA_IRON_ELEMENT_TEXTRowDeleting;
            
            public event CQA_IRON_ELEMENT_TEXTRowChangeEventHandler CQA_IRON_ELEMENT_TEXTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCQA_IRON_ELEMENT_TEXTRow(CQA_IRON_ELEMENT_TEXTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CQA_IRON_ELEMENT_TEXTRow AddCQA_IRON_ELEMENT_TEXTRow(
                        string SAMPLE_CODE, 
                        string SAMPLE_ADDRESS, 
                        string LOGTIME, 
                        string REPORT_DATE, 
                        string C, 
                        string SI, 
                        string MN, 
                        string P, 
                        string S, 
                        string TI, 
                        string SN, 
                        string SB, 
                        string AS, 
                        string PB, 
                        string NI, 
                        string MO, 
                        string CU, 
                        string CR, 
                        string B, 
                        string V, 
                        string AL, 
                        string NB, 
                        string ZN, 
                        string W) {
                CQA_IRON_ELEMENT_TEXTRow rowCQA_IRON_ELEMENT_TEXTRow = ((CQA_IRON_ELEMENT_TEXTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SAMPLE_CODE,
                        SAMPLE_ADDRESS,
                        LOGTIME,
                        REPORT_DATE,
                        C,
                        SI,
                        MN,
                        P,
                        S,
                        TI,
                        SN,
                        SB,
                        AS,
                        PB,
                        NI,
                        MO,
                        CU,
                        CR,
                        B,
                        V,
                        AL,
                        NB,
                        ZN,
                        W};
                rowCQA_IRON_ELEMENT_TEXTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCQA_IRON_ELEMENT_TEXTRow);
                return rowCQA_IRON_ELEMENT_TEXTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                CQA_IRON_ELEMENT_TEXTDataTable cln = ((CQA_IRON_ELEMENT_TEXTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CQA_IRON_ELEMENT_TEXTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSAMPLE_CODE = base.Columns["SAMPLE_CODE"];
                this.columnSAMPLE_ADDRESS = base.Columns["SAMPLE_ADDRESS"];
                this.columnLOGTIME = base.Columns["LOGTIME"];
                this.columnREPORT_DATE = base.Columns["REPORT_DATE"];
                this.columnC = base.Columns["C"];
                this.columnSI = base.Columns["SI"];
                this.columnMN = base.Columns["MN"];
                this.columnP = base.Columns["P"];
                this.columnS = base.Columns["S"];
                this.columnTI = base.Columns["TI"];
                this.columnSN = base.Columns["SN"];
                this.columnSB = base.Columns["SB"];
                this.columnAS = base.Columns["AS"];
                this.columnPB = base.Columns["PB"];
                this.columnNI = base.Columns["NI"];
                this.columnMO = base.Columns["MO"];
                this.columnCU = base.Columns["CU"];
                this.columnCR = base.Columns["CR"];
                this.columnB = base.Columns["B"];
                this.columnV = base.Columns["V"];
                this.columnAL = base.Columns["AL"];
                this.columnNB = base.Columns["NB"];
                this.columnZN = base.Columns["ZN"];
                this.columnW = base.Columns["W"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSAMPLE_CODE = new global::System.Data.DataColumn("SAMPLE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_CODE);
                this.columnSAMPLE_ADDRESS = new global::System.Data.DataColumn("SAMPLE_ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAMPLE_ADDRESS);
                this.columnLOGTIME = new global::System.Data.DataColumn("LOGTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOGTIME);
                this.columnREPORT_DATE = new global::System.Data.DataColumn("REPORT_DATE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREPORT_DATE);
                this.columnC = new global::System.Data.DataColumn("C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC);
                this.columnSI = new global::System.Data.DataColumn("SI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSI);
                this.columnMN = new global::System.Data.DataColumn("MN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMN);
                this.columnP = new global::System.Data.DataColumn("P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP);
                this.columnS = new global::System.Data.DataColumn("S", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS);
                this.columnTI = new global::System.Data.DataColumn("TI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTI);
                this.columnSN = new global::System.Data.DataColumn("SN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSN);
                this.columnSB = new global::System.Data.DataColumn("SB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSB);
                this.columnAS = new global::System.Data.DataColumn("AS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAS);
                this.columnPB = new global::System.Data.DataColumn("PB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPB);
                this.columnNI = new global::System.Data.DataColumn("NI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNI);
                this.columnMO = new global::System.Data.DataColumn("MO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMO);
                this.columnCU = new global::System.Data.DataColumn("CU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCU);
                this.columnCR = new global::System.Data.DataColumn("CR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR);
                this.columnB = new global::System.Data.DataColumn("B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB);
                this.columnV = new global::System.Data.DataColumn("V", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnV);
                this.columnAL = new global::System.Data.DataColumn("AL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAL);
                this.columnNB = new global::System.Data.DataColumn("NB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNB);
                this.columnZN = new global::System.Data.DataColumn("ZN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZN);
                this.columnW = new global::System.Data.DataColumn("W", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnW);
                this.columnSAMPLE_CODE.MaxLength = 250;
                this.columnSAMPLE_ADDRESS.MaxLength = 250;
                this.columnLOGTIME.MaxLength = 19;
                this.columnREPORT_DATE.MaxLength = 19;
                this.columnC.MaxLength = 250;
                this.columnSI.MaxLength = 250;
                this.columnMN.MaxLength = 250;
                this.columnP.MaxLength = 250;
                this.columnS.MaxLength = 250;
                this.columnTI.MaxLength = 250;
                this.columnSN.MaxLength = 250;
                this.columnSB.MaxLength = 250;
                this.columnAS.MaxLength = 250;
                this.columnPB.MaxLength = 250;
                this.columnNI.MaxLength = 250;
                this.columnMO.MaxLength = 250;
                this.columnCU.MaxLength = 250;
                this.columnCR.MaxLength = 250;
                this.columnB.MaxLength = 250;
                this.columnV.MaxLength = 250;
                this.columnAL.MaxLength = 250;
                this.columnNB.MaxLength = 250;
                this.columnZN.MaxLength = 250;
                this.columnW.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CQA_IRON_ELEMENT_TEXTRow NewCQA_IRON_ELEMENT_TEXTRow() {
                return ((CQA_IRON_ELEMENT_TEXTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CQA_IRON_ELEMENT_TEXTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(CQA_IRON_ELEMENT_TEXTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CQA_IRON_ELEMENT_TEXTRowChanged != null)) {
                    this.CQA_IRON_ELEMENT_TEXTRowChanged(this, new CQA_IRON_ELEMENT_TEXTRowChangeEvent(((CQA_IRON_ELEMENT_TEXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CQA_IRON_ELEMENT_TEXTRowChanging != null)) {
                    this.CQA_IRON_ELEMENT_TEXTRowChanging(this, new CQA_IRON_ELEMENT_TEXTRowChangeEvent(((CQA_IRON_ELEMENT_TEXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CQA_IRON_ELEMENT_TEXTRowDeleted != null)) {
                    this.CQA_IRON_ELEMENT_TEXTRowDeleted(this, new CQA_IRON_ELEMENT_TEXTRowChangeEvent(((CQA_IRON_ELEMENT_TEXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CQA_IRON_ELEMENT_TEXTRowDeleting != null)) {
                    this.CQA_IRON_ELEMENT_TEXTRowDeleting(this, new CQA_IRON_ELEMENT_TEXTRowChangeEvent(((CQA_IRON_ELEMENT_TEXTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCQA_IRON_ELEMENT_TEXTRow(CQA_IRON_ELEMENT_TEXTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CQA_IRON_ELEMENT_TEXTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class RBCAOZUODataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFJ;
            
            private global::System.Data.DataColumn columnLFLL;
            
            private global::System.Data.DataColumn columnFYLL;
            
            private global::System.Data.DataColumn columnLFYL;
            
            private global::System.Data.DataColumn columnRFYL;
            
            private global::System.Data.DataColumn columnRFWD;
            
            private global::System.Data.DataColumn columnPML;
            
            private global::System.Data.DataColumn columnTQX;
            
            private global::System.Data.DataColumn columnLDWD;
            
            private global::System.Data.DataColumn columnRSWD;
            
            private global::System.Data.DataColumn columnSJFS;
            
            private global::System.Data.DataColumn columnGFDN;
            
            private global::System.Data.DataColumn columnLDYL;
            
            private global::System.Data.DataColumn columnLX;
            
            private global::System.Data.DataColumn columnBZ;
            
            private global::System.Data.DataColumn columnGAOLU;
            
            private global::System.Data.DataColumn columnSJ;
            
            private global::System.Data.DataColumn columnHOUR;
            
            private global::System.Data.DataColumn columnZHFH;
            
            private global::System.Data.DataColumn columnRID;
            
            private global::System.Data.DataColumn columnLDWDXB;
            
            private global::System.Data.DataColumn columnLDWDDB;
            
            private global::System.Data.DataColumn columnLDWDDN;
            
            private global::System.Data.DataColumn columnLDWDXN;
            
            private global::System.Data.DataColumn columnMQLYL;
            
            private global::System.Data.DataColumn columnTEMP1;
            
            private global::System.Data.DataColumn columnTEMP2;
            
            private global::System.Data.DataColumn columnTEMP3;
            
            private global::System.Data.DataColumn columnTEMP4;
            
            private global::System.Data.DataColumn columnTEMP5;
            
            private global::System.Data.DataColumn columnTEMP6;
            
            private global::System.Data.DataColumn columnTEMP7;
            
            private global::System.Data.DataColumn columnTEMP8;
            
            private global::System.Data.DataColumn columnTEMP9;
            
            private global::System.Data.DataColumn columnRLB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUODataTable() {
                this.TableName = "RBCAOZUO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBCAOZUODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected RBCAOZUODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FJColumn {
                get {
                    return this.columnFJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFLLColumn {
                get {
                    return this.columnLFLL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FYLLColumn {
                get {
                    return this.columnFYLL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LFYLColumn {
                get {
                    return this.columnLFYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFYLColumn {
                get {
                    return this.columnRFYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RFWDColumn {
                get {
                    return this.columnRFWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PMLColumn {
                get {
                    return this.columnPML;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TQXColumn {
                get {
                    return this.columnTQX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDWDColumn {
                get {
                    return this.columnLDWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RSWDColumn {
                get {
                    return this.columnRSWD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJFSColumn {
                get {
                    return this.columnSJFS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GFDNColumn {
                get {
                    return this.columnGFDN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDYLColumn {
                get {
                    return this.columnLDYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LXColumn {
                get {
                    return this.columnLX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BZColumn {
                get {
                    return this.columnBZ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GAOLUColumn {
                get {
                    return this.columnGAOLU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SJColumn {
                get {
                    return this.columnSJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn HOURColumn {
                get {
                    return this.columnHOUR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZHFHColumn {
                get {
                    return this.columnZHFH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RIDColumn {
                get {
                    return this.columnRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDWDXBColumn {
                get {
                    return this.columnLDWDXB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDWDDBColumn {
                get {
                    return this.columnLDWDDB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDWDDNColumn {
                get {
                    return this.columnLDWDDN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LDWDXNColumn {
                get {
                    return this.columnLDWDXN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MQLYLColumn {
                get {
                    return this.columnMQLYL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP1Column {
                get {
                    return this.columnTEMP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP2Column {
                get {
                    return this.columnTEMP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP3Column {
                get {
                    return this.columnTEMP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP4Column {
                get {
                    return this.columnTEMP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP5Column {
                get {
                    return this.columnTEMP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP6Column {
                get {
                    return this.columnTEMP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP7Column {
                get {
                    return this.columnTEMP7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP8Column {
                get {
                    return this.columnTEMP8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TEMP9Column {
                get {
                    return this.columnTEMP9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RLBColumn {
                get {
                    return this.columnRLB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUORow this[int index] {
                get {
                    return ((RBCAOZUORow)(this.Rows[index]));
                }
            }
            
            public event RBCAOZUORowChangeEventHandler RBCAOZUORowChanging;
            
            public event RBCAOZUORowChangeEventHandler RBCAOZUORowChanged;
            
            public event RBCAOZUORowChangeEventHandler RBCAOZUORowDeleting;
            
            public event RBCAOZUORowChangeEventHandler RBCAOZUORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddRBCAOZUORow(RBCAOZUORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUORow AddRBCAOZUORow(
                        decimal FJ, 
                        decimal LFLL, 
                        decimal FYLL, 
                        decimal LFYL, 
                        decimal RFYL, 
                        decimal RFWD, 
                        decimal PML, 
                        decimal TQX, 
                        decimal LDWD, 
                        decimal RSWD, 
                        decimal SJFS, 
                        decimal GFDN, 
                        decimal LDYL, 
                        decimal LX, 
                        string BZ, 
                        decimal GAOLU, 
                        System.DateTime SJ, 
                        decimal HOUR, 
                        decimal ZHFH, 
                        string RID, 
                        decimal LDWDXB, 
                        decimal LDWDDB, 
                        decimal LDWDDN, 
                        decimal LDWDXN, 
                        decimal MQLYL, 
                        decimal TEMP1, 
                        decimal TEMP2, 
                        decimal TEMP3, 
                        decimal TEMP4, 
                        decimal TEMP5, 
                        decimal TEMP6, 
                        decimal TEMP7, 
                        decimal TEMP8, 
                        decimal TEMP9, 
                        decimal RLB) {
                RBCAOZUORow rowRBCAOZUORow = ((RBCAOZUORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FJ,
                        LFLL,
                        FYLL,
                        LFYL,
                        RFYL,
                        RFWD,
                        PML,
                        TQX,
                        LDWD,
                        RSWD,
                        SJFS,
                        GFDN,
                        LDYL,
                        LX,
                        BZ,
                        GAOLU,
                        SJ,
                        HOUR,
                        ZHFH,
                        RID,
                        LDWDXB,
                        LDWDDB,
                        LDWDDN,
                        LDWDXN,
                        MQLYL,
                        TEMP1,
                        TEMP2,
                        TEMP3,
                        TEMP4,
                        TEMP5,
                        TEMP6,
                        TEMP7,
                        TEMP8,
                        TEMP9,
                        RLB};
                rowRBCAOZUORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowRBCAOZUORow);
                return rowRBCAOZUORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                RBCAOZUODataTable cln = ((RBCAOZUODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new RBCAOZUODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFJ = base.Columns["FJ"];
                this.columnLFLL = base.Columns["LFLL"];
                this.columnFYLL = base.Columns["FYLL"];
                this.columnLFYL = base.Columns["LFYL"];
                this.columnRFYL = base.Columns["RFYL"];
                this.columnRFWD = base.Columns["RFWD"];
                this.columnPML = base.Columns["PML"];
                this.columnTQX = base.Columns["TQX"];
                this.columnLDWD = base.Columns["LDWD"];
                this.columnRSWD = base.Columns["RSWD"];
                this.columnSJFS = base.Columns["SJFS"];
                this.columnGFDN = base.Columns["GFDN"];
                this.columnLDYL = base.Columns["LDYL"];
                this.columnLX = base.Columns["LX"];
                this.columnBZ = base.Columns["BZ"];
                this.columnGAOLU = base.Columns["GAOLU"];
                this.columnSJ = base.Columns["SJ"];
                this.columnHOUR = base.Columns["HOUR"];
                this.columnZHFH = base.Columns["ZHFH"];
                this.columnRID = base.Columns["RID"];
                this.columnLDWDXB = base.Columns["LDWDXB"];
                this.columnLDWDDB = base.Columns["LDWDDB"];
                this.columnLDWDDN = base.Columns["LDWDDN"];
                this.columnLDWDXN = base.Columns["LDWDXN"];
                this.columnMQLYL = base.Columns["MQLYL"];
                this.columnTEMP1 = base.Columns["TEMP1"];
                this.columnTEMP2 = base.Columns["TEMP2"];
                this.columnTEMP3 = base.Columns["TEMP3"];
                this.columnTEMP4 = base.Columns["TEMP4"];
                this.columnTEMP5 = base.Columns["TEMP5"];
                this.columnTEMP6 = base.Columns["TEMP6"];
                this.columnTEMP7 = base.Columns["TEMP7"];
                this.columnTEMP8 = base.Columns["TEMP8"];
                this.columnTEMP9 = base.Columns["TEMP9"];
                this.columnRLB = base.Columns["RLB"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFJ = new global::System.Data.DataColumn("FJ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFJ);
                this.columnLFLL = new global::System.Data.DataColumn("LFLL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFLL);
                this.columnFYLL = new global::System.Data.DataColumn("FYLL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFYLL);
                this.columnLFYL = new global::System.Data.DataColumn("LFYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFYL);
                this.columnRFYL = new global::System.Data.DataColumn("RFYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFYL);
                this.columnRFWD = new global::System.Data.DataColumn("RFWD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRFWD);
                this.columnPML = new global::System.Data.DataColumn("PML", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPML);
                this.columnTQX = new global::System.Data.DataColumn("TQX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTQX);
                this.columnLDWD = new global::System.Data.DataColumn("LDWD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDWD);
                this.columnRSWD = new global::System.Data.DataColumn("RSWD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSWD);
                this.columnSJFS = new global::System.Data.DataColumn("SJFS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJFS);
                this.columnGFDN = new global::System.Data.DataColumn("GFDN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGFDN);
                this.columnLDYL = new global::System.Data.DataColumn("LDYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDYL);
                this.columnLX = new global::System.Data.DataColumn("LX", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLX);
                this.columnBZ = new global::System.Data.DataColumn("BZ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBZ);
                this.columnGAOLU = new global::System.Data.DataColumn("GAOLU", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGAOLU);
                this.columnSJ = new global::System.Data.DataColumn("SJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSJ);
                this.columnHOUR = new global::System.Data.DataColumn("HOUR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUR);
                this.columnZHFH = new global::System.Data.DataColumn("ZHFH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZHFH);
                this.columnRID = new global::System.Data.DataColumn("RID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRID);
                this.columnLDWDXB = new global::System.Data.DataColumn("LDWDXB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDWDXB);
                this.columnLDWDDB = new global::System.Data.DataColumn("LDWDDB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDWDDB);
                this.columnLDWDDN = new global::System.Data.DataColumn("LDWDDN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDWDDN);
                this.columnLDWDXN = new global::System.Data.DataColumn("LDWDXN", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLDWDXN);
                this.columnMQLYL = new global::System.Data.DataColumn("MQLYL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMQLYL);
                this.columnTEMP1 = new global::System.Data.DataColumn("TEMP1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP1);
                this.columnTEMP2 = new global::System.Data.DataColumn("TEMP2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP2);
                this.columnTEMP3 = new global::System.Data.DataColumn("TEMP3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP3);
                this.columnTEMP4 = new global::System.Data.DataColumn("TEMP4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP4);
                this.columnTEMP5 = new global::System.Data.DataColumn("TEMP5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP5);
                this.columnTEMP6 = new global::System.Data.DataColumn("TEMP6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP6);
                this.columnTEMP7 = new global::System.Data.DataColumn("TEMP7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP7);
                this.columnTEMP8 = new global::System.Data.DataColumn("TEMP8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP8);
                this.columnTEMP9 = new global::System.Data.DataColumn("TEMP9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEMP9);
                this.columnRLB = new global::System.Data.DataColumn("RLB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRLB);
                this.columnLFLL.AllowDBNull = false;
                this.columnBZ.MaxLength = 40;
                this.columnGAOLU.AllowDBNull = false;
                this.columnHOUR.AllowDBNull = false;
                this.columnRID.AllowDBNull = false;
                this.columnRID.MaxLength = 3950;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUORow NewRBCAOZUORow() {
                return ((RBCAOZUORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new RBCAOZUORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(RBCAOZUORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.RBCAOZUORowChanged != null)) {
                    this.RBCAOZUORowChanged(this, new RBCAOZUORowChangeEvent(((RBCAOZUORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.RBCAOZUORowChanging != null)) {
                    this.RBCAOZUORowChanging(this, new RBCAOZUORowChangeEvent(((RBCAOZUORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.RBCAOZUORowDeleted != null)) {
                    this.RBCAOZUORowDeleted(this, new RBCAOZUORowChangeEvent(((RBCAOZUORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.RBCAOZUORowDeleting != null)) {
                    this.RBCAOZUORowDeleting(this, new RBCAOZUORowChangeEvent(((RBCAOZUORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveRBCAOZUORow(RBCAOZUORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                生产数据 ds = new 生产数据();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "RBCAOZUODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBBDRow : global::System.Data.DataRow {
            
            private RBBDDataTable tableRBBD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBBDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBBD = ((RBBDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BD {
                get {
                    if (this.IsBDNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRBBD.BDColumn]));
                    }
                }
                set {
                    this[this.tableRBBD.BDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBBD.SLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBBD”中列“SL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBBD.SLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DW {
                get {
                    if (this.IsDWNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRBBD.DWColumn]));
                    }
                }
                set {
                    this[this.tableRBBD.DWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FL {
                get {
                    if (this.IsFLNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRBBD.FLColumn]));
                    }
                }
                set {
                    this[this.tableRBBD.FLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SM {
                get {
                    if (this.IsSMNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableRBBD.SMColumn]));
                    }
                }
                set {
                    this[this.tableRBBD.SMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBBD.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBBD”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBBD.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBBD.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBBD”中列“RQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBBD.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBBD.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBBD”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBBD.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    try {
                        return ((string)(this[this.tableRBBD.RIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBBD”中列“RID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBBD.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBDNull() {
                return this.IsNull(this.tableRBBD.BDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBDNull() {
                this[this.tableRBBD.BDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSLNull() {
                return this.IsNull(this.tableRBBD.SLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSLNull() {
                this[this.tableRBBD.SLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDWNull() {
                return this.IsNull(this.tableRBBD.DWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDWNull() {
                this[this.tableRBBD.DWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLNull() {
                return this.IsNull(this.tableRBBD.FLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLNull() {
                this[this.tableRBBD.FLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSMNull() {
                return this.IsNull(this.tableRBBD.SMColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSMNull() {
                this[this.tableRBBD.SMColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBBD.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBBD.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableRBBD.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableRBBD.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBBD.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBBD.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRIDNull() {
                return this.IsNull(this.tableRBBD.RIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRIDNull() {
                this[this.tableRBBD.RIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBFKRow : global::System.Data.DataRow {
            
            private RBFKDataTable tableRBFK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBFKRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBFK = ((RBFKDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBFK.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YX {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.YXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“YX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.YXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GCY {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.GCYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“GCY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.GCYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“BZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RQ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBFK.RQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“RQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.RQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBFK.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK1 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK2 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK3 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK4 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK5 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK6 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK7 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK8 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK9 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK10 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK11 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK12 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK13 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK14 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK15 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK16 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK17 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK18 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK19 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FK20 {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.FK20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“FK20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.FK20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    try {
                        return ((string)(this[this.tableRBFK.RIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBFK”中列“RID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBFK.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBFK.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBFK.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYXNull() {
                return this.IsNull(this.tableRBFK.YXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYXNull() {
                this[this.tableRBFK.YXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGCYNull() {
                return this.IsNull(this.tableRBFK.GCYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGCYNull() {
                this[this.tableRBFK.GCYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableRBFK.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableRBFK.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRQNull() {
                return this.IsNull(this.tableRBFK.RQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRQNull() {
                this[this.tableRBFK.RQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBFK.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBFK.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK1Null() {
                return this.IsNull(this.tableRBFK.FK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK1Null() {
                this[this.tableRBFK.FK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK2Null() {
                return this.IsNull(this.tableRBFK.FK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK2Null() {
                this[this.tableRBFK.FK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK3Null() {
                return this.IsNull(this.tableRBFK.FK3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK3Null() {
                this[this.tableRBFK.FK3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK4Null() {
                return this.IsNull(this.tableRBFK.FK4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK4Null() {
                this[this.tableRBFK.FK4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK5Null() {
                return this.IsNull(this.tableRBFK.FK5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK5Null() {
                this[this.tableRBFK.FK5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK6Null() {
                return this.IsNull(this.tableRBFK.FK6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK6Null() {
                this[this.tableRBFK.FK6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK7Null() {
                return this.IsNull(this.tableRBFK.FK7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK7Null() {
                this[this.tableRBFK.FK7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK8Null() {
                return this.IsNull(this.tableRBFK.FK8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK8Null() {
                this[this.tableRBFK.FK8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK9Null() {
                return this.IsNull(this.tableRBFK.FK9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK9Null() {
                this[this.tableRBFK.FK9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK10Null() {
                return this.IsNull(this.tableRBFK.FK10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK10Null() {
                this[this.tableRBFK.FK10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK11Null() {
                return this.IsNull(this.tableRBFK.FK11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK11Null() {
                this[this.tableRBFK.FK11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK12Null() {
                return this.IsNull(this.tableRBFK.FK12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK12Null() {
                this[this.tableRBFK.FK12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK13Null() {
                return this.IsNull(this.tableRBFK.FK13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK13Null() {
                this[this.tableRBFK.FK13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK14Null() {
                return this.IsNull(this.tableRBFK.FK14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK14Null() {
                this[this.tableRBFK.FK14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK15Null() {
                return this.IsNull(this.tableRBFK.FK15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK15Null() {
                this[this.tableRBFK.FK15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK16Null() {
                return this.IsNull(this.tableRBFK.FK16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK16Null() {
                this[this.tableRBFK.FK16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK17Null() {
                return this.IsNull(this.tableRBFK.FK17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK17Null() {
                this[this.tableRBFK.FK17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK18Null() {
                return this.IsNull(this.tableRBFK.FK18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK18Null() {
                this[this.tableRBFK.FK18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK19Null() {
                return this.IsNull(this.tableRBFK.FK19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK19Null() {
                this[this.tableRBFK.FK19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFK20Null() {
                return this.IsNull(this.tableRBFK.FK20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFK20Null() {
                this[this.tableRBFK.FK20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRIDNull() {
                return this.IsNull(this.tableRBFK.RIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRIDNull() {
                this[this.tableRBFK.RIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBLIAOXIANBBRow : global::System.Data.DataRow {
            
            private RBLIAOXIANBBDataTable tableRBLIAOXIANBB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLIAOXIANBBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBLIAOXIANBB = ((RBLIAOXIANBBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOQIAN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANBB.LIAOQIANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“LIAOQIAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.LIAOQIANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOHOU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANBB.LIAOHOUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“LIAOHOU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.LIAOHOUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PISHU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANBB.PISHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“PISHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.PISHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime T {
                get {
                    return ((global::System.DateTime)(this[this.tableRBLIAOXIANBB.TColumn]));
                }
                set {
                    this[this.tableRBLIAOXIANBB.TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANBB.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JIANGE {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANBB.JIANGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“JIANGE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.JIANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JIAJIAO {
                get {
                    try {
                        return ((string)(this[this.tableRBLIAOXIANBB.JIAJIAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“JIAJIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.JIAJIAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BC {
                get {
                    try {
                        return ((string)(this[this.tableRBLIAOXIANBB.BCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“BC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal XIUGAI {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANBB.XIUGAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANBB”中列“XIUGAI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANBB.XIUGAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOQIANNull() {
                return this.IsNull(this.tableRBLIAOXIANBB.LIAOQIANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOQIANNull() {
                this[this.tableRBLIAOXIANBB.LIAOQIANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOHOUNull() {
                return this.IsNull(this.tableRBLIAOXIANBB.LIAOHOUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOHOUNull() {
                this[this.tableRBLIAOXIANBB.LIAOHOUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISHUNull() {
                return this.IsNull(this.tableRBLIAOXIANBB.PISHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISHUNull() {
                this[this.tableRBLIAOXIANBB.PISHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBLIAOXIANBB.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBLIAOXIANBB.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIANGENull() {
                return this.IsNull(this.tableRBLIAOXIANBB.JIANGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIANGENull() {
                this[this.tableRBLIAOXIANBB.JIANGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIAJIAONull() {
                return this.IsNull(this.tableRBLIAOXIANBB.JIAJIAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIAJIAONull() {
                this[this.tableRBLIAOXIANBB.JIAJIAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBCNull() {
                return this.IsNull(this.tableRBLIAOXIANBB.BCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBCNull() {
                this[this.tableRBLIAOXIANBB.BCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIUGAINull() {
                return this.IsNull(this.tableRBLIAOXIANBB.XIUGAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIUGAINull() {
                this[this.tableRBLIAOXIANBB.XIUGAIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBLQRow : global::System.Data.DataRow {
            
            private RBLQDataTable tableRBLQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLQRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBLQ = ((RBLQDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BC {
                get {
                    try {
                        return ((string)(this[this.tableRBLQ.BCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“BC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CC {
                get {
                    try {
                        return ((string)(this[this.tableRBLQ.CCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“CC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.CCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO2 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO3 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO4 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO5 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO6 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO7 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO8 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO9 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO10 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO10”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO11 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO11Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO11”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO12 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO12Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO12”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO12Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO13 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO13Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO13”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO13Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO14 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO14Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO14”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO14Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO15 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO15Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO15”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO15Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO16 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO16Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO16”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO16Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO17 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO17Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO17”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO17Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO18 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO18Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO18”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO18Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO19 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO19Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO19”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO19Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO20 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO20Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO20”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO21 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO21Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO21”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO21Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO22 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO22Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO22”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO22Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO23 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO23Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO23”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO23Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO24 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO24Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO24”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO24Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO25 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO25Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO25”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO25Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO26 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO26Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO26”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO26Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO27 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO27Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO27”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO27Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO28 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO28Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO28”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO28Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableRBLQ.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“BZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBLQ.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PJZ {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.PJZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“PJZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.PJZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO29 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO29Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO29”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO29Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO30 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO30Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO30”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO30Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO31 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO31Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO31”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO31Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO32 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO32Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO32”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO32Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO33 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO33Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO33”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO33Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO34 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO34Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO34”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO34Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO35 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO35Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO35”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO35Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO36 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO36Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO36”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO36Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO37 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO37Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO37”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO37Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO38 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO38Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO38”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO38Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO39 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO39Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO39”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO39Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO40 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO40Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO40”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO40Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO41 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO41Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO41”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO41Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO42 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO42Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO42”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO42Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO43 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO43Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO43”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO43Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO44 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO44Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO44”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO44Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO45 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO45Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO45”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO45Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO46 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO46Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO46”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO46Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO47 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO47Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO47”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO47Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO48 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO48Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO48”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO48Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO49 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO49Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO49”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO49Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HAO50 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLQ.HAO50Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“HAO50”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.HAO50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    try {
                        return ((string)(this[this.tableRBLQ.RIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLQ”中列“RID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLQ.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBLQ.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBLQ.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBCNull() {
                return this.IsNull(this.tableRBLQ.BCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBCNull() {
                this[this.tableRBLQ.BCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCCNull() {
                return this.IsNull(this.tableRBLQ.CCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCCNull() {
                this[this.tableRBLQ.CCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO1Null() {
                return this.IsNull(this.tableRBLQ.HAO1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO1Null() {
                this[this.tableRBLQ.HAO1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO2Null() {
                return this.IsNull(this.tableRBLQ.HAO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO2Null() {
                this[this.tableRBLQ.HAO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO3Null() {
                return this.IsNull(this.tableRBLQ.HAO3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO3Null() {
                this[this.tableRBLQ.HAO3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO4Null() {
                return this.IsNull(this.tableRBLQ.HAO4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO4Null() {
                this[this.tableRBLQ.HAO4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO5Null() {
                return this.IsNull(this.tableRBLQ.HAO5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO5Null() {
                this[this.tableRBLQ.HAO5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO6Null() {
                return this.IsNull(this.tableRBLQ.HAO6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO6Null() {
                this[this.tableRBLQ.HAO6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO7Null() {
                return this.IsNull(this.tableRBLQ.HAO7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO7Null() {
                this[this.tableRBLQ.HAO7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO8Null() {
                return this.IsNull(this.tableRBLQ.HAO8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO8Null() {
                this[this.tableRBLQ.HAO8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO9Null() {
                return this.IsNull(this.tableRBLQ.HAO9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO9Null() {
                this[this.tableRBLQ.HAO9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO10Null() {
                return this.IsNull(this.tableRBLQ.HAO10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO10Null() {
                this[this.tableRBLQ.HAO10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO11Null() {
                return this.IsNull(this.tableRBLQ.HAO11Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO11Null() {
                this[this.tableRBLQ.HAO11Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO12Null() {
                return this.IsNull(this.tableRBLQ.HAO12Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO12Null() {
                this[this.tableRBLQ.HAO12Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO13Null() {
                return this.IsNull(this.tableRBLQ.HAO13Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO13Null() {
                this[this.tableRBLQ.HAO13Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO14Null() {
                return this.IsNull(this.tableRBLQ.HAO14Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO14Null() {
                this[this.tableRBLQ.HAO14Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO15Null() {
                return this.IsNull(this.tableRBLQ.HAO15Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO15Null() {
                this[this.tableRBLQ.HAO15Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO16Null() {
                return this.IsNull(this.tableRBLQ.HAO16Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO16Null() {
                this[this.tableRBLQ.HAO16Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO17Null() {
                return this.IsNull(this.tableRBLQ.HAO17Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO17Null() {
                this[this.tableRBLQ.HAO17Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO18Null() {
                return this.IsNull(this.tableRBLQ.HAO18Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO18Null() {
                this[this.tableRBLQ.HAO18Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO19Null() {
                return this.IsNull(this.tableRBLQ.HAO19Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO19Null() {
                this[this.tableRBLQ.HAO19Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO20Null() {
                return this.IsNull(this.tableRBLQ.HAO20Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO20Null() {
                this[this.tableRBLQ.HAO20Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO21Null() {
                return this.IsNull(this.tableRBLQ.HAO21Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO21Null() {
                this[this.tableRBLQ.HAO21Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO22Null() {
                return this.IsNull(this.tableRBLQ.HAO22Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO22Null() {
                this[this.tableRBLQ.HAO22Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO23Null() {
                return this.IsNull(this.tableRBLQ.HAO23Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO23Null() {
                this[this.tableRBLQ.HAO23Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO24Null() {
                return this.IsNull(this.tableRBLQ.HAO24Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO24Null() {
                this[this.tableRBLQ.HAO24Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO25Null() {
                return this.IsNull(this.tableRBLQ.HAO25Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO25Null() {
                this[this.tableRBLQ.HAO25Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO26Null() {
                return this.IsNull(this.tableRBLQ.HAO26Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO26Null() {
                this[this.tableRBLQ.HAO26Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO27Null() {
                return this.IsNull(this.tableRBLQ.HAO27Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO27Null() {
                this[this.tableRBLQ.HAO27Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO28Null() {
                return this.IsNull(this.tableRBLQ.HAO28Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO28Null() {
                this[this.tableRBLQ.HAO28Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableRBLQ.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableRBLQ.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBLQ.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBLQ.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPJZNull() {
                return this.IsNull(this.tableRBLQ.PJZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPJZNull() {
                this[this.tableRBLQ.PJZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO29Null() {
                return this.IsNull(this.tableRBLQ.HAO29Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO29Null() {
                this[this.tableRBLQ.HAO29Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO30Null() {
                return this.IsNull(this.tableRBLQ.HAO30Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO30Null() {
                this[this.tableRBLQ.HAO30Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO31Null() {
                return this.IsNull(this.tableRBLQ.HAO31Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO31Null() {
                this[this.tableRBLQ.HAO31Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO32Null() {
                return this.IsNull(this.tableRBLQ.HAO32Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO32Null() {
                this[this.tableRBLQ.HAO32Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO33Null() {
                return this.IsNull(this.tableRBLQ.HAO33Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO33Null() {
                this[this.tableRBLQ.HAO33Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO34Null() {
                return this.IsNull(this.tableRBLQ.HAO34Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO34Null() {
                this[this.tableRBLQ.HAO34Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO35Null() {
                return this.IsNull(this.tableRBLQ.HAO35Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO35Null() {
                this[this.tableRBLQ.HAO35Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO36Null() {
                return this.IsNull(this.tableRBLQ.HAO36Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO36Null() {
                this[this.tableRBLQ.HAO36Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO37Null() {
                return this.IsNull(this.tableRBLQ.HAO37Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO37Null() {
                this[this.tableRBLQ.HAO37Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO38Null() {
                return this.IsNull(this.tableRBLQ.HAO38Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO38Null() {
                this[this.tableRBLQ.HAO38Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO39Null() {
                return this.IsNull(this.tableRBLQ.HAO39Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO39Null() {
                this[this.tableRBLQ.HAO39Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO40Null() {
                return this.IsNull(this.tableRBLQ.HAO40Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO40Null() {
                this[this.tableRBLQ.HAO40Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO41Null() {
                return this.IsNull(this.tableRBLQ.HAO41Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO41Null() {
                this[this.tableRBLQ.HAO41Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO42Null() {
                return this.IsNull(this.tableRBLQ.HAO42Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO42Null() {
                this[this.tableRBLQ.HAO42Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO43Null() {
                return this.IsNull(this.tableRBLQ.HAO43Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO43Null() {
                this[this.tableRBLQ.HAO43Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO44Null() {
                return this.IsNull(this.tableRBLQ.HAO44Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO44Null() {
                this[this.tableRBLQ.HAO44Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO45Null() {
                return this.IsNull(this.tableRBLQ.HAO45Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO45Null() {
                this[this.tableRBLQ.HAO45Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO46Null() {
                return this.IsNull(this.tableRBLQ.HAO46Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO46Null() {
                this[this.tableRBLQ.HAO46Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO47Null() {
                return this.IsNull(this.tableRBLQ.HAO47Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO47Null() {
                this[this.tableRBLQ.HAO47Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO48Null() {
                return this.IsNull(this.tableRBLQ.HAO48Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO48Null() {
                this[this.tableRBLQ.HAO48Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO49Null() {
                return this.IsNull(this.tableRBLQ.HAO49Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO49Null() {
                this[this.tableRBLQ.HAO49Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHAO50Null() {
                return this.IsNull(this.tableRBLQ.HAO50Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHAO50Null() {
                this[this.tableRBLQ.HAO50Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRIDNull() {
                return this.IsNull(this.tableRBLQ.RIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRIDNull() {
                this[this.tableRBLQ.RIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBXFRow : global::System.Data.DataRow {
            
            private RBXFDataTable tableRBXF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBXFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBXF = ((RBXFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXF.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC {
                get {
                    try {
                        return ((string)(this[this.tableRBXF.MCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“MC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.MCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime KS {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBXF.KSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“KS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.KSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ZZ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBXF.ZZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“ZZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.ZZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FL {
                get {
                    try {
                        return ((string)(this[this.tableRBXF.FLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“FL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.FLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string YY {
                get {
                    try {
                        return ((string)(this[this.tableRBXF.YYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“YY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.YYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBXF.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JG {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXF.JGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“JG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.JGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    try {
                        return ((string)(this[this.tableRBXF.RIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXF”中列“RID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXF.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBXF.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBXF.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMCNull() {
                return this.IsNull(this.tableRBXF.MCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMCNull() {
                this[this.tableRBXF.MCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKSNull() {
                return this.IsNull(this.tableRBXF.KSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKSNull() {
                this[this.tableRBXF.KSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZZNull() {
                return this.IsNull(this.tableRBXF.ZZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZZNull() {
                this[this.tableRBXF.ZZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFLNull() {
                return this.IsNull(this.tableRBXF.FLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFLNull() {
                this[this.tableRBXF.FLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYYNull() {
                return this.IsNull(this.tableRBXF.YYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYYNull() {
                this[this.tableRBXF.YYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBXF.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBXF.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJGNull() {
                return this.IsNull(this.tableRBXF.JGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJGNull() {
                this[this.tableRBXF.JGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRIDNull() {
                return this.IsNull(this.tableRBXF.RIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRIDNull() {
                this[this.tableRBXF.RIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBXIAOHAORow : global::System.Data.DataRow {
            
            private RBXIAOHAODataTable tableRBXIAOHAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBXIAOHAORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBXIAOHAO = ((RBXIAOHAODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MC {
                get {
                    try {
                        return ((string)(this[this.tableRBXIAOHAO.MCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“MC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.MCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BAIBAN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXIAOHAO.BAIBANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“BAIBAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.BAIBANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHONGBAN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXIAOHAO.ZHONGBANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“ZHONGBAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.ZHONGBANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YEBAN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXIAOHAO.YEBANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“YEBAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.YEBANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LEIJI {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXIAOHAO.LEIJIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“LEIJI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.LEIJIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBXIAOHAO.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BEIZHU {
                get {
                    try {
                        return ((string)(this[this.tableRBXIAOHAO.BEIZHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“BEIZHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.BEIZHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBXIAOHAO.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    try {
                        return ((string)(this[this.tableRBXIAOHAO.RIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBXIAOHAO”中列“RID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBXIAOHAO.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMCNull() {
                return this.IsNull(this.tableRBXIAOHAO.MCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMCNull() {
                this[this.tableRBXIAOHAO.MCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBAIBANNull() {
                return this.IsNull(this.tableRBXIAOHAO.BAIBANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBAIBANNull() {
                this[this.tableRBXIAOHAO.BAIBANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHONGBANNull() {
                return this.IsNull(this.tableRBXIAOHAO.ZHONGBANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHONGBANNull() {
                this[this.tableRBXIAOHAO.ZHONGBANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYEBANNull() {
                return this.IsNull(this.tableRBXIAOHAO.YEBANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYEBANNull() {
                this[this.tableRBXIAOHAO.YEBANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLEIJINull() {
                return this.IsNull(this.tableRBXIAOHAO.LEIJIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLEIJINull() {
                this[this.tableRBXIAOHAO.LEIJIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBXIAOHAO.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBXIAOHAO.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBEIZHUNull() {
                return this.IsNull(this.tableRBXIAOHAO.BEIZHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBEIZHUNull() {
                this[this.tableRBXIAOHAO.BEIZHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBXIAOHAO.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBXIAOHAO.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRIDNull() {
                return this.IsNull(this.tableRBXIAOHAO.RIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRIDNull() {
                this[this.tableRBXIAOHAO.RIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBZLBDRow : global::System.Data.DataRow {
            
            private RBZLBDDataTable tableRBZLBD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBZLBDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBZLBD = ((RBZLBDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBZLBD.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BC {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.BCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“BC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PICI {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.PICIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“PICI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.PICIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JS {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.JSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“JS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.JSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SQ {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.SQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“SQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.SQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QT {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.QTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“QT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.QTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JT {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.JTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“JT”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.JTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.JDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“JD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.JDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal KP {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.KPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“KP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.KPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JP {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.JPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“JP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.JPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JTFH {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.JTFHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“JTFH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.JTFHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PML {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.PMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“PML”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.PMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHFH {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.ZHFHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“ZHFH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.ZHFHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.ZLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“ZL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.ZLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal R2 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.R2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“R2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.R2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LLJD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.LLJDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“LLJD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.LLJDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZLSX {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.ZLSXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“ZLSX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.ZLSXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LX {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.LXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“LX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.LXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime BLSJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBZLBD.BLSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“BLSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.BLSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLYY {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.BLYYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“BLYY”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.BLYYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CLCH {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.CLCHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“CLCH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.CLCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LLTL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.LLTLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“LLTL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.LLTLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“BZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal YQ {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.YQColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“YQ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.YQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LLBC {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.LLBCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“LLBC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.LLBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BLJD {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.BLJDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“BLJD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.BLJDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LLJB {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.LLJBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“LLJB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.LLJBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    try {
                        return ((string)(this[this.tableRBZLBD.RIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“RID”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PBK {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.PBKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“PBK”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.PBKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FMGK {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.FMGKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“FMGK”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.FMGKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GZ {
                get {
                    try {
                        return ((decimal)(this[this.tableRBZLBD.GZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBZLBD”中列“GZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBZLBD.GZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBZLBD.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBZLBD.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBZLBD.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBZLBD.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBCNull() {
                return this.IsNull(this.tableRBZLBD.BCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBCNull() {
                this[this.tableRBZLBD.BCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPICINull() {
                return this.IsNull(this.tableRBZLBD.PICIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPICINull() {
                this[this.tableRBZLBD.PICIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJSNull() {
                return this.IsNull(this.tableRBZLBD.JSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJSNull() {
                this[this.tableRBZLBD.JSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSQNull() {
                return this.IsNull(this.tableRBZLBD.SQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSQNull() {
                this[this.tableRBZLBD.SQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQTNull() {
                return this.IsNull(this.tableRBZLBD.QTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQTNull() {
                this[this.tableRBZLBD.QTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJTNull() {
                return this.IsNull(this.tableRBZLBD.JTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJTNull() {
                this[this.tableRBZLBD.JTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJDNull() {
                return this.IsNull(this.tableRBZLBD.JDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJDNull() {
                this[this.tableRBZLBD.JDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKPNull() {
                return this.IsNull(this.tableRBZLBD.KPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKPNull() {
                this[this.tableRBZLBD.KPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJPNull() {
                return this.IsNull(this.tableRBZLBD.JPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJPNull() {
                this[this.tableRBZLBD.JPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJTFHNull() {
                return this.IsNull(this.tableRBZLBD.JTFHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJTFHNull() {
                this[this.tableRBZLBD.JTFHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMLNull() {
                return this.IsNull(this.tableRBZLBD.PMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMLNull() {
                this[this.tableRBZLBD.PMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHFHNull() {
                return this.IsNull(this.tableRBZLBD.ZHFHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHFHNull() {
                this[this.tableRBZLBD.ZHFHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZLNull() {
                return this.IsNull(this.tableRBZLBD.ZLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZLNull() {
                this[this.tableRBZLBD.ZLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsR2Null() {
                return this.IsNull(this.tableRBZLBD.R2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetR2Null() {
                this[this.tableRBZLBD.R2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLJDNull() {
                return this.IsNull(this.tableRBZLBD.LLJDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLJDNull() {
                this[this.tableRBZLBD.LLJDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZLSXNull() {
                return this.IsNull(this.tableRBZLBD.ZLSXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZLSXNull() {
                this[this.tableRBZLBD.ZLSXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLXNull() {
                return this.IsNull(this.tableRBZLBD.LXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLXNull() {
                this[this.tableRBZLBD.LXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLSJNull() {
                return this.IsNull(this.tableRBZLBD.BLSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLSJNull() {
                this[this.tableRBZLBD.BLSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLYYNull() {
                return this.IsNull(this.tableRBZLBD.BLYYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLYYNull() {
                this[this.tableRBZLBD.BLYYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCLCHNull() {
                return this.IsNull(this.tableRBZLBD.CLCHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCLCHNull() {
                this[this.tableRBZLBD.CLCHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLTLNull() {
                return this.IsNull(this.tableRBZLBD.LLTLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLTLNull() {
                this[this.tableRBZLBD.LLTLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableRBZLBD.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableRBZLBD.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsYQNull() {
                return this.IsNull(this.tableRBZLBD.YQColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetYQNull() {
                this[this.tableRBZLBD.YQColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLBCNull() {
                return this.IsNull(this.tableRBZLBD.LLBCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLBCNull() {
                this[this.tableRBZLBD.LLBCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBLJDNull() {
                return this.IsNull(this.tableRBZLBD.BLJDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBLJDNull() {
                this[this.tableRBZLBD.BLJDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLLJBNull() {
                return this.IsNull(this.tableRBZLBD.LLJBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLLJBNull() {
                this[this.tableRBZLBD.LLJBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRIDNull() {
                return this.IsNull(this.tableRBZLBD.RIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRIDNull() {
                this[this.tableRBZLBD.RIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBKNull() {
                return this.IsNull(this.tableRBZLBD.PBKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBKNull() {
                this[this.tableRBZLBD.PBKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFMGKNull() {
                return this.IsNull(this.tableRBZLBD.FMGKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFMGKNull() {
                this[this.tableRBZLBD.FMGKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGZNull() {
                return this.IsNull(this.tableRBZLBD.GZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGZNull() {
                this[this.tableRBZLBD.GZColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBLIAOXIANZBRow : global::System.Data.DataRow {
            
            private RBLIAOXIANZBDataTable tableRBLIAOXIANZB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLIAOXIANZBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBLIAOXIANZB = ((RBLIAOXIANZBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOQIAN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANZB.LIAOQIANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“LIAOQIAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.LIAOQIANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOHOU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANZB.LIAOHOUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“LIAOHOU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.LIAOHOUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PISHU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANZB.PISHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“PISHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.PISHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime T {
                get {
                    return ((global::System.DateTime)(this[this.tableRBLIAOXIANZB.TColumn]));
                }
                set {
                    this[this.tableRBLIAOXIANZB.TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANZB.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JIANGE {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANZB.JIANGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“JIANGE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.JIANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JIAJIAO {
                get {
                    try {
                        return ((string)(this[this.tableRBLIAOXIANZB.JIAJIAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“JIAJIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.JIAJIAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BC {
                get {
                    try {
                        return ((string)(this[this.tableRBLIAOXIANZB.BCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“BC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal XIUGAI {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANZB.XIUGAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANZB”中列“XIUGAI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANZB.XIUGAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOQIANNull() {
                return this.IsNull(this.tableRBLIAOXIANZB.LIAOQIANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOQIANNull() {
                this[this.tableRBLIAOXIANZB.LIAOQIANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOHOUNull() {
                return this.IsNull(this.tableRBLIAOXIANZB.LIAOHOUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOHOUNull() {
                this[this.tableRBLIAOXIANZB.LIAOHOUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISHUNull() {
                return this.IsNull(this.tableRBLIAOXIANZB.PISHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISHUNull() {
                this[this.tableRBLIAOXIANZB.PISHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBLIAOXIANZB.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBLIAOXIANZB.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIANGENull() {
                return this.IsNull(this.tableRBLIAOXIANZB.JIANGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIANGENull() {
                this[this.tableRBLIAOXIANZB.JIANGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIAJIAONull() {
                return this.IsNull(this.tableRBLIAOXIANZB.JIAJIAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIAJIAONull() {
                this[this.tableRBLIAOXIANZB.JIAJIAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBCNull() {
                return this.IsNull(this.tableRBLIAOXIANZB.BCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBCNull() {
                this[this.tableRBLIAOXIANZB.BCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIUGAINull() {
                return this.IsNull(this.tableRBLIAOXIANZB.XIUGAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIUGAINull() {
                this[this.tableRBLIAOXIANZB.XIUGAIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBLIAOXIANYBRow : global::System.Data.DataRow {
            
            private RBLIAOXIANYBDataTable tableRBLIAOXIANYB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBLIAOXIANYBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBLIAOXIANYB = ((RBLIAOXIANYBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOQIAN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANYB.LIAOQIANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“LIAOQIAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.LIAOQIANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOHOU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANYB.LIAOHOUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“LIAOHOU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.LIAOHOUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PISHU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANYB.PISHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“PISHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.PISHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime T {
                get {
                    return ((global::System.DateTime)(this[this.tableRBLIAOXIANYB.TColumn]));
                }
                set {
                    this[this.tableRBLIAOXIANYB.TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANYB.GAOLUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“GAOLU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JIANGE {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANYB.JIANGEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“JIANGE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.JIANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JIAJIAO {
                get {
                    try {
                        return ((string)(this[this.tableRBLIAOXIANYB.JIAJIAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“JIAJIAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.JIAJIAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BC {
                get {
                    try {
                        return ((string)(this[this.tableRBLIAOXIANYB.BCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“BC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal XIUGAI {
                get {
                    try {
                        return ((decimal)(this[this.tableRBLIAOXIANYB.XIUGAIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBLIAOXIANYB”中列“XIUGAI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBLIAOXIANYB.XIUGAIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOQIANNull() {
                return this.IsNull(this.tableRBLIAOXIANYB.LIAOQIANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOQIANNull() {
                this[this.tableRBLIAOXIANYB.LIAOQIANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOHOUNull() {
                return this.IsNull(this.tableRBLIAOXIANYB.LIAOHOUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOHOUNull() {
                this[this.tableRBLIAOXIANYB.LIAOHOUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISHUNull() {
                return this.IsNull(this.tableRBLIAOXIANYB.PISHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISHUNull() {
                this[this.tableRBLIAOXIANYB.PISHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGAOLUNull() {
                return this.IsNull(this.tableRBLIAOXIANYB.GAOLUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGAOLUNull() {
                this[this.tableRBLIAOXIANYB.GAOLUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIANGENull() {
                return this.IsNull(this.tableRBLIAOXIANYB.JIANGEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIANGENull() {
                this[this.tableRBLIAOXIANYB.JIANGEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIAJIAONull() {
                return this.IsNull(this.tableRBLIAOXIANYB.JIAJIAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIAJIAONull() {
                this[this.tableRBLIAOXIANYB.JIAJIAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBCNull() {
                return this.IsNull(this.tableRBLIAOXIANYB.BCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBCNull() {
                this[this.tableRBLIAOXIANYB.BCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXIUGAINull() {
                return this.IsNull(this.tableRBLIAOXIANYB.XIUGAIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXIUGAINull() {
                this[this.tableRBLIAOXIANYB.XIUGAIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class DDLUCIRow : global::System.Data.DataRow {
            
            private DDLUCIDataTable tableDDLUCI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal DDLUCIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDDLUCI = ((DDLUCIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LUCI {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.LUCIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“LUCI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.LUCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableDDLUCI.GAOLUColumn]));
                }
                set {
                    this[this.tableDDLUCI.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ZDSJ {
                get {
                    return ((global::System.DateTime)(this[this.tableDDLUCI.ZDSJColumn]));
                }
                set {
                    this[this.tableDDLUCI.ZDSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DGSJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDDLUCI.DGSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“DGSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.DGSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime KKSJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDDLUCI.KKSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“KKSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.KKSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DKSJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDDLUCI.DKSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“DKSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.DKSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal WDSJ {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.WDSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“WDSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.WDSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QUCHU {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.QUCHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“QUCHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.QUCHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GFELIANG {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.GFELIANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“GFELIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.GFELIANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LFELIANG {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.LFELIANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“LFELIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.LFELIANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FELIANG {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FELIANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FELIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FELIANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOPI {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.LIAOPIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“LIAOPI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.LIAOPIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GGUANSHU {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.GGUANSHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“GGUANSHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.GGUANSHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEWENDU {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEWENDUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEWENDU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEWENDUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEC {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FESI {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FESIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FESI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FESIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEMN {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEMNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEMN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEMNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEP {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEP”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FES {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FES”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FETI {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FETIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FETI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FETIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GFESI {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.GFESIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“GFESI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.GFESIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GFES {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.GFESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“GFES”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.GFESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHENDU {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.SHENDUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“SHENDU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.SHENDUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JIAODU {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.JIAODUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“JIAODU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.JIAODUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal DANILIANG {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.DANILIANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“DANILIANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.DANILIANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZHAYANG {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.ZHAYANGColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAYANG”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAYANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHUIWEN1 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.SHUIWEN1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“SHUIWEN1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.SHUIWEN1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SHUIWEN2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.SHUIWEN2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“SHUIWEN2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.SHUIWEN2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHASIO2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHASIO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHASIO2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHASIO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHACAO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHACAOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHACAO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHACAOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAMGO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHAMGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAMGO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAMGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAAL2O3 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHAAL2O3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAAL2O3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAAL2O3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAS {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHATIO2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHATIO2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHATIO2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHATIO2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAR2 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHAR2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAR2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAR2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BANCI {
                get {
                    return ((string)(this[this.tableDDLUCI.BANCIColumn]));
                }
                set {
                    this[this.tableDDLUCI.BANCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal BANLUCI {
                get {
                    return ((decimal)(this[this.tableDDLUCI.BANLUCIColumn]));
                }
                set {
                    this[this.tableDDLUCI.BANLUCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FENLEI {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.FENLEIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FENLEI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FENLEIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal JIAOYAN {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.JIAOYANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“JIAOYAN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.JIAOYANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TZSJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDDLUCI.TZSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“TZSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.TZSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PNQK1 {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.PNQK1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“PNQK1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.PNQK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PNQK2 {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.PNQK2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“PNQK2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.PNQK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAR3 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHAR3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAR3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAR3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAR4 {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHAR4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAR4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAR4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHAMGOALO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.ZHAMGOALOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“ZHAMGOALO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.ZHAMGOALOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime LZQK {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDDLUCI.LZQKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“LZQK”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.LZQKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CTC {
                get {
                    try {
                        return ((string)(this[this.tableDDLUCI.CTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“CTC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.CTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FECR {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FECRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FECR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FECRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FENI {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FENIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FENI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FENIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FESB {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FESBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FESB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FESBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEAS {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEAS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEPB {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEPBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEPB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEMO {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEMOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEMO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FECU {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FECUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FECU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FECUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEB {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEV {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEVColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEV”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEVColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEAL {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEAL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FENB {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FENBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FENB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FENBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEW {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEW”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FEZN {
                get {
                    try {
                        return ((decimal)(this[this.tableDDLUCI.FEZNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“DDLUCI”中列“FEZN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDDLUCI.FEZNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLUCINull() {
                return this.IsNull(this.tableDDLUCI.LUCIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLUCINull() {
                this[this.tableDDLUCI.LUCIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDGSJNull() {
                return this.IsNull(this.tableDDLUCI.DGSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDGSJNull() {
                this[this.tableDDLUCI.DGSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsKKSJNull() {
                return this.IsNull(this.tableDDLUCI.KKSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetKKSJNull() {
                this[this.tableDDLUCI.KKSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDKSJNull() {
                return this.IsNull(this.tableDDLUCI.DKSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDKSJNull() {
                this[this.tableDDLUCI.DKSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWDSJNull() {
                return this.IsNull(this.tableDDLUCI.WDSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWDSJNull() {
                this[this.tableDDLUCI.WDSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQUCHUNull() {
                return this.IsNull(this.tableDDLUCI.QUCHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQUCHUNull() {
                this[this.tableDDLUCI.QUCHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFELIANGNull() {
                return this.IsNull(this.tableDDLUCI.GFELIANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFELIANGNull() {
                this[this.tableDDLUCI.GFELIANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFELIANGNull() {
                return this.IsNull(this.tableDDLUCI.LFELIANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFELIANGNull() {
                this[this.tableDDLUCI.LFELIANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFELIANGNull() {
                return this.IsNull(this.tableDDLUCI.FELIANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFELIANGNull() {
                this[this.tableDDLUCI.FELIANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLIAOPINull() {
                return this.IsNull(this.tableDDLUCI.LIAOPIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLIAOPINull() {
                this[this.tableDDLUCI.LIAOPIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGGUANSHUNull() {
                return this.IsNull(this.tableDDLUCI.GGUANSHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGGUANSHUNull() {
                this[this.tableDDLUCI.GGUANSHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEWENDUNull() {
                return this.IsNull(this.tableDDLUCI.FEWENDUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEWENDUNull() {
                this[this.tableDDLUCI.FEWENDUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFECNull() {
                return this.IsNull(this.tableDDLUCI.FECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFECNull() {
                this[this.tableDDLUCI.FECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFESINull() {
                return this.IsNull(this.tableDDLUCI.FESIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFESINull() {
                this[this.tableDDLUCI.FESIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEMNNull() {
                return this.IsNull(this.tableDDLUCI.FEMNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEMNNull() {
                this[this.tableDDLUCI.FEMNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEPNull() {
                return this.IsNull(this.tableDDLUCI.FEPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEPNull() {
                this[this.tableDDLUCI.FEPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFESNull() {
                return this.IsNull(this.tableDDLUCI.FESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFESNull() {
                this[this.tableDDLUCI.FESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFETINull() {
                return this.IsNull(this.tableDDLUCI.FETIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFETINull() {
                this[this.tableDDLUCI.FETIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFESINull() {
                return this.IsNull(this.tableDDLUCI.GFESIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFESINull() {
                this[this.tableDDLUCI.GFESIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFESNull() {
                return this.IsNull(this.tableDDLUCI.GFESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFESNull() {
                this[this.tableDDLUCI.GFESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHENDUNull() {
                return this.IsNull(this.tableDDLUCI.SHENDUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHENDUNull() {
                this[this.tableDDLUCI.SHENDUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIAODUNull() {
                return this.IsNull(this.tableDDLUCI.JIAODUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIAODUNull() {
                this[this.tableDDLUCI.JIAODUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDANILIANGNull() {
                return this.IsNull(this.tableDDLUCI.DANILIANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDANILIANGNull() {
                this[this.tableDDLUCI.DANILIANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAYANGNull() {
                return this.IsNull(this.tableDDLUCI.ZHAYANGColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAYANGNull() {
                this[this.tableDDLUCI.ZHAYANGColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHUIWEN1Null() {
                return this.IsNull(this.tableDDLUCI.SHUIWEN1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHUIWEN1Null() {
                this[this.tableDDLUCI.SHUIWEN1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHUIWEN2Null() {
                return this.IsNull(this.tableDDLUCI.SHUIWEN2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHUIWEN2Null() {
                this[this.tableDDLUCI.SHUIWEN2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHASIO2Null() {
                return this.IsNull(this.tableDDLUCI.ZHASIO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHASIO2Null() {
                this[this.tableDDLUCI.ZHASIO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHACAONull() {
                return this.IsNull(this.tableDDLUCI.ZHACAOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHACAONull() {
                this[this.tableDDLUCI.ZHACAOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAMGONull() {
                return this.IsNull(this.tableDDLUCI.ZHAMGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAMGONull() {
                this[this.tableDDLUCI.ZHAMGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAAL2O3Null() {
                return this.IsNull(this.tableDDLUCI.ZHAAL2O3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAAL2O3Null() {
                this[this.tableDDLUCI.ZHAAL2O3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHASNull() {
                return this.IsNull(this.tableDDLUCI.ZHASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHASNull() {
                this[this.tableDDLUCI.ZHASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHATIO2Null() {
                return this.IsNull(this.tableDDLUCI.ZHATIO2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHATIO2Null() {
                this[this.tableDDLUCI.ZHATIO2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAR2Null() {
                return this.IsNull(this.tableDDLUCI.ZHAR2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAR2Null() {
                this[this.tableDDLUCI.ZHAR2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFENLEINull() {
                return this.IsNull(this.tableDDLUCI.FENLEIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFENLEINull() {
                this[this.tableDDLUCI.FENLEIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJIAOYANNull() {
                return this.IsNull(this.tableDDLUCI.JIAOYANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJIAOYANNull() {
                this[this.tableDDLUCI.JIAOYANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTZSJNull() {
                return this.IsNull(this.tableDDLUCI.TZSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTZSJNull() {
                this[this.tableDDLUCI.TZSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNQK1Null() {
                return this.IsNull(this.tableDDLUCI.PNQK1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNQK1Null() {
                this[this.tableDDLUCI.PNQK1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNQK2Null() {
                return this.IsNull(this.tableDDLUCI.PNQK2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNQK2Null() {
                this[this.tableDDLUCI.PNQK2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAR3Null() {
                return this.IsNull(this.tableDDLUCI.ZHAR3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAR3Null() {
                this[this.tableDDLUCI.ZHAR3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAR4Null() {
                return this.IsNull(this.tableDDLUCI.ZHAR4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAR4Null() {
                this[this.tableDDLUCI.ZHAR4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHAMGOALONull() {
                return this.IsNull(this.tableDDLUCI.ZHAMGOALOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHAMGOALONull() {
                this[this.tableDDLUCI.ZHAMGOALOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLZQKNull() {
                return this.IsNull(this.tableDDLUCI.LZQKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLZQKNull() {
                this[this.tableDDLUCI.LZQKColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCTCNull() {
                return this.IsNull(this.tableDDLUCI.CTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCTCNull() {
                this[this.tableDDLUCI.CTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFECRNull() {
                return this.IsNull(this.tableDDLUCI.FECRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFECRNull() {
                this[this.tableDDLUCI.FECRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFENINull() {
                return this.IsNull(this.tableDDLUCI.FENIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFENINull() {
                this[this.tableDDLUCI.FENIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFESBNull() {
                return this.IsNull(this.tableDDLUCI.FESBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFESBNull() {
                this[this.tableDDLUCI.FESBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEASNull() {
                return this.IsNull(this.tableDDLUCI.FEASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEASNull() {
                this[this.tableDDLUCI.FEASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEPBNull() {
                return this.IsNull(this.tableDDLUCI.FEPBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEPBNull() {
                this[this.tableDDLUCI.FEPBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEMONull() {
                return this.IsNull(this.tableDDLUCI.FEMOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEMONull() {
                this[this.tableDDLUCI.FEMOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFECUNull() {
                return this.IsNull(this.tableDDLUCI.FECUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFECUNull() {
                this[this.tableDDLUCI.FECUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEBNull() {
                return this.IsNull(this.tableDDLUCI.FEBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEBNull() {
                this[this.tableDDLUCI.FEBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEVNull() {
                return this.IsNull(this.tableDDLUCI.FEVColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEVNull() {
                this[this.tableDDLUCI.FEVColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEALNull() {
                return this.IsNull(this.tableDDLUCI.FEALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEALNull() {
                this[this.tableDDLUCI.FEALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFENBNull() {
                return this.IsNull(this.tableDDLUCI.FENBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFENBNull() {
                this[this.tableDDLUCI.FENBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEWNull() {
                return this.IsNull(this.tableDDLUCI.FEWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEWNull() {
                this[this.tableDDLUCI.FEWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFEZNNull() {
                return this.IsNull(this.tableDDLUCI.FEZNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFEZNNull() {
                this[this.tableDDLUCI.FEZNColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBJSRow : global::System.Data.DataRow {
            
            private RBJSDataTable tableRBJS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBJSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBJS = ((RBJSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBJS.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBJS”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBJS.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JS {
                get {
                    try {
                        return ((string)(this[this.tableRBJS.JSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBJS”中列“JS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBJS.JSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableRBJS.GAOLUColumn]));
                }
                set {
                    this[this.tableRBJS.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBJS.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBJS.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJSNull() {
                return this.IsNull(this.tableRBJS.JSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJSNull() {
                this[this.tableRBJS.JSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LT_LIAORow : global::System.Data.DataRow {
            
            private LT_LIAODataTable tableLT_LIAO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LT_LIAORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLT_LIAO = ((LT_LIAODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime T {
                get {
                    return ((global::System.DateTime)(this[this.tableLT_LIAO.TColumn]));
                }
                set {
                    this[this.tableLT_LIAO.TColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableLT_LIAO.GAOLUColumn]));
                }
                set {
                    this[this.tableLT_LIAO.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PISHU {
                get {
                    try {
                        return ((decimal)(this[this.tableLT_LIAO.PISHUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LT_LIAO”中列“PISHU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLT_LIAO.PISHUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SYR {
                get {
                    try {
                        return ((decimal)(this[this.tableLT_LIAO.SYRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LT_LIAO”中列“SYR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLT_LIAO.SYRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SYRBL {
                get {
                    try {
                        return ((decimal)(this[this.tableLT_LIAO.SYRBLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“LT_LIAO”中列“SYRBL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableLT_LIAO.SYRBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPISHUNull() {
                return this.IsNull(this.tableLT_LIAO.PISHUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPISHUNull() {
                this[this.tableLT_LIAO.PISHUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYRNull() {
                return this.IsNull(this.tableLT_LIAO.SYRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYRNull() {
                this[this.tableLT_LIAO.SYRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSYRBLNull() {
                return this.IsNull(this.tableLT_LIAO.SYRBLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSYRBLNull() {
                this[this.tableLT_LIAO.SYRBLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class SHIJIGUIRow : global::System.Data.DataRow {
            
            private SHIJIGUIDataTable tableSHIJIGUI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SHIJIGUIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSHIJIGUI = ((SHIJIGUIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DKSJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSHIJIGUI.DKSJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“SHIJIGUI”中列“DKSJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSHIJIGUI.DKSJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FESI {
                get {
                    try {
                        return ((decimal)(this[this.tableSHIJIGUI.FESIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“SHIJIGUI”中列“FESI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSHIJIGUI.FESIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDKSJNull() {
                return this.IsNull(this.tableSHIJIGUI.DKSJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDKSJNull() {
                this[this.tableSHIJIGUI.DKSJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFESINull() {
                return this.IsNull(this.tableSHIJIGUI.FESIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFESINull() {
                this[this.tableSHIJIGUI.FESIColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ALARMRow : global::System.Data.DataRow {
            
            private ALARMDataTable tableALARM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ALARMRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableALARM = ((ALARMDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CLOCK {
                get {
                    return ((global::System.DateTime)(this[this.tableALARM.CLOCKColumn]));
                }
                set {
                    this[this.tableALARM.CLOCKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableALARM.GAOLUColumn]));
                }
                set {
                    this[this.tableALARM.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LUKUANG {
                get {
                    return ((string)(this[this.tableALARM.LUKUANGColumn]));
                }
                set {
                    this[this.tableALARM.LUKUANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFENGYL1 {
                get {
                    return ((decimal)(this[this.tableALARM.REFENGYL1Column]));
                }
                set {
                    this[this.tableALARM.REFENGYL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal REFENGYL2 {
                get {
                    return ((decimal)(this[this.tableALARM.REFENGYL2Column]));
                }
                set {
                    this[this.tableALARM.REFENGYL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LENGFENGLL1 {
                get {
                    return ((decimal)(this[this.tableALARM.LENGFENGLL1Column]));
                }
                set {
                    this[this.tableALARM.LENGFENGLL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LENGFENGLL2 {
                get {
                    return ((decimal)(this[this.tableALARM.LENGFENGLL2Column]));
                }
                set {
                    this[this.tableALARM.LENGFENGLL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOXIAN1 {
                get {
                    return ((decimal)(this[this.tableALARM.LIAOXIAN1Column]));
                }
                set {
                    this[this.tableALARM.LIAOXIAN1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOXIAN2 {
                get {
                    return ((decimal)(this[this.tableALARM.LIAOXIAN2Column]));
                }
                set {
                    this[this.tableALARM.LIAOXIAN2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOXIAN3 {
                get {
                    return ((decimal)(this[this.tableALARM.LIAOXIAN3Column]));
                }
                set {
                    this[this.tableALARM.LIAOXIAN3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LIAOXIAN4 {
                get {
                    return ((decimal)(this[this.tableALARM.LIAOXIAN4Column]));
                }
                set {
                    this[this.tableALARM.LIAOXIAN4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LUDINGWD1 {
                get {
                    return ((decimal)(this[this.tableALARM.LUDINGWD1Column]));
                }
                set {
                    this[this.tableALARM.LUDINGWD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LUDINGWD2 {
                get {
                    return ((decimal)(this[this.tableALARM.LUDINGWD2Column]));
                }
                set {
                    this[this.tableALARM.LUDINGWD2Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBGZRow : global::System.Data.DataRow {
            
            private RBGZDataTable tableRBGZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBGZRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBGZ = ((RBGZDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBGZ.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBGZ”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBGZ.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BC {
                get {
                    try {
                        return ((string)(this[this.tableRBGZ.BCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBGZ”中列“BC”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBGZ.BCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JL {
                get {
                    try {
                        return ((string)(this[this.tableRBGZ.JLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBGZ”中列“JL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBGZ.JLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableRBGZ.GAOLUColumn]));
                }
                set {
                    this[this.tableRBGZ.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBGZ.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBGZ.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBCNull() {
                return this.IsNull(this.tableRBGZ.BCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBCNull() {
                this[this.tableRBGZ.BCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJLNull() {
                return this.IsNull(this.tableRBGZ.JLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJLNull() {
                this[this.tableRBGZ.JLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBCAOZUO1Row : global::System.Data.DataRow {
            
            private RBCAOZUO1DataTable tableRBCAOZUO1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBCAOZUO1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBCAOZUO1 = ((RBCAOZUO1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableRBCAOZUO1.GAOLUColumn]));
                }
                set {
                    this[this.tableRBCAOZUO1.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FJ {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.FJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“FJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.FJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LFLL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.LFLLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“LFLL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.LFLLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FYLL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.FYLLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“FYLL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.FYLLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RFYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.RFYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“RFYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.RFYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RFWD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.RFWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“RFWD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.RFWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PML {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.PMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“PML”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.PMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TQX {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.TQXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“TQX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.TQXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDWD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.LDWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“LDWD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.LDWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RSWD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.RSWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“RSWD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.RSWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SJFS {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.SJFSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“SJFS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.SJFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GFDN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.GFDNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“GFDN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.GFDNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.LDYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“LDYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.LDYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LX {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.LXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“LX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.LXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBCAOZUO1.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHFH {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.ZHFHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“ZHFH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.ZHFHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LFYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.LFYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“LFYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.LFYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MQLYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.MQLYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“MQLYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.MQLYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RLB {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO1.RLBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO1”中列“RLB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO1.RLBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFJNull() {
                return this.IsNull(this.tableRBCAOZUO1.FJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFJNull() {
                this[this.tableRBCAOZUO1.FJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFLLNull() {
                return this.IsNull(this.tableRBCAOZUO1.LFLLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFLLNull() {
                this[this.tableRBCAOZUO1.LFLLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYLLNull() {
                return this.IsNull(this.tableRBCAOZUO1.FYLLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYLLNull() {
                this[this.tableRBCAOZUO1.FYLLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFYLNull() {
                return this.IsNull(this.tableRBCAOZUO1.RFYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFYLNull() {
                this[this.tableRBCAOZUO1.RFYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFWDNull() {
                return this.IsNull(this.tableRBCAOZUO1.RFWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFWDNull() {
                this[this.tableRBCAOZUO1.RFWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMLNull() {
                return this.IsNull(this.tableRBCAOZUO1.PMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMLNull() {
                this[this.tableRBCAOZUO1.PMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTQXNull() {
                return this.IsNull(this.tableRBCAOZUO1.TQXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTQXNull() {
                this[this.tableRBCAOZUO1.TQXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDWDNull() {
                return this.IsNull(this.tableRBCAOZUO1.LDWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDWDNull() {
                this[this.tableRBCAOZUO1.LDWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRSWDNull() {
                return this.IsNull(this.tableRBCAOZUO1.RSWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRSWDNull() {
                this[this.tableRBCAOZUO1.RSWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJFSNull() {
                return this.IsNull(this.tableRBCAOZUO1.SJFSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJFSNull() {
                this[this.tableRBCAOZUO1.SJFSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFDNNull() {
                return this.IsNull(this.tableRBCAOZUO1.GFDNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFDNNull() {
                this[this.tableRBCAOZUO1.GFDNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDYLNull() {
                return this.IsNull(this.tableRBCAOZUO1.LDYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDYLNull() {
                this[this.tableRBCAOZUO1.LDYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLXNull() {
                return this.IsNull(this.tableRBCAOZUO1.LXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLXNull() {
                this[this.tableRBCAOZUO1.LXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBCAOZUO1.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBCAOZUO1.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHFHNull() {
                return this.IsNull(this.tableRBCAOZUO1.ZHFHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHFHNull() {
                this[this.tableRBCAOZUO1.ZHFHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFYLNull() {
                return this.IsNull(this.tableRBCAOZUO1.LFYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFYLNull() {
                this[this.tableRBCAOZUO1.LFYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMQLYLNull() {
                return this.IsNull(this.tableRBCAOZUO1.MQLYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMQLYLNull() {
                this[this.tableRBCAOZUO1.MQLYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRLBNull() {
                return this.IsNull(this.tableRBCAOZUO1.RLBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRLBNull() {
                this[this.tableRBCAOZUO1.RLBColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CQA_IRON_ELEMENT_TEXTRow : global::System.Data.DataRow {
            
            private CQA_IRON_ELEMENT_TEXTDataTable tableCQA_IRON_ELEMENT_TEXT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CQA_IRON_ELEMENT_TEXTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCQA_IRON_ELEMENT_TEXT = ((CQA_IRON_ELEMENT_TEXTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAMPLE_CODE {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_CODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“SAMPLE_CODE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SAMPLE_ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“SAMPLE_ADDRESS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOGTIME {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.LOGTIMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“LOGTIME”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.LOGTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string REPORT_DATE {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.REPORT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“REPORT_DATE”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.REPORT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string C {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“C”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SI {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.SIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“SI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.SIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MN {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.MNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“MN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.MNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string P {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.PColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“P”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string S {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.SColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“S”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.SColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TI {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.TIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“TI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.TIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SN {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.SNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“SN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.SNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SB {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.SBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“SB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.SBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AS {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.ASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“AS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.ASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PB {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.PBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“PB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.PBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NI {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.NIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“NI”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.NIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MO {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.MOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“MO”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.MOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CU {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.CUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“CU”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.CUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CR {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.CRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“CR”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.CRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string B {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.BColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“B”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string V {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.VColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“V”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.VColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AL {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.ALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“AL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.ALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NB {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.NBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“NB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.NBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ZN {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.ZNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“ZN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.ZNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string W {
                get {
                    try {
                        return ((string)(this[this.tableCQA_IRON_ELEMENT_TEXT.WColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“CQA_IRON_ELEMENT_TEXT”中列“W”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCQA_IRON_ELEMENT_TEXT.WColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMPLE_CODENull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_CODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMPLE_CODENull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_CODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSAMPLE_ADDRESSNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSAMPLE_ADDRESSNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.SAMPLE_ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOGTIMENull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.LOGTIMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOGTIMENull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.LOGTIMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsREPORT_DATENull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.REPORT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetREPORT_DATENull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.REPORT_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSINull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.SIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSINull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.SIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMNNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.MNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMNNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.MNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.PColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.PColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.SColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.SColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTINull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.TIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTINull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.TIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSNNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.SNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSNNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.SNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSBNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.SBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSBNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.SBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsASNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.ASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetASNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.ASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPBNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.PBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPBNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.PBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNINull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.NIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNINull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.NIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMONull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.MOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMONull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.MOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.CUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.CUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCRNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.CRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCRNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.CRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.BColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.BColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.VColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.VColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsALNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.ALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetALNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.ALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNBNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.NBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNBNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.NBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZNNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.ZNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZNNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.ZNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWNull() {
                return this.IsNull(this.tableCQA_IRON_ELEMENT_TEXT.WColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWNull() {
                this[this.tableCQA_IRON_ELEMENT_TEXT.WColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class RBCAOZUORow : global::System.Data.DataRow {
            
            private RBCAOZUODataTable tableRBCAOZUO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal RBCAOZUORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableRBCAOZUO = ((RBCAOZUODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FJ {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.FJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“FJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.FJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LFLL {
                get {
                    return ((decimal)(this[this.tableRBCAOZUO.LFLLColumn]));
                }
                set {
                    this[this.tableRBCAOZUO.LFLLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal FYLL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.FYLLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“FYLL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.FYLLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LFYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LFYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LFYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LFYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RFYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.RFYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“RFYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.RFYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RFWD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.RFWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“RFWD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.RFWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PML {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.PMLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“PML”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.PMLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TQX {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TQXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TQX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TQXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDWD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LDWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LDWD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LDWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RSWD {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.RSWDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“RSWD”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.RSWDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal SJFS {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.SJFSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“SJFS”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.SJFSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GFDN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.GFDNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“GFDN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.GFDNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LDYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LDYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LDYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LX {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LXColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LX”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BZ {
                get {
                    try {
                        return ((string)(this[this.tableRBCAOZUO.BZColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“BZ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.BZColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal GAOLU {
                get {
                    return ((decimal)(this[this.tableRBCAOZUO.GAOLUColumn]));
                }
                set {
                    this[this.tableRBCAOZUO.GAOLUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SJ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableRBCAOZUO.SJColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“SJ”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.SJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal HOUR {
                get {
                    return ((decimal)(this[this.tableRBCAOZUO.HOURColumn]));
                }
                set {
                    this[this.tableRBCAOZUO.HOURColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal ZHFH {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.ZHFHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“ZHFH”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.ZHFHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RID {
                get {
                    return ((string)(this[this.tableRBCAOZUO.RIDColumn]));
                }
                set {
                    this[this.tableRBCAOZUO.RIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDWDXB {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LDWDXBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LDWDXB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LDWDXBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDWDDB {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LDWDDBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LDWDDB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LDWDDBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDWDDN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LDWDDNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LDWDDN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LDWDDNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal LDWDXN {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.LDWDXNColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“LDWDXN”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.LDWDXNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal MQLYL {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.MQLYLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“MQLYL”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.MQLYLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP1 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP2 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP3 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP3”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP4 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP4”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP5 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP5”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP6 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP6”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP7 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP7”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP8 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP8”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal TEMP9 {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.TEMP9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“TEMP9”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.TEMP9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal RLB {
                get {
                    try {
                        return ((decimal)(this[this.tableRBCAOZUO.RLBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“RBCAOZUO”中列“RLB”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tableRBCAOZUO.RLBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFJNull() {
                return this.IsNull(this.tableRBCAOZUO.FJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFJNull() {
                this[this.tableRBCAOZUO.FJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFYLLNull() {
                return this.IsNull(this.tableRBCAOZUO.FYLLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFYLLNull() {
                this[this.tableRBCAOZUO.FYLLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLFYLNull() {
                return this.IsNull(this.tableRBCAOZUO.LFYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLFYLNull() {
                this[this.tableRBCAOZUO.LFYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFYLNull() {
                return this.IsNull(this.tableRBCAOZUO.RFYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFYLNull() {
                this[this.tableRBCAOZUO.RFYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRFWDNull() {
                return this.IsNull(this.tableRBCAOZUO.RFWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRFWDNull() {
                this[this.tableRBCAOZUO.RFWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPMLNull() {
                return this.IsNull(this.tableRBCAOZUO.PMLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPMLNull() {
                this[this.tableRBCAOZUO.PMLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTQXNull() {
                return this.IsNull(this.tableRBCAOZUO.TQXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTQXNull() {
                this[this.tableRBCAOZUO.TQXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDWDNull() {
                return this.IsNull(this.tableRBCAOZUO.LDWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDWDNull() {
                this[this.tableRBCAOZUO.LDWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRSWDNull() {
                return this.IsNull(this.tableRBCAOZUO.RSWDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRSWDNull() {
                this[this.tableRBCAOZUO.RSWDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJFSNull() {
                return this.IsNull(this.tableRBCAOZUO.SJFSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJFSNull() {
                this[this.tableRBCAOZUO.SJFSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGFDNNull() {
                return this.IsNull(this.tableRBCAOZUO.GFDNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGFDNNull() {
                this[this.tableRBCAOZUO.GFDNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDYLNull() {
                return this.IsNull(this.tableRBCAOZUO.LDYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDYLNull() {
                this[this.tableRBCAOZUO.LDYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLXNull() {
                return this.IsNull(this.tableRBCAOZUO.LXColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLXNull() {
                this[this.tableRBCAOZUO.LXColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBZNull() {
                return this.IsNull(this.tableRBCAOZUO.BZColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBZNull() {
                this[this.tableRBCAOZUO.BZColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSJNull() {
                return this.IsNull(this.tableRBCAOZUO.SJColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSJNull() {
                this[this.tableRBCAOZUO.SJColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZHFHNull() {
                return this.IsNull(this.tableRBCAOZUO.ZHFHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZHFHNull() {
                this[this.tableRBCAOZUO.ZHFHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDWDXBNull() {
                return this.IsNull(this.tableRBCAOZUO.LDWDXBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDWDXBNull() {
                this[this.tableRBCAOZUO.LDWDXBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDWDDBNull() {
                return this.IsNull(this.tableRBCAOZUO.LDWDDBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDWDDBNull() {
                this[this.tableRBCAOZUO.LDWDDBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDWDDNNull() {
                return this.IsNull(this.tableRBCAOZUO.LDWDDNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDWDDNNull() {
                this[this.tableRBCAOZUO.LDWDDNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLDWDXNNull() {
                return this.IsNull(this.tableRBCAOZUO.LDWDXNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLDWDXNNull() {
                this[this.tableRBCAOZUO.LDWDXNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMQLYLNull() {
                return this.IsNull(this.tableRBCAOZUO.MQLYLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMQLYLNull() {
                this[this.tableRBCAOZUO.MQLYLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP1Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP1Null() {
                this[this.tableRBCAOZUO.TEMP1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP2Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP2Null() {
                this[this.tableRBCAOZUO.TEMP2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP3Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP3Null() {
                this[this.tableRBCAOZUO.TEMP3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP4Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP4Null() {
                this[this.tableRBCAOZUO.TEMP4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP5Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP5Null() {
                this[this.tableRBCAOZUO.TEMP5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP6Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP6Null() {
                this[this.tableRBCAOZUO.TEMP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP7Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP7Null() {
                this[this.tableRBCAOZUO.TEMP7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP8Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP8Null() {
                this[this.tableRBCAOZUO.TEMP8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTEMP9Null() {
                return this.IsNull(this.tableRBCAOZUO.TEMP9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTEMP9Null() {
                this[this.tableRBCAOZUO.TEMP9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRLBNull() {
                return this.IsNull(this.tableRBCAOZUO.RLBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRLBNull() {
                this[this.tableRBCAOZUO.RLBColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBBDRowChangeEvent : global::System.EventArgs {
            
            private RBBDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBBDRowChangeEvent(RBBDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBBDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBFKRowChangeEvent : global::System.EventArgs {
            
            private RBFKRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBFKRowChangeEvent(RBFKRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBFKRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBLIAOXIANBBRowChangeEvent : global::System.EventArgs {
            
            private RBLIAOXIANBBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANBBRowChangeEvent(RBLIAOXIANBBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANBBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBLQRowChangeEvent : global::System.EventArgs {
            
            private RBLQRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLQRowChangeEvent(RBLQRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLQRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBXFRowChangeEvent : global::System.EventArgs {
            
            private RBXFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXFRowChangeEvent(RBXFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBXIAOHAORowChangeEvent : global::System.EventArgs {
            
            private RBXIAOHAORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXIAOHAORowChangeEvent(RBXIAOHAORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBXIAOHAORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBZLBDRowChangeEvent : global::System.EventArgs {
            
            private RBZLBDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBZLBDRowChangeEvent(RBZLBDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBZLBDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBLIAOXIANZBRowChangeEvent : global::System.EventArgs {
            
            private RBLIAOXIANZBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANZBRowChangeEvent(RBLIAOXIANZBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANZBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBLIAOXIANYBRowChangeEvent : global::System.EventArgs {
            
            private RBLIAOXIANYBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANYBRowChangeEvent(RBLIAOXIANYBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBLIAOXIANYBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class DDLUCIRowChangeEvent : global::System.EventArgs {
            
            private DDLUCIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIRowChangeEvent(DDLUCIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public DDLUCIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBJSRowChangeEvent : global::System.EventArgs {
            
            private RBJSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBJSRowChangeEvent(RBJSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBJSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LT_LIAORowChangeEvent : global::System.EventArgs {
            
            private LT_LIAORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LT_LIAORowChangeEvent(LT_LIAORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LT_LIAORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class SHIJIGUIRowChangeEvent : global::System.EventArgs {
            
            private SHIJIGUIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIJIGUIRowChangeEvent(SHIJIGUIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public SHIJIGUIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ALARMRowChangeEvent : global::System.EventArgs {
            
            private ALARMRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALARMRowChangeEvent(ALARMRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ALARMRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBGZRowChangeEvent : global::System.EventArgs {
            
            private RBGZRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBGZRowChangeEvent(RBGZRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBGZRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBCAOZUO1RowChangeEvent : global::System.EventArgs {
            
            private RBCAOZUO1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUO1RowChangeEvent(RBCAOZUO1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUO1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CQA_IRON_ELEMENT_TEXTRowChangeEvent : global::System.EventArgs {
            
            private CQA_IRON_ELEMENT_TEXTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CQA_IRON_ELEMENT_TEXTRowChangeEvent(CQA_IRON_ELEMENT_TEXTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CQA_IRON_ELEMENT_TEXTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class RBCAOZUORowChangeEvent : global::System.EventArgs {
            
            private RBCAOZUORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUORowChangeEvent(RBCAOZUORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public RBCAOZUORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace LTZN.生产日报.生产数据TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBBDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBBDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBBD";
            tableMapping.ColumnMappings.Add("BD", "BD");
            tableMapping.ColumnMappings.Add("SL", "SL");
            tableMapping.ColumnMappings.Add("DW", "DW");
            tableMapping.ColumnMappings.Add("FL", "FL");
            tableMapping.ColumnMappings.Add("SM", "SM");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("RQ", "RQ");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("RID", "RID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM RBBD WHERE (\"ROWID\" = :RID)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO RBBD\r\n      (BD, SL, DW, FL, SM, GAOLU, RQ, SJ)\r\nVALUES (:BD, :SL, :D" +
                "W, :FL, :SM, :GAOLU, :RQ, :SJ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BD", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "BD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "SL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DW", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "DW", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FL", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "FL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SM", global::System.Data.OracleClient.OracleType.VarChar, 1000, global::System.Data.ParameterDirection.Input, "SM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "RQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBBD\r\nSET GAOLU = :GAOLU, BD = :BD, SL = :SL, DW = :DW, FL = :FL, SM = :SM" +
                ", RQ = :RQ, \r\n      SJ = :SJ\r\nWHERE (\"ROWID\" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BD", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "BD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "SL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DW", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "DW", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FL", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "FL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SM", global::System.Data.OracleClient.OracleType.VarChar, 1000, global::System.Data.ParameterDirection.Input, "SM", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "RQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT BD, SL, DW, FL, SM, GAOLU, RQ, SJ, \"ROWID\" AS RID\r\nFROM RBBD\r\nWHERE (GAOLU" +
                " = :GAOLU) AND (TRUNC(SJ) = :RQ)\r\nORDER BY RQ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBBDDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBBDDataTable GetData(System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBBDDataTable dataTable = new 生产数据.RBBDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBBDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBBD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBFKTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBFKTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBFK";
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("YX", "YX");
            tableMapping.ColumnMappings.Add("GCY", "GCY");
            tableMapping.ColumnMappings.Add("BZ", "BZ");
            tableMapping.ColumnMappings.Add("RQ", "RQ");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("FK1", "FK1");
            tableMapping.ColumnMappings.Add("FK2", "FK2");
            tableMapping.ColumnMappings.Add("FK3", "FK3");
            tableMapping.ColumnMappings.Add("FK4", "FK4");
            tableMapping.ColumnMappings.Add("FK5", "FK5");
            tableMapping.ColumnMappings.Add("FK6", "FK6");
            tableMapping.ColumnMappings.Add("FK7", "FK7");
            tableMapping.ColumnMappings.Add("FK8", "FK8");
            tableMapping.ColumnMappings.Add("FK9", "FK9");
            tableMapping.ColumnMappings.Add("FK10", "FK10");
            tableMapping.ColumnMappings.Add("FK11", "FK11");
            tableMapping.ColumnMappings.Add("FK12", "FK12");
            tableMapping.ColumnMappings.Add("FK13", "FK13");
            tableMapping.ColumnMappings.Add("FK14", "FK14");
            tableMapping.ColumnMappings.Add("FK15", "FK15");
            tableMapping.ColumnMappings.Add("FK16", "FK16");
            tableMapping.ColumnMappings.Add("FK17", "FK17");
            tableMapping.ColumnMappings.Add("FK18", "FK18");
            tableMapping.ColumnMappings.Add("FK19", "FK19");
            tableMapping.ColumnMappings.Add("FK20", "FK20");
            tableMapping.ColumnMappings.Add("RID", "RID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM RBFK where ROWID=:RID";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO RBFK
      (GAOLU, RQ, SJ, FK1, FK2, FK3, FK4, FK5, FK6, FK7, FK8, FK9, FK10, FK11, FK12, 
      FK13, FK14, FK15, FK16, FK17, FK18, FK19, FK20, YX, GCY, BZ)
VALUES (:GAOLU, :RQ, :SJ, :FK1, :FK2, :FK3, :FK4, :FK5, :FK6, :FK7, :FK8, :FK9, :FK10, 
      :FK11, :FK12, :FK13, :FK14, :FK15, :FK16, :FK17, :FK18, :FK19, :FK20, :YX, :GCY, :BZ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "RQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK1", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK2", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK3", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK4", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK5", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK6", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK7", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK8", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK9", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK10", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK11", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK12", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK13", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK14", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK15", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK16", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK17", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK18", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK19", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK20", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YX", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "YX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GCY", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "GCY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 100, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE RBFK
SET GAOLU = :GAOLU, FK1 = :FK1, FK2 = :FK2, FK3 = :FK3, FK4 = :FK4, FK5 = :FK5, 
      FK6 = :FK6, FK7 = :FK7, FK8 = :FK8, FK9 = :FK9, FK10 = :FK10, FK11 = :FK11, 
      FK12 = :FK12, FK13 = :FK13, FK14 = :FK14, FK15 = :FK15, FK16 = :FK16, 
      FK17 = :FK17, FK18 = :FK18, FK19 = :FK19, FK20 = :FK20, YX = :YX, GCY = :GCY, 
      BZ = :BZ, RQ = :RQ, SJ = :SJ
WHERE (""ROWID"" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK1", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK2", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK3", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK4", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK5", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK6", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK7", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK8", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK9", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK10", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK11", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK12", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK13", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK14", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK15", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK16", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK17", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK18", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK19", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FK20", global::System.Data.OracleClient.OracleType.VarChar, 4, global::System.Data.ParameterDirection.Input, "FK20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YX", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "YX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GCY", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "GCY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 100, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "RQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GAOLU, RQ, SJ, FK1, FK2, FK3, FK4, FK5, FK6, FK7, FK8, FK9, FK10, FK11, FK" +
                "12, \r\n      FK13, FK14, FK15, FK16, FK17, FK18, FK19, FK20, YX, GCY, BZ, \"ROWID\"" +
                " as RID\r\nFROM RBFK\r\nWHERE (GAOLU = :GAOLUU) AND (TRUNC(SJ) = :RQ)\r\nORDER BY RQ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLUU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBFKDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLUU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLUU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLUU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBFKDataTable GetData(System.DateTime RQ, global::System.Nullable<decimal> GAOLUU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLUU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLUU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBFKDataTable dataTable = new 生产数据.RBFKDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBFKDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBFK");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBLIAOXIANBBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBLIAOXIANBBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBLIAOXIANBB";
            tableMapping.ColumnMappings.Add("LIAOQIAN", "LIAOQIAN");
            tableMapping.ColumnMappings.Add("LIAOHOU", "LIAOHOU");
            tableMapping.ColumnMappings.Add("PISHU", "PISHU");
            tableMapping.ColumnMappings.Add("T", "T");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("JIANGE", "JIANGE");
            tableMapping.ColumnMappings.Add("JIAJIAO", "JIAJIAO");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("XIUGAI", "XIUGAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO RBLIAOXIAN     (LIAOQIAN, LIAOHOU, PISHU, T, GAOLU, JIANGE, JIAJIAO, " +
                "BC, XIUGAI)　VALUES     (:LIAOQIAN, :LIAOHOU, :PISHU, :T, :GAOLU, :JIANGE, :JIAJI" +
                "AO, \'白班\', 1)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOQIAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOQIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOHOU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOHOU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PISHU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PISHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIANGE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JIANGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAJIAO", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "JIAJIAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBLIAOXIAN\r\nSET LIAOQIAN = :LIAOQIAN, LIAOHOU = :LIAOHOU, PISHU = :PISHU, " +
                "T = :T, \r\n      JIANGE = :JIANGE, JIAJIAO = :JIAJIAO, BC = :BC, XIUGAI = :XIUGAI" +
                "\r\nWHERE (T = :Original_T) AND (GAOLU = :Original_GAOLU)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOQIAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOQIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOHOU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOHOU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PISHU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PISHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIANGE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JIANGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAJIAO", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "JIAJIAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 6, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("XIUGAI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "XIUGAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LIAOQIAN, LIAOHOU, PISHU, T, GAOLU, JIANGE, JIAJIAO, BC, NVL(XIUGAI,0) as " +
                "XIUGAI  FROM LF.RBLIAOXIAN WHERE TRUNC(T)=:RQ AND GAOLU =:GAOLU AND BC=\'白班\' ORDE" +
                "R BY T";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT BC, GAOLU, JIAJIAO, JIANGE, LIAOHOU, LIAOQIAN, PISHU, T,NVL(XIUGAI,0) as X" +
                "IUGAI  FROM RBLIAOXIAN WHERE (T > :SJ) AND (GAOLU = :GAOLU) AND (BC = \'白班\') ORDE" +
                "R BY T";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBLIAOXIANBBDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 生产数据.RBLIAOXIANBBDataTable GetDataBy(System.DateTime SJ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SJ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBLIAOXIANBBDataTable dataTable = new 生产数据.RBLIAOXIANBBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBLIAOXIANBBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBLIAOXIANBB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBLQTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBLQTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBLQ";
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("CC", "CC");
            tableMapping.ColumnMappings.Add("HAO1", "HAO1");
            tableMapping.ColumnMappings.Add("HAO2", "HAO2");
            tableMapping.ColumnMappings.Add("HAO3", "HAO3");
            tableMapping.ColumnMappings.Add("HAO4", "HAO4");
            tableMapping.ColumnMappings.Add("HAO5", "HAO5");
            tableMapping.ColumnMappings.Add("HAO6", "HAO6");
            tableMapping.ColumnMappings.Add("HAO7", "HAO7");
            tableMapping.ColumnMappings.Add("HAO8", "HAO8");
            tableMapping.ColumnMappings.Add("HAO9", "HAO9");
            tableMapping.ColumnMappings.Add("HAO10", "HAO10");
            tableMapping.ColumnMappings.Add("HAO11", "HAO11");
            tableMapping.ColumnMappings.Add("HAO12", "HAO12");
            tableMapping.ColumnMappings.Add("HAO13", "HAO13");
            tableMapping.ColumnMappings.Add("HAO14", "HAO14");
            tableMapping.ColumnMappings.Add("HAO15", "HAO15");
            tableMapping.ColumnMappings.Add("HAO16", "HAO16");
            tableMapping.ColumnMappings.Add("HAO17", "HAO17");
            tableMapping.ColumnMappings.Add("HAO18", "HAO18");
            tableMapping.ColumnMappings.Add("HAO19", "HAO19");
            tableMapping.ColumnMappings.Add("HAO20", "HAO20");
            tableMapping.ColumnMappings.Add("HAO21", "HAO21");
            tableMapping.ColumnMappings.Add("HAO22", "HAO22");
            tableMapping.ColumnMappings.Add("HAO23", "HAO23");
            tableMapping.ColumnMappings.Add("HAO24", "HAO24");
            tableMapping.ColumnMappings.Add("HAO25", "HAO25");
            tableMapping.ColumnMappings.Add("HAO26", "HAO26");
            tableMapping.ColumnMappings.Add("HAO27", "HAO27");
            tableMapping.ColumnMappings.Add("HAO28", "HAO28");
            tableMapping.ColumnMappings.Add("BZ", "BZ");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("PJZ", "PJZ");
            tableMapping.ColumnMappings.Add("HAO29", "HAO29");
            tableMapping.ColumnMappings.Add("HAO30", "HAO30");
            tableMapping.ColumnMappings.Add("HAO31", "HAO31");
            tableMapping.ColumnMappings.Add("HAO32", "HAO32");
            tableMapping.ColumnMappings.Add("HAO33", "HAO33");
            tableMapping.ColumnMappings.Add("HAO34", "HAO34");
            tableMapping.ColumnMappings.Add("HAO35", "HAO35");
            tableMapping.ColumnMappings.Add("HAO36", "HAO36");
            tableMapping.ColumnMappings.Add("HAO37", "HAO37");
            tableMapping.ColumnMappings.Add("HAO38", "HAO38");
            tableMapping.ColumnMappings.Add("HAO39", "HAO39");
            tableMapping.ColumnMappings.Add("HAO40", "HAO40");
            tableMapping.ColumnMappings.Add("HAO41", "HAO41");
            tableMapping.ColumnMappings.Add("HAO42", "HAO42");
            tableMapping.ColumnMappings.Add("HAO43", "HAO43");
            tableMapping.ColumnMappings.Add("HAO44", "HAO44");
            tableMapping.ColumnMappings.Add("HAO45", "HAO45");
            tableMapping.ColumnMappings.Add("HAO46", "HAO46");
            tableMapping.ColumnMappings.Add("HAO47", "HAO47");
            tableMapping.ColumnMappings.Add("HAO48", "HAO48");
            tableMapping.ColumnMappings.Add("HAO49", "HAO49");
            tableMapping.ColumnMappings.Add("HAO50", "HAO50");
            tableMapping.ColumnMappings.Add("RID", "RID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM RBLQ\r\nWHERE (\"ROWID\" = :RID)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO RBLQ
      (GAOLU, BC, CC, HAO1, HAO2, HAO3, HAO4, HAO5, HAO6, HAO7, HAO8, HAO9, HAO10, 
      HAO11, HAO12, HAO13, HAO14, HAO15, HAO16, HAO17, HAO18, HAO19, HAO20, 
      HAO21, HAO22, HAO23, HAO24, HAO25, HAO26, HAO27, HAO28, BZ, SJ, PJZ, HAO29, 
      HAO30, HAO31, HAO32, HAO33, HAO34, HAO35, HAO36, HAO37, HAO38, HAO39, 
      HAO40, HAO41, HAO42, HAO43, HAO44, HAO45, HAO46, HAO47, HAO48, HAO49, 
      HAO50)
VALUES (:GAOLU, :BC, :CC, :HAO1, :HAO2, :HAO3, :HAO4, :HAO5, :HAO6, :HAO7, :HAO8, 
      :HAO9, :HAO10, :HAO11, :HAO12, :HAO13, :HAO14, :HAO15, :HAO16, :HAO17, :HAO18, 
      :HAO19, :HAO20, :HAO21, :HAO22, :HAO23, :HAO24, :HAO25, :HAO26, :HAO27, :HAO28, 
      :BZ, :SJ, :PJZ, :HAO29, :HAO30, :HAO31, :HAO32, :HAO33, :HAO34, :HAO35, :HAO36, 
      :HAO37, :HAO38, :HAO39, :HAO40, :HAO41, :HAO42, :HAO43, :HAO44, :HAO45, :HAO46, 
      :HAO47, :HAO48, :HAO49, :HAO50)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC", global::System.Data.OracleClient.OracleType.VarChar, 8, global::System.Data.ParameterDirection.Input, "CC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO1", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO2", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO3", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO4", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO5", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO6", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO7", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO8", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO9", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO10", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO11", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO12", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO13", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO14", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO15", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO16", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO17", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO18", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO19", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO20", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO21", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO22", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO23", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO24", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO24", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO25", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO25", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO26", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO26", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO27", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO27", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO28", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO28", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PJZ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PJZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO29", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO29", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO30", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO30", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO31", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO31", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO32", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO32", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO33", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO33", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO34", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO34", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO35", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO35", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO36", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO36", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO37", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO37", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO38", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO38", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO39", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO39", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO40", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO40", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO41", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO41", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO42", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO42", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO43", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO43", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO44", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO44", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO45", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO45", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO46", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO46", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO47", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO47", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO48", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO48", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO49", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO49", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO50", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO50", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE RBLQ
SET GAOLU = :GAOLU, BC = :BC, CC = :CC, HAO1 = :HAO1, HAO2 = :HAO2, HAO3 = :HAO3, 
      HAO4 = :HAO4, HAO5 = :HAO5, HAO6 = :HAO6, HAO7 = :HAO7, HAO8 = :HAO8, 
      HAO9 = :HAO9, HAO10 = :HAO10, HAO11 = :HAO11, HAO12 = :HAO12, 
      HAO13 = :HAO13, HAO14 = :HAO14, HAO15 = :HAO15, HAO16 = :HAO16, 
      HAO17 = :HAO17, HAO18 = :HAO18, HAO19 = :HAO19, HAO20 = :HAO20, 
      HAO21 = :HAO21, HAO22 = :HAO22, HAO23 = :HAO23, HAO24 = :HAO24, 
      HAO25 = :HAO25, HAO26 = :HAO26, HAO27 = :HAO27, HAO28 = :HAO28, BZ = :BZ, 
      SJ = :SJ, PJZ = :PJZ, HAO29 = :HAO29, HAO30 = :HAO30, HAO31 = :HAO31, 
      HAO32 = :HAO32, HAO33 = :HAO33, HAO34 = :HAO34, HAO35 = :HAO35, 
      HAO36 = :HAO36, HAO37 = :HAO37, HAO38 = :HAO38, HAO39 = :HAO39, 
      HAO40 = :HAO40, HAO41 = :HAO41, HAO42 = :HAO42, HAO43 = :HAO43, 
      HAO44 = :HAO44, HAO46 = :HAO45, HAO45 = :HAO46, HAO47 = :HAO47, 
      HAO48 = :HAO48, HAO49 = :HAO49, HAO50 = :HAO50
WHERE (""ROWID"" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CC", global::System.Data.OracleClient.OracleType.VarChar, 8, global::System.Data.ParameterDirection.Input, "CC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO1", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO2", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO3", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO4", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO5", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO6", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO7", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO8", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO9", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO10", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO10", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO11", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO11", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO12", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO12", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO13", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO13", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO14", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO14", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO15", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO15", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO16", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO16", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO17", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO17", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO18", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO18", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO19", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO19", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO20", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO20", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO21", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO21", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO22", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO22", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO23", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO23", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO24", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO24", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO25", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO25", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO26", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO26", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO27", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO27", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO28", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO28", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PJZ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PJZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO29", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO29", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO30", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO30", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO31", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO31", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO32", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO32", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO33", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO33", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO34", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO34", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO35", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO35", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO36", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO36", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO37", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO37", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO38", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO38", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO39", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO39", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO40", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO40", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO41", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO41", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO42", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO42", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO43", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO43", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO44", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO44", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO45", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO46", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO46", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO45", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO47", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO47", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO48", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO48", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO49", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO49", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HAO50", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HAO50", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT GAOLU, BC, CC, HAO1, HAO2, HAO3, HAO4, HAO5, HAO6, HAO7, HAO8, HAO9, 
      HAO10, HAO11, HAO12, HAO13, HAO14, HAO15, HAO16, HAO17, HAO18, HAO19, 
      HAO20, HAO21, HAO22, HAO23, HAO24, HAO25, HAO26, HAO27, HAO28, BZ, SJ, PJZ, 
      HAO29, HAO30, HAO31, HAO32, HAO33, HAO34, HAO35, HAO36, HAO37, HAO38, 
      HAO39, HAO40, HAO41, HAO42, HAO43, HAO44, HAO45, HAO46, HAO47, HAO48, 
      HAO49, HAO50, ""ROWID"" AS RID
FROM RBLQ
WHERE (TRUNC(SJ) = :RQ) AND (GAOLU = :GAOLU)
ORDER BY SJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBLQDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBLQDataTable GetData(System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBLQDataTable dataTable = new 生产数据.RBLQDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBLQDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBLQ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string RID) {
            if ((RID == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<decimal> GAOLU, 
                    string BC, 
                    string CC, 
                    global::System.Nullable<decimal> HAO1, 
                    global::System.Nullable<decimal> HAO2, 
                    global::System.Nullable<decimal> HAO3, 
                    global::System.Nullable<decimal> HAO4, 
                    global::System.Nullable<decimal> HAO5, 
                    global::System.Nullable<decimal> HAO6, 
                    global::System.Nullable<decimal> HAO7, 
                    global::System.Nullable<decimal> HAO8, 
                    global::System.Nullable<decimal> HAO9, 
                    global::System.Nullable<decimal> HAO10, 
                    global::System.Nullable<decimal> HAO11, 
                    global::System.Nullable<decimal> HAO12, 
                    global::System.Nullable<decimal> HAO13, 
                    global::System.Nullable<decimal> HAO14, 
                    global::System.Nullable<decimal> HAO15, 
                    global::System.Nullable<decimal> HAO16, 
                    global::System.Nullable<decimal> HAO17, 
                    global::System.Nullable<decimal> HAO18, 
                    global::System.Nullable<decimal> HAO19, 
                    global::System.Nullable<decimal> HAO20, 
                    global::System.Nullable<decimal> HAO21, 
                    global::System.Nullable<decimal> HAO22, 
                    global::System.Nullable<decimal> HAO23, 
                    global::System.Nullable<decimal> HAO24, 
                    global::System.Nullable<decimal> HAO25, 
                    global::System.Nullable<decimal> HAO26, 
                    global::System.Nullable<decimal> HAO27, 
                    global::System.Nullable<decimal> HAO28, 
                    string BZ, 
                    global::System.Nullable<global::System.DateTime> SJ, 
                    global::System.Nullable<decimal> PJZ, 
                    global::System.Nullable<decimal> HAO29, 
                    global::System.Nullable<decimal> HAO30, 
                    global::System.Nullable<decimal> HAO31, 
                    global::System.Nullable<decimal> HAO32, 
                    global::System.Nullable<decimal> HAO33, 
                    global::System.Nullable<decimal> HAO34, 
                    global::System.Nullable<decimal> HAO35, 
                    global::System.Nullable<decimal> HAO36, 
                    global::System.Nullable<decimal> HAO37, 
                    global::System.Nullable<decimal> HAO38, 
                    global::System.Nullable<decimal> HAO39, 
                    global::System.Nullable<decimal> HAO40, 
                    global::System.Nullable<decimal> HAO41, 
                    global::System.Nullable<decimal> HAO42, 
                    global::System.Nullable<decimal> HAO43, 
                    global::System.Nullable<decimal> HAO44, 
                    global::System.Nullable<decimal> HAO45, 
                    global::System.Nullable<decimal> HAO46, 
                    global::System.Nullable<decimal> HAO47, 
                    global::System.Nullable<decimal> HAO48, 
                    global::System.Nullable<decimal> HAO49, 
                    global::System.Nullable<decimal> HAO50) {
            if ((GAOLU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BC));
            }
            if ((CC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CC));
            }
            if ((HAO1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(HAO1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HAO2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(HAO2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HAO3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(HAO3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((HAO4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(HAO4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HAO5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(HAO5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HAO6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(HAO6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HAO7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(HAO7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HAO8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(HAO8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((HAO9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(HAO9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((HAO10.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(HAO10.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HAO11.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(HAO11.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((HAO12.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(HAO12.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((HAO13.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(HAO13.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((HAO14.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(HAO14.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((HAO15.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(HAO15.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((HAO16.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(HAO16.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((HAO17.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(HAO17.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((HAO18.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(HAO18.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((HAO19.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(HAO19.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((HAO20.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(HAO20.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((HAO21.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(HAO21.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((HAO22.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(HAO22.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((HAO23.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(HAO23.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((HAO24.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(HAO24.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((HAO25.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(HAO25.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((HAO26.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(HAO26.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((HAO27.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(HAO27.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((HAO28.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(HAO28.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(BZ));
            }
            if ((SJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PJZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(PJZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((HAO29.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(HAO29.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((HAO30.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(HAO30.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((HAO31.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((decimal)(HAO31.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HAO32.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(HAO32.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((HAO33.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(HAO33.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((HAO34.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(HAO34.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((HAO35.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(HAO35.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((HAO36.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(HAO36.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((HAO37.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(HAO37.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((HAO38.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(HAO38.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((HAO39.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(HAO39.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((HAO40.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(HAO40.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((HAO41.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(HAO41.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((HAO42.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(HAO42.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((HAO43.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(HAO43.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((HAO44.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(HAO44.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((HAO45.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(HAO45.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((HAO46.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(HAO46.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((HAO47.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(HAO47.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((HAO48.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(HAO48.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((HAO49.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(HAO49.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((HAO50.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(HAO50.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> GAOLU, 
                    string BC, 
                    string CC, 
                    global::System.Nullable<decimal> HAO1, 
                    global::System.Nullable<decimal> HAO2, 
                    global::System.Nullable<decimal> HAO3, 
                    global::System.Nullable<decimal> HAO4, 
                    global::System.Nullable<decimal> HAO5, 
                    global::System.Nullable<decimal> HAO6, 
                    global::System.Nullable<decimal> HAO7, 
                    global::System.Nullable<decimal> HAO8, 
                    global::System.Nullable<decimal> HAO9, 
                    global::System.Nullable<decimal> HAO10, 
                    global::System.Nullable<decimal> HAO11, 
                    global::System.Nullable<decimal> HAO12, 
                    global::System.Nullable<decimal> HAO13, 
                    global::System.Nullable<decimal> HAO14, 
                    global::System.Nullable<decimal> HAO15, 
                    global::System.Nullable<decimal> HAO16, 
                    global::System.Nullable<decimal> HAO17, 
                    global::System.Nullable<decimal> HAO18, 
                    global::System.Nullable<decimal> HAO19, 
                    global::System.Nullable<decimal> HAO20, 
                    global::System.Nullable<decimal> HAO21, 
                    global::System.Nullable<decimal> HAO22, 
                    global::System.Nullable<decimal> HAO23, 
                    global::System.Nullable<decimal> HAO24, 
                    global::System.Nullable<decimal> HAO25, 
                    global::System.Nullable<decimal> HAO26, 
                    global::System.Nullable<decimal> HAO27, 
                    global::System.Nullable<decimal> HAO28, 
                    string BZ, 
                    global::System.Nullable<global::System.DateTime> SJ, 
                    global::System.Nullable<decimal> PJZ, 
                    global::System.Nullable<decimal> HAO29, 
                    global::System.Nullable<decimal> HAO30, 
                    global::System.Nullable<decimal> HAO31, 
                    global::System.Nullable<decimal> HAO32, 
                    global::System.Nullable<decimal> HAO33, 
                    global::System.Nullable<decimal> HAO34, 
                    global::System.Nullable<decimal> HAO35, 
                    global::System.Nullable<decimal> HAO36, 
                    global::System.Nullable<decimal> HAO37, 
                    global::System.Nullable<decimal> HAO38, 
                    global::System.Nullable<decimal> HAO39, 
                    global::System.Nullable<decimal> HAO40, 
                    global::System.Nullable<decimal> HAO41, 
                    global::System.Nullable<decimal> HAO42, 
                    global::System.Nullable<decimal> HAO43, 
                    global::System.Nullable<decimal> HAO44, 
                    global::System.Nullable<decimal> HAO45, 
                    global::System.Nullable<decimal> HAO46, 
                    global::System.Nullable<decimal> HAO47, 
                    global::System.Nullable<decimal> HAO48, 
                    global::System.Nullable<decimal> HAO49, 
                    global::System.Nullable<decimal> HAO50, 
                    string RID) {
            if ((GAOLU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BC));
            }
            if ((CC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CC));
            }
            if ((HAO1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(HAO1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HAO2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(HAO2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((HAO3.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(HAO3.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((HAO4.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(HAO4.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((HAO5.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(HAO5.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((HAO6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(HAO6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((HAO7.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(HAO7.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HAO8.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(HAO8.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((HAO9.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(HAO9.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((HAO10.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(HAO10.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((HAO11.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(HAO11.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((HAO12.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(HAO12.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((HAO13.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(HAO13.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((HAO14.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(HAO14.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((HAO15.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(HAO15.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((HAO16.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(HAO16.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((HAO17.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(HAO17.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((HAO18.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(HAO18.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((HAO19.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(HAO19.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((HAO20.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(HAO20.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((HAO21.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(HAO21.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((HAO22.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(HAO22.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((HAO23.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(HAO23.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((HAO24.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(HAO24.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((HAO25.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(HAO25.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((HAO26.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(HAO26.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((HAO27.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(HAO27.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((HAO28.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(HAO28.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(BZ));
            }
            if ((SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PJZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(PJZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((HAO29.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(HAO29.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((HAO30.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(HAO30.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((HAO31.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(HAO31.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((HAO32.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(HAO32.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((HAO33.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(HAO33.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((HAO34.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(HAO34.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((HAO35.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(HAO35.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((HAO36.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(HAO36.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((HAO37.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(HAO37.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((HAO38.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(HAO38.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((HAO39.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(HAO39.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((HAO40.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(HAO40.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((HAO41.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(HAO41.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((HAO42.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(HAO42.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((HAO43.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(HAO43.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((HAO44.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(HAO44.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((HAO45.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(HAO45.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((HAO46.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(HAO46.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((HAO47.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(HAO47.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((HAO48.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(HAO48.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((HAO49.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(HAO49.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((HAO50.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(HAO50.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((RID == null)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBXFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBXFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBXF";
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("MC", "MC");
            tableMapping.ColumnMappings.Add("KS", "KS");
            tableMapping.ColumnMappings.Add("ZZ", "ZZ");
            tableMapping.ColumnMappings.Add("FL", "FL");
            tableMapping.ColumnMappings.Add("YY", "YY");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("JG", "JG");
            tableMapping.ColumnMappings.Add("RID", "RID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM RBXF WHERE ROWID=:RID";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO RBXF\r\n      (GAOLU, MC, KS, ZZ, FL, YY, SJ, JG)\r\nVALUES (:GAOLU, :MC," +
                " :KS, :ZZ, :FL, :YY, :SJ, :JG)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MC", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("KS", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "KS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZZ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "ZZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FL", global::System.Data.OracleClient.OracleType.VarChar, 2000, global::System.Data.ParameterDirection.Input, "FL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YY", global::System.Data.OracleClient.OracleType.VarChar, 2000, global::System.Data.ParameterDirection.Input, "YY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JG", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBXF\r\nSET GAOLU = :GAOLU, MC = :MC, KS = :KS, ZZ = :ZZ, FL = :FL, YY = :YY" +
                ", SJ = :SJ, \r\n      JG = :JG\r\nWHERE (\"ROWID\" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MC", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("KS", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "KS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZZ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "ZZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FL", global::System.Data.OracleClient.OracleType.VarChar, 2000, global::System.Data.ParameterDirection.Input, "FL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YY", global::System.Data.OracleClient.OracleType.VarChar, 2000, global::System.Data.ParameterDirection.Input, "YY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JG", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT GAOLU, MC, KS, ZZ, FL, YY, SJ, JG, \"ROWID\" AS RID\r\nFROM RBXF\r\nWHERE (TRUNC" +
                "(SJ) = :RQ) AND (GAOLU = :GAOLU)\r\nORDER BY SJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBXFDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBXFDataTable GetData(System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBXFDataTable dataTable = new 生产数据.RBXFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBXFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBXF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string RID) {
            if ((RID == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<decimal> GAOLU, string MC, global::System.Nullable<global::System.DateTime> KS, global::System.Nullable<global::System.DateTime> ZZ, string FL, string YY, global::System.Nullable<global::System.DateTime> SJ, global::System.Nullable<decimal> JG) {
            if ((GAOLU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MC == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(MC));
            }
            if ((KS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(KS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ZZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ZZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FL == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(FL));
            }
            if ((YY == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(YY));
            }
            if ((SJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((JG.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(JG.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> GAOLU, string MC, global::System.Nullable<global::System.DateTime> KS, global::System.Nullable<global::System.DateTime> ZZ, string FL, string YY, global::System.Nullable<global::System.DateTime> SJ, global::System.Nullable<decimal> JG, string RID) {
            if ((GAOLU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((MC == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(MC));
            }
            if ((KS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(KS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((ZZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ZZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((FL == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(FL));
            }
            if ((YY == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(YY));
            }
            if ((SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((JG.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(JG.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((RID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBXIAOHAOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBXIAOHAOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBXIAOHAO";
            tableMapping.ColumnMappings.Add("MC", "MC");
            tableMapping.ColumnMappings.Add("BAIBAN", "BAIBAN");
            tableMapping.ColumnMappings.Add("ZHONGBAN", "ZHONGBAN");
            tableMapping.ColumnMappings.Add("YEBAN", "YEBAN");
            tableMapping.ColumnMappings.Add("LEIJI", "LEIJI");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("BEIZHU", "BEIZHU");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("RID", "RID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM RBXIAOHAO WHERE ROWID=:RID";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO RBXIAOHAO\r\n      (MC, BAIBAN, ZHONGBAN, YEBAN, GAOLU, BEIZHU, SJ)\r\nVA" +
                "LUES (:MC, :BAIBAN, :ZHONGBAN, :YEBAN, :GAOLU, :BEIZHU, :SJ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MC", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BAIBAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "BAIBAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHONGBAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZHONGBAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YEBAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "YEBAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BEIZHU", global::System.Data.OracleClient.OracleType.VarChar, 40, global::System.Data.ParameterDirection.Input, "BEIZHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBXIAOHAO\r\nSET MC = :MC, ZHONGBAN = :ZHONGBAN, BAIBAN = :BAIBAN, YEBAN = :" +
                "YEBAN, \r\n      LEIJI = :LEIJI, GAOLU = :GAOLU, BEIZHU = :BEIZHU, SJ = :SJ\r\nWHERE" +
                " (\"ROWID\" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MC", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "MC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHONGBAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZHONGBAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BAIBAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "BAIBAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YEBAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "YEBAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LEIJI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LEIJI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BEIZHU", global::System.Data.OracleClient.OracleType.VarChar, 40, global::System.Data.ParameterDirection.Input, "BEIZHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT MC, BAIBAN, ZHONGBAN, YEBAN, NVL(BAIBAN, 0) + NVL(ZHONGBAN, 0) \r\n      + N" +
                "VL(YEBAN, 0) AS LEIJI, GAOLU, BEIZHU, SJ, \"ROWID\" AS RID\r\nFROM RBXIAOHAO\r\nWHERE " +
                "(TRUNC(SJ) = :RQ) AND (GAOLU = :GAOLU)\r\nORDER BY SJ DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBXIAOHAODataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBXIAOHAODataTable GetData(System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBXIAOHAODataTable dataTable = new 生产数据.RBXIAOHAODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBXIAOHAODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBXIAOHAO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBZLBDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBZLBDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBZLBD";
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("PICI", "PICI");
            tableMapping.ColumnMappings.Add("JS", "JS");
            tableMapping.ColumnMappings.Add("SQ", "SQ");
            tableMapping.ColumnMappings.Add("QT", "QT");
            tableMapping.ColumnMappings.Add("JT", "JT");
            tableMapping.ColumnMappings.Add("JD", "JD");
            tableMapping.ColumnMappings.Add("KP", "KP");
            tableMapping.ColumnMappings.Add("JP", "JP");
            tableMapping.ColumnMappings.Add("JTFH", "JTFH");
            tableMapping.ColumnMappings.Add("PML", "PML");
            tableMapping.ColumnMappings.Add("ZHFH", "ZHFH");
            tableMapping.ColumnMappings.Add("ZL", "ZL");
            tableMapping.ColumnMappings.Add("R2", "R2");
            tableMapping.ColumnMappings.Add("LLJD", "LLJD");
            tableMapping.ColumnMappings.Add("ZLSX", "ZLSX");
            tableMapping.ColumnMappings.Add("LX", "LX");
            tableMapping.ColumnMappings.Add("BLSJ", "BLSJ");
            tableMapping.ColumnMappings.Add("BLYY", "BLYY");
            tableMapping.ColumnMappings.Add("CLCH", "CLCH");
            tableMapping.ColumnMappings.Add("LLTL", "LLTL");
            tableMapping.ColumnMappings.Add("BZ", "BZ");
            tableMapping.ColumnMappings.Add("YQ", "YQ");
            tableMapping.ColumnMappings.Add("LLBC", "LLBC");
            tableMapping.ColumnMappings.Add("BLJD", "BLJD");
            tableMapping.ColumnMappings.Add("LLJB", "LLJB");
            tableMapping.ColumnMappings.Add("RID", "RID");
            tableMapping.ColumnMappings.Add("PBK", "PBK");
            tableMapping.ColumnMappings.Add("FMGK", "FMGK");
            tableMapping.ColumnMappings.Add("GZ", "GZ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM RBZLBD WHERE (\"ROWID\" = :RID)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO RBZLBD
                (GAOLU, SJ, BC, PICI, JS, SQ, QT, JT, JD, KP, JP, JTFH, PML, ZHFH, ZL, R2, LLJD, ZLSX, LX, BLSJ, BLYY, CLCH, LLTL, 
                BZ, YQ, LLBC, BLJD, LLJB, PBK, FMGK, GZ)
VALUES   (:GAOLU, :SJ, :BC, :PICI, :JS, :SQ, :QT, :JT, :JD, :KP, :JP, :JTFH, :PML, :ZHFH, :ZL, :R2, :LLJD, :ZLSX, :LX, :BLSJ, :BLYY, 
                :CLCH, :LLTL, :BZ, :YQ, :LLBC, :BLJD, :LLJB, :PBK, :FMGK, :GZ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PICI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PICI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JS", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SQ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "SQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QT", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "QT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JT", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("KP", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "KP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JP", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JTFH", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JTFH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PML", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PML", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHFH", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZHFH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("R2", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "R2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLJD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLJD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZLSX", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "ZLSX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LX", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BLSJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "BLSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BLYY", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "BLYY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CLCH", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "CLCH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLTL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLTL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YQ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "YQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLBC", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLBC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BLJD", global::System.Data.OracleClient.OracleType.VarChar, 300, global::System.Data.ParameterDirection.Input, "BLJD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLJB", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLJB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PBK", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PBK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FMGK", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "FMGK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GZ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE  RBZLBD
SET         GAOLU = :GAOLU, SJ = :SJ, BC = :BC, PICI = :PICI, JS = :JS, QT = :QT, SQ = :SQ, JT = :JT, KP = :KP, JD = :JD, JP = :JP, 
                JTFH = :JTFH, PML = :PML, ZHFH = :ZHFH, ZL = :ZL, R2 = :R2, LLJD = :LLJD, ZLSX = :ZLSX, LX = :LX, BLSJ = :BLSJ, 
                BLYY = :BLYY, CLCH = :CLCH, LLTL = :LLTL, BZ = :BZ, YQ = :YQ, LLBC = :LLBC, BLJD = :BLJD, LLJB = :LLJB, 
                PBK = :PBK, FMGK = :FMGK, GZ = :GZ
WHERE   (""ROWID"" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 10, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PICI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PICI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JS", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QT", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "QT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SQ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "SQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JT", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JT", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("KP", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "KP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JP", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JTFH", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JTFH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PML", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PML", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHFH", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZHFH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("R2", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "R2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLJD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLJD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZLSX", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "ZLSX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LX", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BLSJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "BLSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BLYY", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "BLYY", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CLCH", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "CLCH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLTL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLTL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 200, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("YQ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "YQ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLBC", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLBC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BLJD", global::System.Data.OracleClient.OracleType.VarChar, 300, global::System.Data.ParameterDirection.Input, "BLJD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LLJB", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LLJB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PBK", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PBK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FMGK", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "FMGK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GZ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.VarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT GAOLU, SJ, BC, PICI, JS, SQ, QT, JT, JD, KP, JP, JTFH, PML, ZHFH, ZL, R2, LLJD, 
      ZLSX, LX, BLSJ, BLYY, CLCH, LLTL, BZ, YQ, LLBC, BLJD, LLJB, ""ROWID"" AS RID, 
      PBK, FMGK, GZ
FROM RBZLBD
WHERE (TRUNC(SJ) = :RQ) AND (GAOLU = :GAOLU)
ORDER BY BLSJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBZLBDDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBZLBDDataTable GetData(System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBZLBDDataTable dataTable = new 生产数据.RBZLBDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBZLBDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBZLBD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string RID) {
            if ((RID == null)) {
                this.Adapter.DeleteCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<decimal> GAOLU, 
                    global::System.Nullable<global::System.DateTime> SJ, 
                    string BC, 
                    global::System.Nullable<decimal> PICI, 
                    global::System.Nullable<decimal> JS, 
                    global::System.Nullable<decimal> SQ, 
                    global::System.Nullable<decimal> QT, 
                    global::System.Nullable<decimal> JT, 
                    global::System.Nullable<decimal> JD, 
                    global::System.Nullable<decimal> KP, 
                    global::System.Nullable<decimal> JP, 
                    global::System.Nullable<decimal> JTFH, 
                    global::System.Nullable<decimal> PML, 
                    global::System.Nullable<decimal> ZHFH, 
                    global::System.Nullable<decimal> ZL, 
                    global::System.Nullable<decimal> R2, 
                    global::System.Nullable<decimal> LLJD, 
                    string ZLSX, 
                    global::System.Nullable<decimal> LX, 
                    global::System.Nullable<global::System.DateTime> BLSJ, 
                    string BLYY, 
                    string CLCH, 
                    global::System.Nullable<decimal> LLTL, 
                    string BZ, 
                    global::System.Nullable<decimal> YQ, 
                    global::System.Nullable<decimal> LLBC, 
                    string BLJD, 
                    global::System.Nullable<decimal> LLJB, 
                    global::System.Nullable<decimal> PBK, 
                    global::System.Nullable<decimal> FMGK, 
                    global::System.Nullable<decimal> GZ) {
            if ((GAOLU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(BC));
            }
            if ((PICI.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PICI.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((JS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(JS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((SQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(SQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((QT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(QT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((JT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(JT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((JD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(JD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((KP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(KP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((JP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(JP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((JTFH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(JTFH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PML.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PML.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ZHFH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ZHFH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ZL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(ZL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((R2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(R2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((LLJD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(LLJD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ZLSX == null)) {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(ZLSX));
            }
            if ((LX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(LX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BLSJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(BLSJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((BLYY == null)) {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(BLYY));
            }
            if ((CLCH == null)) {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(CLCH));
            }
            if ((LLTL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(LLTL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(BZ));
            }
            if ((YQ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(YQ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((LLBC.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(LLBC.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((BLJD == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(BLJD));
            }
            if ((LLJB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(LLJB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PBK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(PBK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((FMGK.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(FMGK.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((GZ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(GZ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> GAOLU, 
                    global::System.Nullable<global::System.DateTime> SJ, 
                    string BC, 
                    global::System.Nullable<decimal> PICI, 
                    global::System.Nullable<decimal> JS, 
                    global::System.Nullable<decimal> QT, 
                    global::System.Nullable<decimal> SQ, 
                    global::System.Nullable<decimal> JT, 
                    global::System.Nullable<decimal> KP, 
                    global::System.Nullable<decimal> JD, 
                    global::System.Nullable<decimal> JP, 
                    global::System.Nullable<decimal> JTFH, 
                    global::System.Nullable<decimal> PML, 
                    global::System.Nullable<decimal> ZHFH, 
                    global::System.Nullable<decimal> ZL, 
                    global::System.Nullable<decimal> R2, 
                    global::System.Nullable<decimal> LLJD, 
                    string ZLSX, 
                    global::System.Nullable<decimal> LX, 
                    global::System.Nullable<global::System.DateTime> BLSJ, 
                    string BLYY, 
                    string CLCH, 
                    global::System.Nullable<decimal> LLTL, 
                    string BZ, 
                    global::System.Nullable<decimal> YQ, 
                    global::System.Nullable<decimal> LLBC, 
                    string BLJD, 
                    global::System.Nullable<decimal> LLJB, 
                    global::System.Nullable<decimal> PBK, 
                    global::System.Nullable<decimal> FMGK, 
                    global::System.Nullable<decimal> GZ, 
                    string RID) {
            if ((GAOLU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(BC));
            }
            if ((PICI.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PICI.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((JS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(JS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((QT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(QT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((SQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(SQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((JT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(JT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((KP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(KP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((JD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(JD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((JP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(JP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((JTFH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(JTFH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((PML.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PML.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((ZHFH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ZHFH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((ZL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(ZL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((R2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(R2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((LLJD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(LLJD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ZLSX == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(ZLSX));
            }
            if ((LX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(LX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((BLSJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(BLSJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((BLYY == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(BLYY));
            }
            if ((CLCH == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(CLCH));
            }
            if ((LLTL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(LLTL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(BZ));
            }
            if ((YQ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(YQ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((LLBC.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(LLBC.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((BLJD == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(BLJD));
            }
            if ((LLJB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(LLJB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((PBK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(PBK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((FMGK.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(FMGK.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((GZ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(GZ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((RID == null)) {
                throw new global::System.ArgumentNullException("RID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBLIAOXIANZBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBLIAOXIANZBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBLIAOXIANZB";
            tableMapping.ColumnMappings.Add("LIAOQIAN", "LIAOQIAN");
            tableMapping.ColumnMappings.Add("LIAOHOU", "LIAOHOU");
            tableMapping.ColumnMappings.Add("PISHU", "PISHU");
            tableMapping.ColumnMappings.Add("T", "T");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("JIANGE", "JIANGE");
            tableMapping.ColumnMappings.Add("JIAJIAO", "JIAJIAO");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("XIUGAI", "XIUGAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO RBLIAOXIAN\r\n      (LIAOQIAN, LIAOHOU, PISHU, T, GAOLU, JIANGE, JIAJIA" +
                "O, BC, XIUGAI)\r\nVALUES (:LIAOQIAN, :LIAOHOU, :PISHU, :T, :GAOLU, :JIANGE, :JIAJI" +
                "AO, \'中班\', 1)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOQIAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOQIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOHOU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOHOU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PISHU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PISHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIANGE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JIANGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAJIAO", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "JIAJIAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBLIAOXIAN\r\nSET LIAOQIAN = :LIAOQIAN, LIAOHOU = :LIAOHOU, PISHU = :PISHU, " +
                "T = :T, \r\n      JIANGE = :JIANGE, JIAJIAO = :JIAJIAO, BC = :BC, XIUGAI = :XIUGAI" +
                "\r\nWHERE (T = :Original_T) AND (GAOLU = :Original_GAOLU)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOQIAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOQIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOHOU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOHOU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PISHU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PISHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIANGE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JIANGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAJIAO", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "JIAJIAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 6, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("XIUGAI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "XIUGAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     LIAOQIAN, LIAOHOU, PISHU, T, GAOLU, JIANGE, JIAJIAO, BC, NVL(XIUGAI,0)" +
                " as XIUGAI\r\nFROM         RBLIAOXIAN\r\nWHERE     (TRUNC(T) = :RQ) AND (GAOLU = :GA" +
                "OLU) AND (BC = \'中班\')\r\nORDER BY T";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     LIAOQIAN, LIAOHOU, PISHU, T, GAOLU, JIANGE, JIAJIAO, BC, NVL(XIUGAI,0)" +
                " as XIUGAI\r\nFROM         RBLIAOXIAN\r\nWHERE     T> :SJ AND (GAOLU = :GAOLU) AND (" +
                "BC = \'中班\')\r\nORDER BY T";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBLIAOXIANZBDataTable dataTable, System.DateTime RQ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 生产数据.RBLIAOXIANZBDataTable GetDataBy(System.DateTime SJ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SJ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBLIAOXIANZBDataTable dataTable = new 生产数据.RBLIAOXIANZBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBLIAOXIANZBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBLIAOXIANZB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBLIAOXIANYBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBLIAOXIANYBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBLIAOXIANYB";
            tableMapping.ColumnMappings.Add("LIAOQIAN", "LIAOQIAN");
            tableMapping.ColumnMappings.Add("LIAOHOU", "LIAOHOU");
            tableMapping.ColumnMappings.Add("PISHU", "PISHU");
            tableMapping.ColumnMappings.Add("T", "T");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("JIANGE", "JIANGE");
            tableMapping.ColumnMappings.Add("JIAJIAO", "JIAJIAO");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("XIUGAI", "XIUGAI");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RBLIAOXIAN\" (\"LIAOQIAN\", \"LIAOHOU\", \"PISHU\", \"T\", \"GAOLU\", \"JIANGE\"," +
                " \"JIAJIAO\", \"BC\") VALUES (:LIAOQIAN, :LIAOHOU, :PISHU, :T, :GAOLU, :JIANGE, :JIA" +
                "JIAO, :BC)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOQIAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LIAOQIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOHOU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LIAOHOU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PISHU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PISHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("T", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIANGE", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIANGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAJIAO", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "JIAJIAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBLIAOXIAN\r\nSET LIAOQIAN = :LIAOQIAN, LIAOHOU = :LIAOHOU, PISHU = :PISHU, " +
                "T = :T, \r\n      JIANGE = :JIANGE, JIAJIAO = :JIAJIAO, BC = :BC, XIUGAI = :XIUGAI" +
                "\r\nWHERE (T = :Original_T) AND (GAOLU = :Original_GAOLU)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOQIAN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOQIAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOHOU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LIAOHOU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PISHU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PISHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIANGE", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "JIANGE", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAJIAO", global::System.Data.OracleClient.OracleType.VarChar, 20, global::System.Data.ParameterDirection.Input, "JIAJIAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 6, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("XIUGAI", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "XIUGAI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_T", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT LIAOQIAN, LIAOHOU, PISHU, T, GAOLU, JIANGE, JIAJIAO, BC, NVL(XIUGAI, 0) \r\n" +
                "      AS XIUGAI\r\nFROM RBLIAOXIAN\r\nWHERE (T >= :SJ1) AND (T <= :SJ2) AND (GAOLU =" +
                " :GAOLU) AND (BC = \'夜班\')\r\nORDER BY T";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ1", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ2", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT BC, GAOLU, JIAJIAO, JIANGE, LIAOHOU, LIAOQIAN, PISHU, T, NVL(XIUGAI, 0) AS" +
                " XIUGAI FROM RBLIAOXIAN WHERE (T > :SJ) AND (GAOLU = :GAOLU) AND (BC = \'夜班\') ORD" +
                "ER BY T";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBLIAOXIANYBDataTable dataTable, System.DateTime SJ1, System.DateTime SJ2, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SJ1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SJ2));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBLIAOXIANYBDataTable GetData(System.DateTime SJ1, System.DateTime SJ2, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SJ1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SJ2));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            生产数据.RBLIAOXIANYBDataTable dataTable = new 生产数据.RBLIAOXIANYBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 生产数据.RBLIAOXIANYBDataTable GetDataBy(System.DateTime SJ, global::System.Nullable<decimal> GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(SJ));
            if ((GAOLU.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            生产数据.RBLIAOXIANYBDataTable dataTable = new 生产数据.RBLIAOXIANYBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBLIAOXIANYBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBLIAOXIANYB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DDLUCITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public DDLUCITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DDLUCI";
            tableMapping.ColumnMappings.Add("LUCI", "LUCI");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("ZDSJ", "ZDSJ");
            tableMapping.ColumnMappings.Add("DGSJ", "DGSJ");
            tableMapping.ColumnMappings.Add("KKSJ", "KKSJ");
            tableMapping.ColumnMappings.Add("DKSJ", "DKSJ");
            tableMapping.ColumnMappings.Add("WDSJ", "WDSJ");
            tableMapping.ColumnMappings.Add("QUCHU", "QUCHU");
            tableMapping.ColumnMappings.Add("GFELIANG", "GFELIANG");
            tableMapping.ColumnMappings.Add("LFELIANG", "LFELIANG");
            tableMapping.ColumnMappings.Add("FELIANG", "FELIANG");
            tableMapping.ColumnMappings.Add("LIAOPI", "LIAOPI");
            tableMapping.ColumnMappings.Add("GGUANSHU", "GGUANSHU");
            tableMapping.ColumnMappings.Add("FEWENDU", "FEWENDU");
            tableMapping.ColumnMappings.Add("FEC", "FEC");
            tableMapping.ColumnMappings.Add("FESI", "FESI");
            tableMapping.ColumnMappings.Add("FEMN", "FEMN");
            tableMapping.ColumnMappings.Add("FEP", "FEP");
            tableMapping.ColumnMappings.Add("FES", "FES");
            tableMapping.ColumnMappings.Add("FETI", "FETI");
            tableMapping.ColumnMappings.Add("GFESI", "GFESI");
            tableMapping.ColumnMappings.Add("GFES", "GFES");
            tableMapping.ColumnMappings.Add("SHENDU", "SHENDU");
            tableMapping.ColumnMappings.Add("JIAODU", "JIAODU");
            tableMapping.ColumnMappings.Add("DANILIANG", "DANILIANG");
            tableMapping.ColumnMappings.Add("ZHAYANG", "ZHAYANG");
            tableMapping.ColumnMappings.Add("SHUIWEN1", "SHUIWEN1");
            tableMapping.ColumnMappings.Add("SHUIWEN2", "SHUIWEN2");
            tableMapping.ColumnMappings.Add("ZHASIO2", "ZHASIO2");
            tableMapping.ColumnMappings.Add("ZHACAO", "ZHACAO");
            tableMapping.ColumnMappings.Add("ZHAMGO", "ZHAMGO");
            tableMapping.ColumnMappings.Add("ZHAAL2O3", "ZHAAL2O3");
            tableMapping.ColumnMappings.Add("ZHAS", "ZHAS");
            tableMapping.ColumnMappings.Add("ZHATIO2", "ZHATIO2");
            tableMapping.ColumnMappings.Add("ZHAR2", "ZHAR2");
            tableMapping.ColumnMappings.Add("BANCI", "BANCI");
            tableMapping.ColumnMappings.Add("BANLUCI", "BANLUCI");
            tableMapping.ColumnMappings.Add("FENLEI", "FENLEI");
            tableMapping.ColumnMappings.Add("JIAOYAN", "JIAOYAN");
            tableMapping.ColumnMappings.Add("TZSJ", "TZSJ");
            tableMapping.ColumnMappings.Add("PNQK1", "PNQK1");
            tableMapping.ColumnMappings.Add("PNQK2", "PNQK2");
            tableMapping.ColumnMappings.Add("ZHAR3", "ZHAR3");
            tableMapping.ColumnMappings.Add("ZHAR4", "ZHAR4");
            tableMapping.ColumnMappings.Add("ZHAMGOALO", "ZHAMGOALO");
            tableMapping.ColumnMappings.Add("LZQK", "LZQK");
            tableMapping.ColumnMappings.Add("CTC", "CTC");
            tableMapping.ColumnMappings.Add("FECR", "FECR");
            tableMapping.ColumnMappings.Add("FENI", "FENI");
            tableMapping.ColumnMappings.Add("FESB", "FESB");
            tableMapping.ColumnMappings.Add("FEAS", "FEAS");
            tableMapping.ColumnMappings.Add("FEPB", "FEPB");
            tableMapping.ColumnMappings.Add("FEMO", "FEMO");
            tableMapping.ColumnMappings.Add("FECU", "FECU");
            tableMapping.ColumnMappings.Add("FEB", "FEB");
            tableMapping.ColumnMappings.Add("FEV", "FEV");
            tableMapping.ColumnMappings.Add("FEAL", "FEAL");
            tableMapping.ColumnMappings.Add("FENB", "FENB");
            tableMapping.ColumnMappings.Add("FEW", "FEW");
            tableMapping.ColumnMappings.Add("FEZN", "FEZN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"DDLUCI\" WHERE (((:IsNull_LUCI = 1 AND \"LUCI\" IS NULL) OR (\"LUCI\" = :" +
                "Original_LUCI)) AND (\"GAOLU\" = :Original_GAOLU) AND (\"ZDSJ\" = :Original_ZDSJ) AN" +
                "D ((:IsNull_DGSJ = 1 AND \"DGSJ\" IS NULL) OR (\"DGSJ\" = :Original_DGSJ)) AND ((:Is" +
                "Null_KKSJ = 1 AND \"KKSJ\" IS NULL) OR (\"KKSJ\" = :Original_KKSJ)) AND ((:IsNull_DK" +
                "SJ = 1 AND \"DKSJ\" IS NULL) OR (\"DKSJ\" = :Original_DKSJ)) AND ((:IsNull_WDSJ = 1 " +
                "AND \"WDSJ\" IS NULL) OR (\"WDSJ\" = :Original_WDSJ)) AND ((:IsNull_QUCHU = 1 AND \"Q" +
                "UCHU\" IS NULL) OR (\"QUCHU\" = :Original_QUCHU)) AND ((:IsNull_GFELIANG = 1 AND \"G" +
                "FELIANG\" IS NULL) OR (\"GFELIANG\" = :Original_GFELIANG)) AND ((:IsNull_LFELIANG =" +
                " 1 AND \"LFELIANG\" IS NULL) OR (\"LFELIANG\" = :Original_LFELIANG)) AND ((:IsNull_F" +
                "ELIANG = 1 AND \"FELIANG\" IS NULL) OR (\"FELIANG\" = :Original_FELIANG)) AND ((:IsN" +
                "ull_LIAOPI = 1 AND \"LIAOPI\" IS NULL) OR (\"LIAOPI\" = :Original_LIAOPI)) AND ((:Is" +
                "Null_GGUANSHU = 1 AND \"GGUANSHU\" IS NULL) OR (\"GGUANSHU\" = :Original_GGUANSHU)) " +
                "AND ((:IsNull_FEWENDU = 1 AND \"FEWENDU\" IS NULL) OR (\"FEWENDU\" = :Original_FEWEN" +
                "DU)) AND ((:IsNull_FEC = 1 AND \"FEC\" IS NULL) OR (\"FEC\" = :Original_FEC)) AND ((" +
                ":IsNull_FESI = 1 AND \"FESI\" IS NULL) OR (\"FESI\" = :Original_FESI)) AND ((:IsNull" +
                "_FEMN = 1 AND \"FEMN\" IS NULL) OR (\"FEMN\" = :Original_FEMN)) AND ((:IsNull_FEP = " +
                "1 AND \"FEP\" IS NULL) OR (\"FEP\" = :Original_FEP)) AND ((:IsNull_FES = 1 AND \"FES\"" +
                " IS NULL) OR (\"FES\" = :Original_FES)) AND ((:IsNull_FETI = 1 AND \"FETI\" IS NULL)" +
                " OR (\"FETI\" = :Original_FETI)) AND ((:IsNull_GFESI = 1 AND \"GFESI\" IS NULL) OR (" +
                "\"GFESI\" = :Original_GFESI)) AND ((:IsNull_GFES = 1 AND \"GFES\" IS NULL) OR (\"GFES" +
                "\" = :Original_GFES)) AND ((:IsNull_SHENDU = 1 AND \"SHENDU\" IS NULL) OR (\"SHENDU\"" +
                " = :Original_SHENDU)) AND ((:IsNull_JIAODU = 1 AND \"JIAODU\" IS NULL) OR (\"JIAODU" +
                "\" = :Original_JIAODU)) AND ((:IsNull_DANILIANG = 1 AND \"DANILIANG\" IS NULL) OR (" +
                "\"DANILIANG\" = :Original_DANILIANG)) AND ((:IsNull_PNQK1 = 1 AND \"PNQK1\" IS NULL)" +
                " OR (\"PNQK1\" = :Original_PNQK1)) AND ((:IsNull_PNQK2 = 1 AND \"PNQK2\" IS NULL) OR" +
                " (\"PNQK2\" = :Original_PNQK2)) AND ((:IsNull_ZHAYANG = 1 AND \"ZHAYANG\" IS NULL) O" +
                "R (\"ZHAYANG\" = :Original_ZHAYANG)) AND ((:IsNull_SHUIWEN1 = 1 AND \"SHUIWEN1\" IS " +
                "NULL) OR (\"SHUIWEN1\" = :Original_SHUIWEN1)) AND ((:IsNull_SHUIWEN2 = 1 AND \"SHUI" +
                "WEN2\" IS NULL) OR (\"SHUIWEN2\" = :Original_SHUIWEN2)) AND ((:IsNull_ZHASIO2 = 1 A" +
                "ND \"ZHASIO2\" IS NULL) OR (\"ZHASIO2\" = :Original_ZHASIO2)) AND ((:IsNull_ZHACAO =" +
                " 1 AND \"ZHACAO\" IS NULL) OR (\"ZHACAO\" = :Original_ZHACAO)) AND ((:IsNull_ZHAMGO " +
                "= 1 AND \"ZHAMGO\" IS NULL) OR (\"ZHAMGO\" = :Original_ZHAMGO)) AND ((:IsNull_ZHAAL2" +
                "O3 = 1 AND \"ZHAAL2O3\" IS NULL) OR (\"ZHAAL2O3\" = :Original_ZHAAL2O3)) AND ((:IsNu" +
                "ll_ZHAS = 1 AND \"ZHAS\" IS NULL) OR (\"ZHAS\" = :Original_ZHAS)) AND ((:IsNull_ZHAT" +
                "IO2 = 1 AND \"ZHATIO2\" IS NULL) OR (\"ZHATIO2\" = :Original_ZHATIO2)) AND ((:IsNull" +
                "_ZHAR2 = 1 AND \"ZHAR2\" IS NULL) OR (\"ZHAR2\" = :Original_ZHAR2)) AND (\"BANCI\" = :" +
                "Original_BANCI) AND (\"BANLUCI\" = :Original_BANLUCI) AND ((:IsNull_FENLEI = 1 AND" +
                " \"FENLEI\" IS NULL) OR (\"FENLEI\" = :Original_FENLEI)) AND ((:IsNull_JIAOYAN = 1 A" +
                "ND \"JIAOYAN\" IS NULL) OR (\"JIAOYAN\" = :Original_JIAOYAN)) AND ((:IsNull_TZSJ = 1" +
                " AND \"TZSJ\" IS NULL) OR (\"TZSJ\" = :Original_TZSJ)) AND ((:IsNull_ZHAR3 = 1 AND \"" +
                "ZHAR3\" IS NULL) OR (\"ZHAR3\" = :Original_ZHAR3)) AND ((:IsNull_ZHAR4 = 1 AND \"ZHA" +
                "R4\" IS NULL) OR (\"ZHAR4\" = :Original_ZHAR4)) AND ((:IsNull_ZHAMGOALO = 1 AND \"ZH" +
                "AMGOALO\" IS NULL) OR (\"ZHAMGOALO\" = :Original_ZHAMGOALO)) AND ((:IsNull_LZQK = 1" +
                " AND \"LZQK\" IS NULL) OR (\"LZQK\" = :Original_LZQK)) AND ((:IsNull_CTC = 1 AND \"CT" +
                "C\" IS NULL) OR (\"CTC\" = :Original_CTC)) AND ((:IsNull_FECR = 1 AND \"FECR\" IS NUL" +
                "L) OR (\"FECR\" = :Original_FECR)) AND ((:IsNull_FENI = 1 AND \"FENI\" IS NULL) OR (" +
                "\"FENI\" = :Original_FENI)) AND ((:IsNull_FESB = 1 AND \"FESB\" IS NULL) OR (\"FESB\" " +
                "= :Original_FESB)) AND ((:IsNull_FEAS = 1 AND \"FEAS\" IS NULL) OR (\"FEAS\" = :Orig" +
                "inal_FEAS)) AND ((:IsNull_FEPB = 1 AND \"FEPB\" IS NULL) OR (\"FEPB\" = :Original_FE" +
                "PB)) AND ((:IsNull_FEMO = 1 AND \"FEMO\" IS NULL) OR (\"FEMO\" = :Original_FEMO)) AN" +
                "D ((:IsNull_FECU = 1 AND \"FECU\" IS NULL) OR (\"FECU\" = :Original_FECU)) AND ((:Is" +
                "Null_FEB = 1 AND \"FEB\" IS NULL) OR (\"FEB\" = :Original_FEB)) AND ((:IsNull_FEV = " +
                "1 AND \"FEV\" IS NULL) OR (\"FEV\" = :Original_FEV)) AND ((:IsNull_FEAL = 1 AND \"FEA" +
                "L\" IS NULL) OR (\"FEAL\" = :Original_FEAL)) AND ((:IsNull_FENB = 1 AND \"FENB\" IS N" +
                "ULL) OR (\"FENB\" = :Original_FENB)) AND ((:IsNull_FEW = 1 AND \"FEW\" IS NULL) OR (" +
                "\"FEW\" = :Original_FEW)) AND ((:IsNull_FEZN = 1 AND \"FEZN\" IS NULL) OR (\"FEZN\" = " +
                ":Original_FEZN)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LUCI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LUCI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LUCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LUCI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZDSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ZDSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DGSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DGSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DGSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DGSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_KKSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "KKSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_KKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "KKSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DKSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_WDSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "WDSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_WDSJ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "WDSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_QUCHU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "QUCHU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_QUCHU", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUCHU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GFELIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GFELIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFELIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LFELIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LFELIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LFELIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FELIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FELIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FELIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LIAOPI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LIAOPI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LIAOPI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LIAOPI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GGUANSHU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GGUANSHU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GGUANSHU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GGUANSHU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEWENDU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEWENDU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEWENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEWENDU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEC", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FESI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FESI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEMN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEMN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEMN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEP", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEP", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FES", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FETI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FETI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FETI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FETI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GFESI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GFESI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GFESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFESI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GFES", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GFES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GFES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHENDU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHENDU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHENDU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JIAODU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JIAODU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JIAODU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAODU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DANILIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DANILIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DANILIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DANILIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PNQK1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PNQK1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PNQK1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PNQK2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PNQK2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PNQK2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAYANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAYANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAYANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ZHAYANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHUIWEN1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHUIWEN1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHUIWEN2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHUIWEN2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHASIO2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHASIO2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHASIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHASIO2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHACAO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHACAO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHACAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHACAO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAMGO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAMGO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAMGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAAL2O3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAAL2O3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAAL2O3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAAL2O3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHATIO2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHATIO2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHATIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHATIO2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAR2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAR2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAR2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANCI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANLUCI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANLUCI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FENLEI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FENLEI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FENLEI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FENLEI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JIAOYAN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JIAOYAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JIAOYAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAOYAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TZSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TZSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TZSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TZSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAR3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAR3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAR3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAR4", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAR4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAR4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAMGOALO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAMGOALO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAMGOALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGOALO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LZQK", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LZQK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LZQK", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LZQK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CTC", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CTC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CTC", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CTC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FECR", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FECR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FECR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FENI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FENI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FENI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FESB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FESB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FESB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEAS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEPB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEPB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEPB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEPB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEMO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEMO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEMO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FECU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FECU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FECU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEV", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEV", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEV", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEV", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEAL", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEAL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEAL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FENB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FENB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FENB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEW", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEW", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEW", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEW", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEZN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEZN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEZN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""DDLUCI"" (""LUCI"", ""GAOLU"", ""ZDSJ"", ""DGSJ"", ""KKSJ"", ""DKSJ"", ""WDSJ"", ""QUCHU"", ""GFELIANG"", ""LFELIANG"", ""FELIANG"", ""LIAOPI"", ""GGUANSHU"", ""FEWENDU"", ""FEC"", ""FESI"", ""FEMN"", ""FEP"", ""FES"", ""FETI"", ""GFESI"", ""GFES"", ""SHENDU"", ""JIAODU"", ""DANILIANG"", ""PNQK1"", ""PNQK2"", ""ZHAYANG"", ""SHUIWEN1"", ""SHUIWEN2"", ""ZHASIO2"", ""ZHACAO"", ""ZHAMGO"", ""ZHAAL2O3"", ""ZHAS"", ""ZHATIO2"", ""ZHAR2"", ""BANCI"", ""BANLUCI"", ""FENLEI"", ""JIAOYAN"", ""TZSJ"", ""ZHAR3"", ""ZHAR4"", ""ZHAMGOALO"", ""LZQK"", ""CTC"", ""FECR"", ""FENI"", ""FESB"", ""FEAS"", ""FEPB"", ""FEMO"", ""FECU"", ""FEB"", ""FEV"", ""FEAL"", ""FENB"", ""FEW"", ""FEZN"") VALUES (:LUCI, :GAOLU, :ZDSJ, :DGSJ, :KKSJ, :DKSJ, :WDSJ, :QUCHU, :GFELIANG, :LFELIANG, :FELIANG, :LIAOPI, :GGUANSHU, :FEWENDU, :FEC, :FESI, :FEMN, :FEP, :FES, :FETI, :GFESI, :GFES, :SHENDU, :JIAODU, :DANILIANG, :PNQK1, :PNQK2, :ZHAYANG, :SHUIWEN1, :SHUIWEN2, :ZHASIO2, :ZHACAO, :ZHAMGO, :ZHAAL2O3, :ZHAS, :ZHATIO2, :ZHAR2, :BANCI, :BANLUCI, :FENLEI, :JIAOYAN, :TZSJ, :ZHAR3, :ZHAR4, :ZHAMGOALO, :LZQK, :CTC, :FECR, :FENI, :FESB, :FEAS, :FEPB, :FEMO, :FECU, :FEB, :FEV, :FEAL, :FENB, :FEW, :FEZN)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LUCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LUCI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZDSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ZDSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DGSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DGSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("KKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "KKSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("WDSJ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "WDSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QUCHU", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUCHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFELIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LFELIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FELIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOPI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LIAOPI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GGUANSHU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GGUANSHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEWENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEWENDU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEMN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEP", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FETI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FETI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFESI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHENDU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAODU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAODU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DANILIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DANILIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PNQK1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PNQK2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAYANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ZHAYANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHUIWEN1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHUIWEN2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHASIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHASIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHACAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHACAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAMGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAAL2O3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAAL2O3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHATIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHATIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAR2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANCI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANLUCI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANLUCI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FENLEI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FENLEI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAOYAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAOYAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TZSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TZSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAR3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAR4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAMGOALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGOALO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LZQK", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LZQK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CTC", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CTC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FECR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FENI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FESB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEPB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEPB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEMO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FECU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEV", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEAL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FENB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEW", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEW", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEZN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"DDLUCI\" SET \"LUCI\" = :LUCI, \"GAOLU\" = :GAOLU, \"ZDSJ\" = :ZDSJ, \"DGSJ\" = :D" +
                "GSJ, \"KKSJ\" = :KKSJ, \"DKSJ\" = :DKSJ, \"WDSJ\" = :WDSJ, \"QUCHU\" = :QUCHU, \"GFELIANG" +
                "\" = :GFELIANG, \"LFELIANG\" = :LFELIANG, \"FELIANG\" = :FELIANG, \"LIAOPI\" = :LIAOPI," +
                " \"GGUANSHU\" = :GGUANSHU, \"FEWENDU\" = :FEWENDU, \"FEC\" = :FEC, \"FESI\" = :FESI, \"FE" +
                "MN\" = :FEMN, \"FEP\" = :FEP, \"FES\" = :FES, \"FETI\" = :FETI, \"GFESI\" = :GFESI, \"GFES" +
                "\" = :GFES, \"SHENDU\" = :SHENDU, \"JIAODU\" = :JIAODU, \"DANILIANG\" = :DANILIANG, \"PN" +
                "QK1\" = :PNQK1, \"PNQK2\" = :PNQK2, \"ZHAYANG\" = :ZHAYANG, \"SHUIWEN1\" = :SHUIWEN1, \"" +
                "SHUIWEN2\" = :SHUIWEN2, \"ZHASIO2\" = :ZHASIO2, \"ZHACAO\" = :ZHACAO, \"ZHAMGO\" = :ZHA" +
                "MGO, \"ZHAAL2O3\" = :ZHAAL2O3, \"ZHAS\" = :ZHAS, \"ZHATIO2\" = :ZHATIO2, \"ZHAR2\" = :ZH" +
                "AR2, \"BANCI\" = :BANCI, \"BANLUCI\" = :BANLUCI, \"FENLEI\" = :FENLEI, \"JIAOYAN\" = :JI" +
                "AOYAN, \"TZSJ\" = :TZSJ, \"ZHAR3\" = :ZHAR3, \"ZHAR4\" = :ZHAR4, \"ZHAMGOALO\" = :ZHAMGO" +
                "ALO, \"LZQK\" = :LZQK, \"CTC\" = :CTC, \"FECR\" = :FECR, \"FENI\" = :FENI, \"FESB\" = :FES" +
                "B, \"FEAS\" = :FEAS, \"FEPB\" = :FEPB, \"FEMO\" = :FEMO, \"FECU\" = :FECU, \"FEB\" = :FEB," +
                " \"FEV\" = :FEV, \"FEAL\" = :FEAL, \"FENB\" = :FENB, \"FEW\" = :FEW, \"FEZN\" = :FEZN WHER" +
                "E (((:IsNull_LUCI = 1 AND \"LUCI\" IS NULL) OR (\"LUCI\" = :Original_LUCI)) AND (\"GA" +
                "OLU\" = :Original_GAOLU) AND (\"ZDSJ\" = :Original_ZDSJ) AND ((:IsNull_DGSJ = 1 AND" +
                " \"DGSJ\" IS NULL) OR (\"DGSJ\" = :Original_DGSJ)) AND ((:IsNull_KKSJ = 1 AND \"KKSJ\"" +
                " IS NULL) OR (\"KKSJ\" = :Original_KKSJ)) AND ((:IsNull_DKSJ = 1 AND \"DKSJ\" IS NUL" +
                "L) OR (\"DKSJ\" = :Original_DKSJ)) AND ((:IsNull_WDSJ = 1 AND \"WDSJ\" IS NULL) OR (" +
                "\"WDSJ\" = :Original_WDSJ)) AND ((:IsNull_QUCHU = 1 AND \"QUCHU\" IS NULL) OR (\"QUCH" +
                "U\" = :Original_QUCHU)) AND ((:IsNull_GFELIANG = 1 AND \"GFELIANG\" IS NULL) OR (\"G" +
                "FELIANG\" = :Original_GFELIANG)) AND ((:IsNull_LFELIANG = 1 AND \"LFELIANG\" IS NUL" +
                "L) OR (\"LFELIANG\" = :Original_LFELIANG)) AND ((:IsNull_FELIANG = 1 AND \"FELIANG\"" +
                " IS NULL) OR (\"FELIANG\" = :Original_FELIANG)) AND ((:IsNull_LIAOPI = 1 AND \"LIAO" +
                "PI\" IS NULL) OR (\"LIAOPI\" = :Original_LIAOPI)) AND ((:IsNull_GGUANSHU = 1 AND \"G" +
                "GUANSHU\" IS NULL) OR (\"GGUANSHU\" = :Original_GGUANSHU)) AND ((:IsNull_FEWENDU = " +
                "1 AND \"FEWENDU\" IS NULL) OR (\"FEWENDU\" = :Original_FEWENDU)) AND ((:IsNull_FEC =" +
                " 1 AND \"FEC\" IS NULL) OR (\"FEC\" = :Original_FEC)) AND ((:IsNull_FESI = 1 AND \"FE" +
                "SI\" IS NULL) OR (\"FESI\" = :Original_FESI)) AND ((:IsNull_FEMN = 1 AND \"FEMN\" IS " +
                "NULL) OR (\"FEMN\" = :Original_FEMN)) AND ((:IsNull_FEP = 1 AND \"FEP\" IS NULL) OR " +
                "(\"FEP\" = :Original_FEP)) AND ((:IsNull_FES = 1 AND \"FES\" IS NULL) OR (\"FES\" = :O" +
                "riginal_FES)) AND ((:IsNull_FETI = 1 AND \"FETI\" IS NULL) OR (\"FETI\" = :Original_" +
                "FETI)) AND ((:IsNull_GFESI = 1 AND \"GFESI\" IS NULL) OR (\"GFESI\" = :Original_GFES" +
                "I)) AND ((:IsNull_GFES = 1 AND \"GFES\" IS NULL) OR (\"GFES\" = :Original_GFES)) AND" +
                " ((:IsNull_SHENDU = 1 AND \"SHENDU\" IS NULL) OR (\"SHENDU\" = :Original_SHENDU)) AN" +
                "D ((:IsNull_JIAODU = 1 AND \"JIAODU\" IS NULL) OR (\"JIAODU\" = :Original_JIAODU)) A" +
                "ND ((:IsNull_DANILIANG = 1 AND \"DANILIANG\" IS NULL) OR (\"DANILIANG\" = :Original_" +
                "DANILIANG)) AND ((:IsNull_PNQK1 = 1 AND \"PNQK1\" IS NULL) OR (\"PNQK1\" = :Original" +
                "_PNQK1)) AND ((:IsNull_PNQK2 = 1 AND \"PNQK2\" IS NULL) OR (\"PNQK2\" = :Original_PN" +
                "QK2)) AND ((:IsNull_ZHAYANG = 1 AND \"ZHAYANG\" IS NULL) OR (\"ZHAYANG\" = :Original" +
                "_ZHAYANG)) AND ((:IsNull_SHUIWEN1 = 1 AND \"SHUIWEN1\" IS NULL) OR (\"SHUIWEN1\" = :" +
                "Original_SHUIWEN1)) AND ((:IsNull_SHUIWEN2 = 1 AND \"SHUIWEN2\" IS NULL) OR (\"SHUI" +
                "WEN2\" = :Original_SHUIWEN2)) AND ((:IsNull_ZHASIO2 = 1 AND \"ZHASIO2\" IS NULL) OR" +
                " (\"ZHASIO2\" = :Original_ZHASIO2)) AND ((:IsNull_ZHACAO = 1 AND \"ZHACAO\" IS NULL)" +
                " OR (\"ZHACAO\" = :Original_ZHACAO)) AND ((:IsNull_ZHAMGO = 1 AND \"ZHAMGO\" IS NULL" +
                ") OR (\"ZHAMGO\" = :Original_ZHAMGO)) AND ((:IsNull_ZHAAL2O3 = 1 AND \"ZHAAL2O3\" IS" +
                " NULL) OR (\"ZHAAL2O3\" = :Original_ZHAAL2O3)) AND ((:IsNull_ZHAS = 1 AND \"ZHAS\" I" +
                "S NULL) OR (\"ZHAS\" = :Original_ZHAS)) AND ((:IsNull_ZHATIO2 = 1 AND \"ZHATIO2\" IS" +
                " NULL) OR (\"ZHATIO2\" = :Original_ZHATIO2)) AND ((:IsNull_ZHAR2 = 1 AND \"ZHAR2\" I" +
                "S NULL) OR (\"ZHAR2\" = :Original_ZHAR2)) AND (\"BANCI\" = :Original_BANCI) AND (\"BA" +
                "NLUCI\" = :Original_BANLUCI) AND ((:IsNull_FENLEI = 1 AND \"FENLEI\" IS NULL) OR (\"" +
                "FENLEI\" = :Original_FENLEI)) AND ((:IsNull_JIAOYAN = 1 AND \"JIAOYAN\" IS NULL) OR" +
                " (\"JIAOYAN\" = :Original_JIAOYAN)) AND ((:IsNull_TZSJ = 1 AND \"TZSJ\" IS NULL) OR " +
                "(\"TZSJ\" = :Original_TZSJ)) AND ((:IsNull_ZHAR3 = 1 AND \"ZHAR3\" IS NULL) OR (\"ZHA" +
                "R3\" = :Original_ZHAR3)) AND ((:IsNull_ZHAR4 = 1 AND \"ZHAR4\" IS NULL) OR (\"ZHAR4\"" +
                " = :Original_ZHAR4)) AND ((:IsNull_ZHAMGOALO = 1 AND \"ZHAMGOALO\" IS NULL) OR (\"Z" +
                "HAMGOALO\" = :Original_ZHAMGOALO)) AND ((:IsNull_LZQK = 1 AND \"LZQK\" IS NULL) OR " +
                "(\"LZQK\" = :Original_LZQK)) AND ((:IsNull_CTC = 1 AND \"CTC\" IS NULL) OR (\"CTC\" = " +
                ":Original_CTC)) AND ((:IsNull_FECR = 1 AND \"FECR\" IS NULL) OR (\"FECR\" = :Origina" +
                "l_FECR)) AND ((:IsNull_FENI = 1 AND \"FENI\" IS NULL) OR (\"FENI\" = :Original_FENI)" +
                ") AND ((:IsNull_FESB = 1 AND \"FESB\" IS NULL) OR (\"FESB\" = :Original_FESB)) AND (" +
                "(:IsNull_FEAS = 1 AND \"FEAS\" IS NULL) OR (\"FEAS\" = :Original_FEAS)) AND ((:IsNul" +
                "l_FEPB = 1 AND \"FEPB\" IS NULL) OR (\"FEPB\" = :Original_FEPB)) AND ((:IsNull_FEMO " +
                "= 1 AND \"FEMO\" IS NULL) OR (\"FEMO\" = :Original_FEMO)) AND ((:IsNull_FECU = 1 AND" +
                " \"FECU\" IS NULL) OR (\"FECU\" = :Original_FECU)) AND ((:IsNull_FEB = 1 AND \"FEB\" I" +
                "S NULL) OR (\"FEB\" = :Original_FEB)) AND ((:IsNull_FEV = 1 AND \"FEV\" IS NULL) OR " +
                "(\"FEV\" = :Original_FEV)) AND ((:IsNull_FEAL = 1 AND \"FEAL\" IS NULL) OR (\"FEAL\" =" +
                " :Original_FEAL)) AND ((:IsNull_FENB = 1 AND \"FENB\" IS NULL) OR (\"FENB\" = :Origi" +
                "nal_FENB)) AND ((:IsNull_FEW = 1 AND \"FEW\" IS NULL) OR (\"FEW\" = :Original_FEW)) " +
                "AND ((:IsNull_FEZN = 1 AND \"FEZN\" IS NULL) OR (\"FEZN\" = :Original_FEZN)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LUCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LUCI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZDSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ZDSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DGSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DGSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("KKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "KKSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("WDSJ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "WDSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("QUCHU", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUCHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFELIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LFELIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FELIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LIAOPI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LIAOPI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GGUANSHU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GGUANSHU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEWENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEWENDU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEMN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEP", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FETI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FETI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFESI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFES", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHENDU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAODU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAODU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("DANILIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DANILIANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PNQK1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PNQK2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAYANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ZHAYANG", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHUIWEN1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SHUIWEN2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHASIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHASIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHACAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHACAO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAMGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAAL2O3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAAL2O3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHATIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHATIO2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAR2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANCI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BANLUCI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANLUCI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FENLEI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FENLEI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JIAOYAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAOYAN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TZSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TZSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAR3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAR4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHAMGOALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGOALO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LZQK", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LZQK", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("CTC", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CTC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FECR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FENI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENI", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FESB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEPB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEPB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEMO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMO", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FECU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEV", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEV", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEAL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FENB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEW", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEW", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FEZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEZN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LUCI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LUCI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LUCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "LUCI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZDSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "ZDSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DGSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DGSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DGSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DGSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_KKSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "KKSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_KKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "KKSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DKSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DKSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_WDSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "WDSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_WDSJ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "WDSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_QUCHU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "QUCHU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_QUCHU", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "QUCHU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GFELIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GFELIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFELIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LFELIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LFELIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LFELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LFELIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FELIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FELIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FELIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FELIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LIAOPI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LIAOPI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LIAOPI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LIAOPI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GGUANSHU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GGUANSHU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GGUANSHU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GGUANSHU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEWENDU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEWENDU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEWENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEWENDU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEC", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEC", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FESI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FESI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEMN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEMN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEMN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEP", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEP", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEP", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEP", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FES", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FETI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FETI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FETI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FETI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GFESI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GFESI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GFESI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFESI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_GFES", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "GFES", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GFES", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFES", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHENDU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHENDU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHENDU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHENDU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JIAODU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JIAODU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JIAODU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAODU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_DANILIANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "DANILIANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_DANILIANG", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "DANILIANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PNQK1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PNQK1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PNQK1", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_PNQK2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "PNQK2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_PNQK2", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "PNQK2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAYANG", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAYANG", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAYANG", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "ZHAYANG", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHUIWEN1", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN1", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHUIWEN1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN1", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_SHUIWEN2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SHUIWEN2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SHUIWEN2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHASIO2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHASIO2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHASIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHASIO2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHACAO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHACAO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHACAO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHACAO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAMGO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAMGO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAMGO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAAL2O3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAAL2O3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAAL2O3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAAL2O3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHATIO2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHATIO2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHATIO2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHATIO2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAR2", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAR2", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAR2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR2", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANCI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BANCI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_BANLUCI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "BANLUCI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FENLEI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FENLEI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FENLEI", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "FENLEI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_JIAOYAN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "JIAOYAN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_JIAOYAN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "JIAOYAN", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_TZSJ", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "TZSJ", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_TZSJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "TZSJ", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAR3", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAR3", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAR3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR3", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAR4", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAR4", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAR4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAR4", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_ZHAMGOALO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "ZHAMGOALO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_ZHAMGOALO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHAMGOALO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_LZQK", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "LZQK", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_LZQK", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "LZQK", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_CTC", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "CTC", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_CTC", global::System.Data.OracleClient.OracleType.NVarChar, 0, global::System.Data.ParameterDirection.Input, "CTC", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FECR", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FECR", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FECR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECR", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FENI", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FENI", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FENI", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENI", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FESB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FESB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FESB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FESB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEAS", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEAS", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEAS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAS", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEPB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEPB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEPB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEPB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEMO", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEMO", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEMO", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEMO", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FECU", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FECU", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FECU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FECU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEV", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEV", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEV", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEV", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEAL", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEAL", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEAL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEAL", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FENB", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FENB", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FENB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FENB", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEW", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEW", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEW", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEW", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("IsNull_FEZN", global::System.Data.OracleClient.OracleType.Int32, 0, global::System.Data.ParameterDirection.Input, "FEZN", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_FEZN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FEZN", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   LUCI, GAOLU, ZDSJ, DGSJ, KKSJ, DKSJ, WDSJ, QUCHU, GFELIANG, LFELIANG, FELIANG, LIAOPI, GGUANSHU, 
                FEWENDU, FEC, FESI, FEMN, FEP, FES, FETI, GFESI, GFES, SHENDU, JIAODU, DANILIANG, PNQK1, PNQK2, ZHAYANG, 
                SHUIWEN1, SHUIWEN2, ZHASIO2, ZHACAO, ZHAMGO, ZHAAL2O3, ZHAS, ZHATIO2, ZHAR2, BANCI, BANLUCI, FENLEI, 
                JIAOYAN, TZSJ, ZHAR3, ZHAR4, ZHAMGOALO, LZQK, CTC, FECR, FENI, FESB, FEAS, FEPB, FEMO, FECU, FEB, FEV, 
                FEAL, FENB, FEW, FEZN
FROM      DDLUCI
WHERE   (TRUNC(ZDSJ) = :RQ) AND (GAOLU = :GAOLU)
ORDER BY ZDSJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "ZDSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.DDLUCIDataTable dataTable, System.DateTime RQ, decimal GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.DDLUCIDataTable GetData(System.DateTime RQ, decimal GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU));
            生产数据.DDLUCIDataTable dataTable = new 生产数据.DDLUCIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.DDLUCIDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "DDLUCI");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBJSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBJSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBJS";
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("JS", "JS");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"LF\".\"RBJS\" (\"SJ\", \"JS\", \"GAOLU\") VALUES (:SJ, :JS, :GAOLU)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JS", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "JS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBJS\r\nSET SJ = :SJ, JS = :JS, GAOLU = :GAOLU\r\nWHERE (GAOLU = :Original_GAO" +
                "LU) AND (SJ = :Original_SJ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JS", global::System.Data.OracleClient.OracleType.VarChar, 4000, global::System.Data.ParameterDirection.Input, "JS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SJ, JS, GAOLU FROM LF.RBJS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBJSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBJSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            生产数据.RBJSDataTable dataTable = new 生产数据.RBJSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBJSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBJS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> SJ, string JS, decimal GAOLU) {
            if ((SJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((JS == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(JS));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(GAOLU));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> SJ, string JS, decimal GAOLU, decimal Original_GAOLU, global::System.Nullable<global::System.DateTime> Original_SJ) {
            if ((SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((JS == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(JS));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(GAOLU));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_GAOLU));
            if ((Original_SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LT_LIAOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LT_LIAOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LT_LIAO";
            tableMapping.ColumnMappings.Add("T", "T");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("PISHU", "PISHU");
            tableMapping.ColumnMappings.Add("SYR", "SYR");
            tableMapping.ColumnMappings.Add("SYRBL", "SYRBL");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     T, GAOLU, PISHU, SYR, SYRBL\r\nFROM         LT_LIAO\r\nwhere t>=sysdate-0." +
                "25 and gaolu=:gaolu\r\norder by t";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("gaolu", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT GAOLU, PISHU, SYR, SYRBL, T FROM LT_LIAO WHERE (T >= :sj1) AND (T <= :sj2)" +
                " AND (GAOLU = :gaolu) ORDER BY T";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("sj1", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("sj2", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "T", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("gaolu", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.LT_LIAODataTable dataTable, decimal gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(gaolu));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.LT_LIAODataTable GetData(decimal gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(gaolu));
            生产数据.LT_LIAODataTable dataTable = new 生产数据.LT_LIAODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(生产数据.LT_LIAODataTable dataTable, System.DateTime sj1, System.DateTime sj2, decimal gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(sj1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sj2));
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(gaolu));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 生产数据.LT_LIAODataTable GetDataBy(System.DateTime sj1, System.DateTime sj2, decimal gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(sj1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sj2));
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(gaolu));
            生产数据.LT_LIAODataTable dataTable = new 生产数据.LT_LIAODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SHIJIGUITableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public SHIJIGUITableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SHIJIGUI";
            tableMapping.ColumnMappings.Add("DKSJ", "DKSJ");
            tableMapping.ColumnMappings.Add("FESI", "FESI");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[2];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select dksj,trunc(fesi/3,3) as fesi from ddluci where gaolu=:gaolu and dksj>=sysd" +
                "ate-0.25 and dksj is not null and fesi>0 and fesi is not null order by dksj";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("gaolu", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT DKSJ,trunc(fesi/3,3) as fesi FROM DDLUCI WHERE (GAOLU = :gaolu) AND (DKSJ " +
                ">= :sj1) AND (DKSJ <= :sj2) AND (DKSJ IS NOT NULL) AND (FESI > 0) AND (FESI IS N" +
                "OT NULL) ORDER BY DKSJ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("gaolu", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("sj1", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("sj2", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "DKSJ", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.SHIJIGUIDataTable dataTable, global::System.Nullable<decimal> gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((gaolu.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(gaolu.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.SHIJIGUIDataTable GetData(global::System.Nullable<decimal> gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((gaolu.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(gaolu.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            生产数据.SHIJIGUIDataTable dataTable = new 生产数据.SHIJIGUIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(生产数据.SHIJIGUIDataTable dataTable, global::System.Nullable<decimal> gaolu, global::System.Nullable<global::System.DateTime> sj1, global::System.Nullable<global::System.DateTime> sj2) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((gaolu.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(gaolu.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((sj1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sj1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((sj2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(sj2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual 生产数据.SHIJIGUIDataTable GetDataBy(global::System.Nullable<decimal> gaolu, global::System.Nullable<global::System.DateTime> sj1, global::System.Nullable<global::System.DateTime> sj2) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((gaolu.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(gaolu.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((sj1.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sj1.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((sj2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(sj2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            生产数据.SHIJIGUIDataTable dataTable = new 生产数据.SHIJIGUIDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ALARMTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ALARMTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ALARM";
            tableMapping.ColumnMappings.Add("CLOCK", "CLOCK");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("LUKUANG", "LUKUANG");
            tableMapping.ColumnMappings.Add("REFENGYL1", "REFENGYL1");
            tableMapping.ColumnMappings.Add("REFENGYL2", "REFENGYL2");
            tableMapping.ColumnMappings.Add("LENGFENGLL1", "LENGFENGLL1");
            tableMapping.ColumnMappings.Add("LENGFENGLL2", "LENGFENGLL2");
            tableMapping.ColumnMappings.Add("LIAOXIAN1", "LIAOXIAN1");
            tableMapping.ColumnMappings.Add("LIAOXIAN2", "LIAOXIAN2");
            tableMapping.ColumnMappings.Add("LIAOXIAN3", "LIAOXIAN3");
            tableMapping.ColumnMappings.Add("LIAOXIAN4", "LIAOXIAN4");
            tableMapping.ColumnMappings.Add("LUDINGWD1", "LUDINGWD1");
            tableMapping.ColumnMappings.Add("LUDINGWD2", "LUDINGWD2");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CLOCK, GAOLU, LUKUANG, REFENGYL1, REFENGYL2, LENGFENGLL1, LENGFENGLL2, LIA" +
                "OXIAN1, LIAOXIAN2, LIAOXIAN3, LIAOXIAN4, LUDINGWD1, LUDINGWD2 FROM LF.ALARM\r\nwhe" +
                "re trunc(clock)=:RQ and GAOLU=:GAOLU";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.ALARMDataTable dataTable, System.DateTime RQ, decimal GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.ALARMDataTable GetData(System.DateTime RQ, decimal GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU));
            生产数据.ALARMDataTable dataTable = new 生产数据.ALARMDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBGZTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBGZTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBGZ";
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("BC", "BC");
            tableMapping.ColumnMappings.Add("JL", "JL");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"RBGZ\" (\"SJ\", \"BC\", \"JL\", \"GAOLU\") VALUES (:SJ, :BC, :JL, :GAOLU)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JL", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "JL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE RBGZ\r\nSET SJ = :SJ, BC = :BC, JL = :JL, GAOLU = :GAOLU\r\nWHERE (GAOLU = :Or" +
                "iginal_GAOLU) AND (SJ = :Original_SJ)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 6, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("JL", global::System.Data.OracleClient.OracleType.VarChar, 4000, global::System.Data.ParameterDirection.Input, "JL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("Original_SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT SJ, BC, JL, GAOLU\r\nFROM RBGZ\r\nWHERE (GAOLU = :GAOLU) AND (SJ = :SJ) AND (B" +
                "C = :BC)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BC", global::System.Data.OracleClient.OracleType.VarChar, 6, global::System.Data.ParameterDirection.Input, "BC", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBGZDataTable dataTable, decimal GAOLU, global::System.Nullable<global::System.DateTime> SJ, string BC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(GAOLU));
            if ((SJ.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(BC));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBGZDataTable GetData(decimal GAOLU, global::System.Nullable<global::System.DateTime> SJ, string BC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((decimal)(GAOLU));
            if ((SJ.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(BC));
            }
            生产数据.RBGZDataTable dataTable = new 生产数据.RBGZDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBGZDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBGZ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> SJ, string BC, string JL, decimal GAOLU) {
            if ((SJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(BC));
            }
            if ((JL == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JL));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(GAOLU));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> SJ, string BC, string JL, decimal GAOLU, decimal Original_GAOLU, global::System.Nullable<global::System.DateTime> Original_SJ) {
            if ((SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((BC == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(BC));
            }
            if ((JL == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JL));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(GAOLU));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(Original_GAOLU));
            if ((Original_SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBCAOZUO1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBCAOZUO1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBCAOZUO1";
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("FJ", "FJ");
            tableMapping.ColumnMappings.Add("LFLL", "LFLL");
            tableMapping.ColumnMappings.Add("FYLL", "FYLL");
            tableMapping.ColumnMappings.Add("RFYL", "RFYL");
            tableMapping.ColumnMappings.Add("RFWD", "RFWD");
            tableMapping.ColumnMappings.Add("PML", "PML");
            tableMapping.ColumnMappings.Add("TQX", "TQX");
            tableMapping.ColumnMappings.Add("LDWD", "LDWD");
            tableMapping.ColumnMappings.Add("RSWD", "RSWD");
            tableMapping.ColumnMappings.Add("SJFS", "SJFS");
            tableMapping.ColumnMappings.Add("GFDN", "GFDN");
            tableMapping.ColumnMappings.Add("LDYL", "LDYL");
            tableMapping.ColumnMappings.Add("LX", "LX");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("ZHFH", "ZHFH");
            tableMapping.ColumnMappings.Add("LFYL", "LFYL");
            tableMapping.ColumnMappings.Add("MQLYL", "MQLYL");
            tableMapping.ColumnMappings.Add("RLB", "RLB");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   GAOLU, trunc(SJ) AS SJ, ROUND(AVG(FJ), 0) AS FJ, ROUND(AVG(LFLL), 2) AS LFLL, ROUND(AVG(FYLL), 2) AS FYLL, 
                ROUND(AVG(LFYL), 2) AS LFYL, ROUND(AVG(RFYL), 2) AS RFYL, ROUND(AVG(RFWD), 2) AS RFWD, ROUND(AVG(PML), 
                2) AS PML, ROUND(AVG(TQX), 2) AS TQX, ROUND(AVG(LDWD), 2) AS LDWD, ROUND(AVG(RSWD), 2) AS RSWD, 
                ROUND(AVG(SJFS), 2) AS SJFS, ROUND(AVG(GFDN), 2) AS GFDN, ROUND(AVG(LDYL), 2) AS LDYL, ROUND(AVG(LX), 0) 
                AS LX, ROUND(AVG(ZHFH), 2) AS ZHFH, ROUND(AVG(MQLYL), 2) AS MQLYL, ROUND(AVG(RLB), 2) AS RLB
FROM      RBCAOZUO
WHERE   (trunc(SJ) >= :sjx) AND (trunc(SJ) <= :sjd) AND (GAOLU = :gaolu)
GROUP BY trunc(SJ), GAOLU
ORDER BY SJ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("sjx", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("sjd", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("gaolu", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBCAOZUO1DataTable dataTable, System.DateTime sjx, System.DateTime sjd, decimal gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(sjx));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sjd));
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(gaolu));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBCAOZUO1DataTable GetData(System.DateTime sjx, System.DateTime sjd, decimal gaolu) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(sjx));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(sjd));
            this.Adapter.SelectCommand.Parameters[2].Value = ((decimal)(gaolu));
            生产数据.RBCAOZUO1DataTable dataTable = new 生产数据.RBCAOZUO1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CQA_IRON_ELEMENT_TEXTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public CQA_IRON_ELEMENT_TEXTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CQA_IRON_ELEMENT_TEXT";
            tableMapping.ColumnMappings.Add("SAMPLE_CODE", "SAMPLE_CODE");
            tableMapping.ColumnMappings.Add("SAMPLE_ADDRESS", "SAMPLE_ADDRESS");
            tableMapping.ColumnMappings.Add("LOGTIME", "LOGTIME");
            tableMapping.ColumnMappings.Add("REPORT_DATE", "REPORT_DATE");
            tableMapping.ColumnMappings.Add("C", "C");
            tableMapping.ColumnMappings.Add("SI", "SI");
            tableMapping.ColumnMappings.Add("MN", "MN");
            tableMapping.ColumnMappings.Add("P", "P");
            tableMapping.ColumnMappings.Add("S", "S");
            tableMapping.ColumnMappings.Add("TI", "TI");
            tableMapping.ColumnMappings.Add("SN", "SN");
            tableMapping.ColumnMappings.Add("SB", "SB");
            tableMapping.ColumnMappings.Add("AS", "AS");
            tableMapping.ColumnMappings.Add("PB", "PB");
            tableMapping.ColumnMappings.Add("NI", "NI");
            tableMapping.ColumnMappings.Add("MO", "MO");
            tableMapping.ColumnMappings.Add("CU", "CU");
            tableMapping.ColumnMappings.Add("CR", "CR");
            tableMapping.ColumnMappings.Add("B", "B");
            tableMapping.ColumnMappings.Add("V", "V");
            tableMapping.ColumnMappings.Add("AL", "AL");
            tableMapping.ColumnMappings.Add("NB", "NB");
            tableMapping.ColumnMappings.Add("ZN", "ZN");
            tableMapping.ColumnMappings.Add("W", "W");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   SAMPLE_CODE, SAMPLE_ADDRESS, to_char(LOGTIME, 'hh24:mi') AS logtime, to_char(REPORT_DATE, 'hh24:mi') 
                AS report_date, C, SI, MN, P, S, TI, SN, SB, ""AS"", PB, NI, MO, CU, CR, B, V, AL, NB, ZN, W
FROM      CQA_IRON_ELEMENT_TEXT cqa_iron_element_text
WHERE   (SAMPLE_TYPE = 'TA') AND (TRUNC(LOGTIME) = :RQ)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.CQA_IRON_ELEMENT_TEXTDataTable dataTable, System.DateTime RQ) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.CQA_IRON_ELEMENT_TEXTDataTable GetData(System.DateTime RQ) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            生产数据.CQA_IRON_ELEMENT_TEXTDataTable dataTable = new 生产数据.CQA_IRON_ELEMENT_TEXTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class RBCAOZUOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OracleClient.OracleDataAdapter _adapter;
        
        private global::System.Data.OracleClient.OracleConnection _connection;
        
        private global::System.Data.OracleClient.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RBCAOZUOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OracleClient.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OracleClient.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OracleClient.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OracleClient.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OracleClient.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "RBCAOZUO";
            tableMapping.ColumnMappings.Add("FJ", "FJ");
            tableMapping.ColumnMappings.Add("LFLL", "LFLL");
            tableMapping.ColumnMappings.Add("FYLL", "FYLL");
            tableMapping.ColumnMappings.Add("LFYL", "LFYL");
            tableMapping.ColumnMappings.Add("RFYL", "RFYL");
            tableMapping.ColumnMappings.Add("RFWD", "RFWD");
            tableMapping.ColumnMappings.Add("PML", "PML");
            tableMapping.ColumnMappings.Add("TQX", "TQX");
            tableMapping.ColumnMappings.Add("LDWD", "LDWD");
            tableMapping.ColumnMappings.Add("RSWD", "RSWD");
            tableMapping.ColumnMappings.Add("SJFS", "SJFS");
            tableMapping.ColumnMappings.Add("GFDN", "GFDN");
            tableMapping.ColumnMappings.Add("LDYL", "LDYL");
            tableMapping.ColumnMappings.Add("LX", "LX");
            tableMapping.ColumnMappings.Add("BZ", "BZ");
            tableMapping.ColumnMappings.Add("GAOLU", "GAOLU");
            tableMapping.ColumnMappings.Add("SJ", "SJ");
            tableMapping.ColumnMappings.Add("HOUR", "HOUR");
            tableMapping.ColumnMappings.Add("ZHFH", "ZHFH");
            tableMapping.ColumnMappings.Add("RID", "RID");
            tableMapping.ColumnMappings.Add("LDWDXB", "LDWDXB");
            tableMapping.ColumnMappings.Add("LDWDDB", "LDWDDB");
            tableMapping.ColumnMappings.Add("LDWDDN", "LDWDDN");
            tableMapping.ColumnMappings.Add("LDWDXN", "LDWDXN");
            tableMapping.ColumnMappings.Add("MQLYL", "MQLYL");
            tableMapping.ColumnMappings.Add("TEMP1", "TEMP1");
            tableMapping.ColumnMappings.Add("TEMP2", "TEMP2");
            tableMapping.ColumnMappings.Add("TEMP3", "TEMP3");
            tableMapping.ColumnMappings.Add("TEMP4", "TEMP4");
            tableMapping.ColumnMappings.Add("TEMP5", "TEMP5");
            tableMapping.ColumnMappings.Add("TEMP6", "TEMP6");
            tableMapping.ColumnMappings.Add("TEMP7", "TEMP7");
            tableMapping.ColumnMappings.Add("TEMP8", "TEMP8");
            tableMapping.ColumnMappings.Add("TEMP9", "TEMP9");
            tableMapping.ColumnMappings.Add("RLB", "RLB");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""RBCAOZUO"" (""FJ"", ""LFLL"", ""FYLL"", ""LFYL"", ""RFYL"", ""RFWD"", ""PML"", ""TQX"", ""LDWD"", ""RSWD"", ""SJFS"", ""GFDN"", ""LDYL"", ""LX"", ""BZ"", ""GAOLU"", ""SJ"", ""HOUR"", ""ZHFH"", ""ROWID"", ""LDWDXB"", ""LDWDDB"", ""LDWDDN"", ""LDWDXN"", ""MQLYL"", ""TEMP1"", ""TEMP2"", ""TEMP3"", ""TEMP4"", ""TEMP5"", ""TEMP6"", ""TEMP7"", ""TEMP8"", ""TEMP9"", ""RLB"") VALUES (:FJ, :LFLL, :FYLL, :LFYL, :RFYL, :RFWD, :PML, :TQX, :LDWD, :RSWD, :SJFS, :GFDN, :LDYL, :LX, :BZ, :GAOLU, :SJ, :HOUR, :ZHFH, :RID, :LDWDXB, :LDWDDB, :LDWDDN, :LDWDXN, :MQLYL, :TEMP1, :TEMP2, :TEMP3, :TEMP4, :TEMP5, :TEMP6, :TEMP7, :TEMP8, :TEMP9, :RLB)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FJ", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LFLL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LFLL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FYLL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "FYLL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LFYL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LFYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RFYL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RFYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RFWD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RFWD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PML", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "PML", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TQX", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TQX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LDWD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RSWD", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RSWD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJFS", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "SJFS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFDN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GFDN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDYL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LDYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LX", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 0, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 0, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HOUR", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "HOUR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHFH", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "ZHFH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.RowId, 0, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDXB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LDWDXB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDDB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LDWDDB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDDN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LDWDDN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDXN", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "LDWDXN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MQLYL", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "MQLYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP1", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP1", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP2", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP2", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP3", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP3", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP4", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP4", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP5", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP5", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP6", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP6", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP7", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP7", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP8", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP8", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TEMP9", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "TEMP9", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RLB", global::System.Data.OracleClient.OracleType.Number, 0, global::System.Data.ParameterDirection.Input, "RLB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.OracleClient.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE  RBCAOZUO 
  SET         FJ = :FJ, LFLL = :LFLL, FYLL = :FYLL, RFYL = :RFYL, LFYL = :LFYL, RFWD = :RFWD, PML = :PML, TQX = :TQX, 
                LDWD = :LDWD, RSWD = :RSWD, SJFS = :SJFS, GFDN = :GFDN, LDYL = :LDYL, LX = :LX, BZ = :BZ, GAOLU = :GAOLU, 
                SJ = :SJ, HOUR = :HOUR, ZHFH = :ZHFH, LDWDXB = :LDWDXB, LDWDDB = :LDWDDB, LDWDDN = :LDWDDN, 
                LDWDXN = :LDWDXN, MQLYL = :MQLYL
WHERE   (""ROWID"" = :RID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FJ", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "FJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LFLL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LFLL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("FYLL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "FYLL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RFYL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "RFYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LFYL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LFYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RFWD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "RFWD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("PML", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "PML", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("TQX", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "TQX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LDWD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RSWD", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "RSWD", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJFS", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "SJFS", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GFDN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GFDN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDYL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LDYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LX", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LX", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("BZ", global::System.Data.OracleClient.OracleType.VarChar, 400, global::System.Data.ParameterDirection.Input, "BZ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("SJ", global::System.Data.OracleClient.OracleType.DateTime, 7, global::System.Data.ParameterDirection.Input, "SJ", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("HOUR", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "HOUR", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("ZHFH", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "ZHFH", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDXB", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LDWDXB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDDB", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LDWDDB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDDN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LDWDDN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("LDWDXN", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "LDWDXN", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("MQLYL", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "MQLYL", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RID", global::System.Data.OracleClient.OracleType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, "RID", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OracleClient.OracleConnection();
            this._connection.ConnectionString = global::LTZN.Properties.Settings.Default.ltznConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OracleClient.OracleCommand[1];
            this._commandCollection[0] = new global::System.Data.OracleClient.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT   FJ, LFLL, FYLL, LFYL, RFYL, RFWD, PML, TQX, LDWD, RSWD, SJFS, GFDN, LDYL, LX, BZ, GAOLU, SJ, HOUR, ZHFH, 
                ""ROWID"" AS RID, LDWDXB, LDWDDB, LDWDDN, LDWDXN, MQLYL, TEMP1, TEMP2, TEMP3, TEMP4, TEMP5, TEMP6, 
                TEMP7, TEMP8, TEMP9, RLB
FROM      RBCAOZUO
WHERE   (TRUNC(SJ) = :RQ) AND (GAOLU = :GAOLU)
ORDER BY HOUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("RQ", global::System.Data.OracleClient.OracleType.DateTime, 1024, global::System.Data.ParameterDirection.Input, "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.OracleClient.OracleParameter("GAOLU", global::System.Data.OracleClient.OracleType.Number, 22, global::System.Data.ParameterDirection.Input, "GAOLU", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(生产数据.RBCAOZUODataTable dataTable, System.DateTime RQ, decimal GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual 生产数据.RBCAOZUODataTable GetData(System.DateTime RQ, decimal GAOLU) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(RQ));
            this.Adapter.SelectCommand.Parameters[1].Value = ((decimal)(GAOLU));
            生产数据.RBCAOZUODataTable dataTable = new 生产数据.RBCAOZUODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据.RBCAOZUODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(生产数据 dataSet) {
            return this.Adapter.Update(dataSet, "RBCAOZUO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    global::System.Nullable<decimal> FJ, 
                    decimal LFLL, 
                    global::System.Nullable<decimal> FYLL, 
                    global::System.Nullable<decimal> LFYL, 
                    global::System.Nullable<decimal> RFYL, 
                    global::System.Nullable<decimal> RFWD, 
                    global::System.Nullable<decimal> PML, 
                    global::System.Nullable<decimal> TQX, 
                    global::System.Nullable<decimal> LDWD, 
                    global::System.Nullable<decimal> RSWD, 
                    global::System.Nullable<decimal> SJFS, 
                    global::System.Nullable<decimal> GFDN, 
                    global::System.Nullable<decimal> LDYL, 
                    global::System.Nullable<decimal> LX, 
                    string BZ, 
                    decimal GAOLU, 
                    global::System.Nullable<global::System.DateTime> SJ, 
                    decimal HOUR, 
                    global::System.Nullable<decimal> ZHFH, 
                    string RID, 
                    global::System.Nullable<decimal> LDWDXB, 
                    global::System.Nullable<decimal> LDWDDB, 
                    global::System.Nullable<decimal> LDWDDN, 
                    global::System.Nullable<decimal> LDWDXN, 
                    global::System.Nullable<decimal> MQLYL, 
                    global::System.Nullable<decimal> TEMP1, 
                    global::System.Nullable<decimal> TEMP2, 
                    global::System.Nullable<decimal> TEMP3, 
                    global::System.Nullable<decimal> TEMP4, 
                    global::System.Nullable<decimal> TEMP5, 
                    global::System.Nullable<decimal> TEMP6, 
                    global::System.Nullable<decimal> TEMP7, 
                    global::System.Nullable<decimal> TEMP8, 
                    global::System.Nullable<decimal> TEMP9, 
                    global::System.Nullable<decimal> RLB) {
            if ((FJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(FJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(LFLL));
            if ((FYLL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(FYLL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LFYL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(LFYL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((RFYL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(RFYL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RFWD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(RFWD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PML.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PML.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TQX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(TQX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LDWD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(LDWD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((RSWD.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(RSWD.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SJFS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(SJFS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((GFDN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(GFDN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LDYL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(LDYL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((LX.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(LX.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(BZ));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(GAOLU));
            if ((SJ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(HOUR));
            if ((ZHFH.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(ZHFH.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((RID == null)) {
                throw new global::System.ArgumentNullException("RID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(RID));
            }
            if ((LDWDXB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(LDWDXB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((LDWDDB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(LDWDDB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LDWDDN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(LDWDDN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((LDWDXN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(LDWDXN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((MQLYL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(MQLYL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((TEMP1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(TEMP1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((TEMP2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(TEMP2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((TEMP3.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(TEMP3.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((TEMP4.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(TEMP4.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((TEMP5.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((decimal)(TEMP5.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((TEMP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((decimal)(TEMP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((TEMP7.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(TEMP7.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((TEMP8.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(TEMP8.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((TEMP9.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((decimal)(TEMP9.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((RLB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(RLB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<decimal> FJ, 
                    decimal LFLL, 
                    global::System.Nullable<decimal> FYLL, 
                    global::System.Nullable<decimal> RFYL, 
                    global::System.Nullable<decimal> LFYL, 
                    global::System.Nullable<decimal> RFWD, 
                    global::System.Nullable<decimal> PML, 
                    global::System.Nullable<decimal> TQX, 
                    global::System.Nullable<decimal> LDWD, 
                    global::System.Nullable<decimal> RSWD, 
                    global::System.Nullable<decimal> SJFS, 
                    global::System.Nullable<decimal> GFDN, 
                    global::System.Nullable<decimal> LDYL, 
                    global::System.Nullable<decimal> LX, 
                    string BZ, 
                    decimal GAOLU, 
                    global::System.Nullable<global::System.DateTime> SJ, 
                    decimal HOUR, 
                    global::System.Nullable<decimal> ZHFH, 
                    global::System.Nullable<decimal> LDWDXB, 
                    global::System.Nullable<decimal> LDWDDB, 
                    global::System.Nullable<decimal> LDWDDN, 
                    global::System.Nullable<decimal> LDWDXN, 
                    global::System.Nullable<decimal> MQLYL, 
                    string RID) {
            if ((FJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(FJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(LFLL));
            if ((FYLL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(FYLL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((RFYL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(RFYL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((LFYL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(LFYL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((RFWD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(RFWD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((PML.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PML.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TQX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(TQX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((LDWD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(LDWD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((RSWD.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(RSWD.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((SJFS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(SJFS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((GFDN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(GFDN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((LDYL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(LDYL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((LX.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(LX.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((BZ == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(BZ));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(GAOLU));
            if ((SJ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(SJ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(HOUR));
            if ((ZHFH.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(ZHFH.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((LDWDXB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(LDWDXB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((LDWDDB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(LDWDDB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((LDWDDN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(LDWDDN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((LDWDXN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(LDWDXN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((MQLYL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(MQLYL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((RID == null)) {
                throw new global::System.ArgumentNullException("RID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(RID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591